https://thayer.github.io/engs50/Notes/sockets/
2
28423
<!DOCTYPEhtml><html><head><metacharset="utf-8"><metahttp-equiv="X-UA-Compatible"content="IE=edge"><metaname="viewport"content="width=device-width,initial-scale=1"><title>NetworkingandSocketProgramming</title><metaname="description"content="InEngs50youwilllearnhowtodesign&buildlarge,reliable,maintainable,andunderstandablesoftwaresystems.IntheprocessyouwilllearntoprograminCwithUnixdevelopmenttools."><linkrel="shortcuticon"href="/engs50/50.png"/><linkrel="stylesheet"href="/engs50/css/main.css"><linkrel="canonical"href="/engs50/Notes/sockets/"></head><body><headerclass="site-header"><aclass="site-title"href="/engs50/"><imgwidth=48align=centersrc="/engs50/50.png"alt="icon">Engs50(CS50)</a><navclass="site-nav">[<ahref="/engs50/Labs/">Labs</a>][<ahref="/engs50/Notes/">Notes</a>][<ahref="/engs50/Reading/">Reading</a>][<ahref="/engs50/Resources/">Resources</a>][<ahref="/engs50/Examples/">Examples</a>]</nav></header><divclass="page-content"><divclass="wrapper"><articleclass="post"><headerclass="post-header"><h1class="post-title">NetworkingandSocketProgramming</h1></header><divclass="post-content"><p>HowdowebuildInternetapplications?Inthislecture,wewilldiscussthesocketAPIandsupportfornetworkcommunicationsbetweenInternethosts.SocketprogrammingisthekeyAPIforprogrammingdistributedapplicationsontheInternet.Ifyouareinterestedingettingdeeperintonetworking,take<em>CS60:ComputerNetworks</em>.</p><p>Socketprogrammingisakeyskillneededforthefinalproject.</p><h3id="goals">Goals</h3><ul><li>tooverviewtheclient-servermodel</li><li>toprovideahigh-levelunderstandingofTCP/IP</li><li>tointroducetheBerkeleySocketsAPIfornetworking</li></ul><h2id="the-client-server-model">Theclient-servermodel</h2><p>Theclient-servermodelisoneofthemostcommonlyusedcommunicationparadigmsinnetworkedsystems.A<em>server</em>isalong-runningprogramthatstandsidleuntilsomeclientsconnecttotheserverandrequestservice.Thus,itisthe<em>client</em>whoinitiatescommunicationwiththe<em>server</em>.Clientsnormallycommunicatewithoneserveratatime,butmostserverscancommunicatewithmultipleclientssimultaneously.Clientsneedsomeadvanceknowledgeoftheserveranditsaddress,buttheserverdoesnotneedtoknowtheaddressof(oreventheexistenceof)theclientpriortotheconnectionbeingestablished.</p><p>Clientandserverscommunicatebymeansofmultiplelayersofnetworkprotocols.InthisclasswefocusontheTCP/IPprotocolsuite.</p><p>WhentheclientandserverarebothconnectedtothesameLocalAreaNetwork(LAN)itlookslikethefollowing:</p><p><imgsrc="/engs50/Notes/sockets/ethernetccp.jpg"alt="ethernet"/></p><hr/><p>AlthoughthediagramshowsanEthernet,thecaseofWi-Fiisexactlyanalogous.</p><p>TheclientandtheservermaybeindifferentLANs,withbothLANsconnectedtoaWideAreaNetwork(WAN)bymeansofrouters.ThelargestWANistheInternet,butcompaniesmayhavetheirownWANs.Thisscenarioisdepictedbelow:</p><p><imgsrc="/engs50/Notes/sockets/wan.jpg"alt="WAN"/></p><hr/><p>Theflowofinformationbetweentheclientandtheservergoesdowntheprotocolstackononeside,thenacrossthenetworkandthenuptheprotocolstackontheotherside.</p><h3id="tcp">TransmissionControlProtocol(TCP)</h3><p>TCPprovidesaconnection-orientedservice,sinceitisbasedon<em>connections</em>betweenclientsandservers.</p><p>WhentheclientcontactstheserveroverTCP,itasksto‘connect’andtheservermustthen‘accept’theconnection.Onceopen,theconnectionbetweena‘socket’ontheclientanda‘socket’ontheserveractsasifthereisa‘stream’ofbytesflowingfromclienttoserver,anda‘stream’ofbytesflowingfromservertoclient.These‘streams’lookandactalmostexactlylikethe<codeclass="language-plaintexthighlighter-rouge">stdin</code>and<codeclass="language-plaintexthighlighter-rouge">stdout</code>streamsyou’reaccustomedto-theclientwritestoitssocketandthebytesstreamovertheconnectiontotheserver,whothenreadsbytesfromitssocket…andviceversa.</p><p>TCPprovidesreliability.WhenaTCPclientsendsdatatotheserver,itrequiresanacknowledgementinreturn.Ifanacknowledgementisnotreceived,TCPautomaticallyretransmitsthedataandwaitsforalongerperiodoftime.TheseacknowledgementsareallhandledbytheTCPlayeroftheprotocolstackandareinvisibletoapplications.</p><h3id="addresses">Socketaddresses</h3><p>TheTCPprotocoldependsontheunderlyingIPprotocol.TCPbundlesbytesfromtheoutboundstreaminto“packets”andaskstheIPlayerto‘route’thosepacketsacrosstheLANorWANtothedestination,wherethereceivingTCPlayerdropsthosebytesitotheinboundstream.InthisclassweuseIPversion4(IPv4)–thetraditional,andstillmostcommon,versionofIP.</p><p>Howdoesthesenderidentifythedestinationofthepackets?withanIPaddress.IntheUnixsocketAPI(aka<em><ahref="https://en.wikipedia.org/wiki/Berkeley_sockets">Berkeleysockets</a></em>)theIPv4socketaddressstructureisnamed<codeclass="language-plaintexthighlighter-rouge">sockaddr_in</code>andisdefinedbyincludingthe<codeclass="language-plaintexthighlighter-rouge">netinet/in.h</code>headerfile.(Ihavefounditsufficienttoinclude<codeclass="language-plaintexthighlighter-rouge">netdb.h</code>fortheclient,or<codeclass="language-plaintexthighlighter-rouge">arpa/inet.h</code>fortheserver,becausetherearemanysocket-relatedincludefilesandtheyallappeartoincludeeachother.)</p><p>Thestandarddefinitionisthefollowing:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="k">struct</span><spanclass="n">in_addr</span><spanclass="p">{</span><spanclass="n">in_addr_t</span><spanclass="n">s_addr</span><spanclass="p">;</span><spanclass="cm">/*32-bitIPv4networkbyteorderedaddress*/</span><spanclass="p">};</span><spanclass="k">struct</span><spanclass="n">sockaddr_in</span><spanclass="p">{</span><spanclass="kt">uint8_t</span><spanclass="n">sin_len</span><spanclass="p">;</span><spanclass="cm">/*lengthofstructure(16)*/</span><spanclass="n">sa_family_t</span><spanclass="n">sin_family</span><spanclass="p">;</span><spanclass="cm">/*AF_INET*/</span><spanclass="n">in_port_t</span><spanclass="n">sin_port</span><spanclass="p">;</span><spanclass="cm">/*16bitTCPorUDPportnumber*/</span><spanclass="k">struct</span><spanclass="n">in_addr</span><spanclass="n">sin_addr</span><spanclass="p">;</span><spanclass="cm">/*32bitIPv4address*/</span><spanclass="kt">char</span><spanclass="n">sin_zero</span><spanclass="p">[</span><spanclass="mi">8</span><spanclass="p">];</span><spanclass="cm">/*notused,butalwayssettozero*/</span><spanclass="p">};</span></code></pre></div></div><p>The<codeclass="language-plaintexthighlighter-rouge">uint8_t</code>datatypeisanunsigned8-bitinteger.</p><h3id="byte-order">HostByteOrdertoNetworkByteOrderconversion</h3><p>Therearetwowaystostoretwo-orfour-byteintegersinmemory:</p><ul><li><p><em>bigendian</em>,withthe<em>most-significant</em>bytefirstandbytesof<em>decreasing</em>significanceasmemoryaddressincreases.See<ahref="https://en.wikipedia.org/wiki/Endianness#Big-endian">diagram</a>.</p></li><li><p><em>littleendian</em>,withthe<em>least-significant</em>bytefirstandbytesof<em>increasing</em>significanceasmemoryaddressincreases.See<ahref="https://en.wikipedia.org/wiki/Endianness#Little-endian">diagram</a>.</p></li></ul><p>SeeWikipediaabout<em><ahref="https://en.wikipedia.org/wiki/Endianness">Endianness</a></em>.</p><p>Werefertotheseordersasthe<em>hostbyteorder</em>.Forexample,anIntelprocessorstoresa32-bitintegerasfourconsecutivebytesinmemoryintheorder1-2-3-4,where4isthemostsignificantbyte,whichislittleendian.IBMPowerPCprocessorswouldstoretheintegerinthebyteorder4-3-2-1,whichisbigendian.</p><p>StandardInternetprotocolssuchasIPandTCPusebig-endianbyteordering.</p><p>ThefollowingfunctionsareprovidedonallUnixplatformstoaidyouconvertingbetween<em>host</em>byteorder(whateveritmaybe)and<em>network</em>byteorder:onabig-endianhost,thesefunctionsdonothing;onalittle-endianmachine,theyswaptheorderofbytes.Codeusingthesefunctionscanthusbecompiledoneitherabig-endianorlittle-endianmachineandworkcorrectly.</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include&lt;netinet/in.h&gt;</span><spanclass="kt">uint16_t</span><spanclass="nf">htons</span><spanclass="p">(</span><spanclass="kt">uint16_t</span><spanclass="n">host16bitvalue</span><spanclass="p">);</span><spanclass="c1">//hosttonetworkshort</span><spanclass="kt">uint32_t</span><spanclass="nf">htonl</span><spanclass="p">(</span><spanclass="kt">uint32_t</span><spanclass="n">host32bitvalue</span><spanclass="p">);</span><spanclass="c1">//hosttonetworklong</span><spanclass="kt">uint16_t</span><spanclass="nf">ntohs</span><spanclass="p">(</span><spanclass="kt">uint16_t</span><spanclass="n">net16bitvalue</span><spanclass="p">);</span><spanclass="c1">//networktohostshort</span><spanclass="kt">uint32_t</span><spanclass="nf">ntohl</span><spanclass="p">(</span><spanclass="kt">uint32_t</span><spanclass="n">net32bitvalue</span><spanclass="p">);</span><spanclass="c1">//networktohostlong</span></code></pre></div></div><p>Innetworkparlance,<em>short</em>means16bitsand<em>long</em>means32bits.Thefirsttwofunctionsreturnthevaluein<em>networkbyteorder</em>(16and32bit,respectively).Thelattertwofunctionsreturnthevaluein<em>hostbyteorder</em>(16and32bit,respectively).</p><p>Thetype<codeclass="language-plaintexthighlighter-rouge">uint32_t</code>referstoanunsigned32-bitinteger.Thetype<codeclass="language-plaintexthighlighter-rouge">uint16_t</code>referstoanunsigned16-bitinteger.Thetype<codeclass="language-plaintexthighlighter-rouge">uint8_t</code>referstoanunsigned8-bitinteger.</p><h2id="api">TCPsocketAPI</h2><p>FormoreinformationaboutthesocketAPI,read<em><ahref="https://en.wikipedia.org/wiki/Berkeley_sockets">Berkeleysockets</a></em>(onWikipedia)andthe<codeclass="language-plaintexthighlighter-rouge">man</code>pagesforthefunctionsyouseeusedinbelow.</p><p>ThesequenceoffunctioncallsfortheclientandaserverparticipatinginaTCPconnectionispresentedbelow:</p><p><imgsrc="/engs50/Notes/sockets/TCPsockets.jpg"alt="Sockets"/></p><hr/><p>Asshowninthefigure,thestepsforestablishingaTCPsocketontheclientsidearethefollowing:</p><ul><li>Createasocketusingthe<codeclass="language-plaintexthighlighter-rouge">socket()</code>function;</li><li>Connectthesockettotheaddressoftheserverusingthe<codeclass="language-plaintexthighlighter-rouge">connect()</code>function;</li><li>Sendandreceivedatabymeansofthe<codeclass="language-plaintexthighlighter-rouge">write()</code>and<codeclass="language-plaintexthighlighter-rouge">read()</code>functions.</li></ul><p>ThestepsinvolvedinestablishingaTCPsocketontheserversideareasfollows:</p><ul><li>Createasocketwiththe<codeclass="language-plaintexthighlighter-rouge">socket()</code>function;</li><li>Bindthesockettoanaddressusingthe<codeclass="language-plaintexthighlighter-rouge">bind()</code>function;</li><li>Listenforconnectionswiththe<codeclass="language-plaintexthighlighter-rouge">listen()</code>function;</li><li>Acceptaconnectionwiththe<codeclass="language-plaintexthighlighter-rouge">accept()</code>functionsystemcall.Thiscalltypicallyblocksuntilaclientconnectswiththeserver.</li><li>Sendandreceivedatabymeansof<codeclass="language-plaintexthighlighter-rouge">write()</code>and<codeclass="language-plaintexthighlighter-rouge">read()</code>.</li></ul><p>Theactualdeterminationofwhichsidereadsfirst,andwhichsidewritesfirst,dependsontheparticularprotocolrunningatopTCP.</p><h3id="socket">The<codeclass="language-plaintexthighlighter-rouge">socket()</code>function</h3><p>Thefirststepistocallthe<codeclass="language-plaintexthighlighter-rouge">socket()</code>function,specifyingthetypeofcommunicationprotocol(TCPbasedonIPv4,TCPbasedonIPv6,UDP).</p><p>Thefunctionisdefinedasfollows:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include&lt;sys/socket.h&gt;</span><spanclass="kt">int</span><spanclass="nf">socket</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="n">family</span><spanclass="p">,</span><spanclass="kt">int</span><spanclass="n">type</span><spanclass="p">,</span><spanclass="kt">int</span><spanclass="n">protocol</span><spanclass="p">);</span></code></pre></div></div><p>where<codeclass="language-plaintexthighlighter-rouge">family</code>specifiestheprotocolfamily(<codeclass="language-plaintexthighlighter-rouge">AF_INET</code>fortheIPv4protocols),<codeclass="language-plaintexthighlighter-rouge">type</code>isaconstantdescribedthetypeofsocket(<codeclass="language-plaintexthighlighter-rouge">SOCK_STREAM</code>forstream(TCP)socketsand<codeclass="language-plaintexthighlighter-rouge">SOCK_DGRAM</code>fordatagram(UDP)sockets),and<codeclass="language-plaintexthighlighter-rouge">protocol</code>isaparameterthatcanbesettozeroforthiscourse.</p><p>Thefunctionreturnsanon-negativeinteger(or<codeclass="language-plaintexthighlighter-rouge">-1</code>onerror).Thisnumberisa‘filedescriptor’.</p><blockquote><p><strong><em>Filedescriptors:</em></strong>Filedescriptorsaresmallnon-negativeintegersthatthekernelusestoidentifythefilesbeingaccessedbyaparticularprocess.Wheneveritopensanexistingfileorcreatesanewfile,thekernelreturnsafiledescriptorthatisusedtoreadorwritethefile.<em>Theyarenotthesamethingasstdio‘filepointers’.</em>Thestdiopackage‘wraps’filedescriptorsinits<codeclass="language-plaintexthighlighter-rouge">FILE*</code>typetoprovideamoreconvenientAPI.Byconvention,filedescriptor0isthe‘standardinput’(knowninstdioas<codeclass="language-plaintexthighlighter-rouge">stdin</code>),filedescriptor1isthe‘standardoutput’(wrappedbystdioas<codeclass="language-plaintexthighlighter-rouge">stdout</code>),andfiledescriptor2isthe‘standarderror’(wrappedbystdioas<codeclass="language-plaintexthighlighter-rouge">stderr</code>),</p></blockquote><h3id="bind">The<codeclass="language-plaintexthighlighter-rouge">bind()</code>function</h3><p>The<codeclass="language-plaintexthighlighter-rouge">bind()</code>assignsalocalprotocoladdresstoasocket.WiththeInternetprotocols,theaddressisthecombinationofanIPv4addressanda16-bitTCPportnumber.</p><p>Thefunctionisdefinedasfollows:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include&lt;sys/socket.h&gt;</span><spanclass="kt">int</span><spanclass="nf">bind</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="n">sockfd</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="k">struct</span><spanclass="n">sockaddr</span><spanclass="o">*</span><spanclass="n">servaddr</span><spanclass="p">,</span><spanclass="n">socklen_t</span><spanclass="n">addrlen</span><spanclass="p">);</span></code></pre></div></div><p>where<codeclass="language-plaintexthighlighter-rouge">sockfd</code>isthesocketdescriptor,<codeclass="language-plaintexthighlighter-rouge">servaddr</code>pointstoasocketaddressstructureand<codeclass="language-plaintexthighlighter-rouge">addrlen</code>isitslength..</p><p><codeclass="language-plaintexthighlighter-rouge">bind()</code>returns<codeclass="language-plaintexthighlighter-rouge">0</code>ifitsucceeds,<codeclass="language-plaintexthighlighter-rouge">-1</code>onerror.</p><p>Thisuseofthegenericsocketaddress<codeclass="language-plaintexthighlighter-rouge">sockaddr</code>requiresthatanycallstothesefunctionsmustcastthepointertotheprotocol-specificaddressstructure.ForexampleforanIPv4socketstructurethatweuseinthisclass:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="k">struct</span><spanclass="n">sockaddr_in</span><spanclass="n">serv</span><spanclass="p">;</span><spanclass="cm">/*IPv4socketaddressstructure*/</span><spanclass="n">bind</span><spanclass="p">(</span><spanclass="n">sockfd</span><spanclass="p">,</span><spanclass="p">(</span><spanclass="k">struct</span><spanclass="n">sockaddr</span><spanclass="o">*</span><spanclass="p">)</span><spanclass="o">&amp;</span><spanclass="n">serv</span><spanclass="p">,</span><spanclass="k">sizeof</span><spanclass="p">(</span><spanclass="n">serv</span><spanclass="p">))</span></code></pre></div></div><p>AprocesscanbindaspecificIPaddress/porttoitssocket.Normally,aTCPclientdoesnotbindanIPaddresstoitssocket;thekernelchoosesthesourceIP,basedontheoutgoinginterfacethatisused,andassignsanunusedportnumber.ForaTCPserver,<codeclass="language-plaintexthighlighter-rouge">bind</code>isrequiredandrestrictsthesockettoreceiveincomingclientconnectionsdestinedtothatIPaddressandport;thatsaid,theservercanpassawildcardaddressto<codeclass="language-plaintexthighlighter-rouge">bind</code>andallowthesystemtochooseanaddressandunusedportnumber.</p><h3id="listen">The<codeclass="language-plaintexthighlighter-rouge">listen()</code>function</h3><p>The<codeclass="language-plaintexthighlighter-rouge">listen()</code>functionconvertsanunconnectedsocketintoapassivesocket,indicatingthatthekernelshouldacceptincomingconnectionrequestsdirectedtothissocket.Itisdefinedasfollows:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include&lt;sys/socket.h&gt;</span><spanclass="kt">int</span><spanclass="nf">listen</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="n">sockfd</span><spanclass="p">,</span><spanclass="kt">int</span><spanclass="n">backlog</span><spanclass="p">);</span></code></pre></div></div><p>where<codeclass="language-plaintexthighlighter-rouge">sockfd</code>isthesocketdescriptorand<codeclass="language-plaintexthighlighter-rouge">backlog</code>isthemaximumnumberofconnectionsthekernelshouldqueueforthissocket.The<codeclass="language-plaintexthighlighter-rouge">backlog</code>argumentprovidesanhinttothesystemofthenumberofoutstandingconnectrequeststhatitshouldenqueueinbehalfoftheprocess.Oncethequeueisfull,thesystemwillrejectadditionalconnectionrequests.The<codeclass="language-plaintexthighlighter-rouge">backlog</code>valuemustbechosenbasedontheexpectedloadoftheserver.</p><p>Thefunction<codeclass="language-plaintexthighlighter-rouge">listen()</code>returns<codeclass="language-plaintexthighlighter-rouge">0</code>ifitsucceeds,<codeclass="language-plaintexthighlighter-rouge">-1</code>onerror.</p><h3id="connect">The<codeclass="language-plaintexthighlighter-rouge">connect()</code>function</h3><p>The<codeclass="language-plaintexthighlighter-rouge">connect()</code>functionisusedbyaTCPclienttoestablishaconnectionwithaTCPserver.</p><p>Thefunctionisdefinedasfollows:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include&lt;sys/socket.h&gt;</span><spanclass="kt">int</span><spanclass="nf">connect</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="n">sockfd</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="k">struct</span><spanclass="n">sockaddr</span><spanclass="o">*</span><spanclass="n">servaddr</span><spanclass="p">,</span><spanclass="n">socklen_t</span><spanclass="n">addrlen</span><spanclass="p">);</span></code></pre></div></div><p>where<codeclass="language-plaintexthighlighter-rouge">sockfd</code>isthesocketdescriptorreturnedbythecallto<codeclass="language-plaintexthighlighter-rouge">socket()</code>and<codeclass="language-plaintexthighlighter-rouge">servaddr</code>pointstoasocketaddressstructureand<codeclass="language-plaintexthighlighter-rouge">addrlen</code>isitslength.</p><p>Thefunctionreturns<codeclass="language-plaintexthighlighter-rouge">0</code>ifitsucceedsinestablishingaTCPconnection,and<codeclass="language-plaintexthighlighter-rouge">-1</code>otherwise.</p><p>Theclientdoesnothavetocall<codeclass="language-plaintexthighlighter-rouge">bind()</code>beforecallingthisfunction:theclient’sUNIXkernelwillchoosebothanephemeralportandthesourceIPifnecessary.</p><h3id="accept">The<codeclass="language-plaintexthighlighter-rouge">accept()</code>function</h3><p>The<codeclass="language-plaintexthighlighter-rouge">accept()</code>functionisusedtoretrieveaconnectrequest,createanewsocketjustliketheoriginalone,andallocateanewfiledescriptorforthatsocket.Itisdefinedasfollows:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include&lt;sys/socket.h&gt;</span><spanclass="kt">int</span><spanclass="nf">accept</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="n">sockfd</span><spanclass="p">,</span><spanclass="k">struct</span><spanclass="n">sockaddr</span><spanclass="o">*</span><spanclass="n">cliaddr</span><spanclass="p">,</span><spanclass="n">socklen_t</span><spanclass="o">*</span><spanclass="n">addrlen</span><spanclass="p">);</span></code></pre></div></div><p>where<codeclass="language-plaintexthighlighter-rouge">sockfd</code>isanewfiledescriptorthatisconnectedtotheclientthatcalledthe<codeclass="language-plaintexthighlighter-rouge">connect()</code>.The<codeclass="language-plaintexthighlighter-rouge">cliaddr</code>and<codeclass="language-plaintexthighlighter-rouge">addrlen</code>argumentsareusedtoreturntheprotocoladdressoftheclient.Thenewsocketdescriptorhasthesamesockettypeandaddressfamilyoftheoriginalsocket.Theoriginalsocketpassedto<codeclass="language-plaintexthighlighter-rouge">accept()</code>isnotassociatedwiththeconnection,butinsteadremainsavailabletoreceiveadditionalconnectrequests.Thekernelcreatesoneconnectedsocketforeachclientconnectionthatisaccepted.</p><p>Ifwedon’tcareabouttheclient’sidentity,wecansetthe<codeclass="language-plaintexthighlighter-rouge">cliaddr</code>and<codeclass="language-plaintexthighlighter-rouge">addrlen</code>to<codeclass="language-plaintexthighlighter-rouge">NULL</code>.Otherwise,beforecallingthe<codeclass="language-plaintexthighlighter-rouge">accept()</code>function,the<codeclass="language-plaintexthighlighter-rouge">cliaddr</code>parameterhastobesettoabufferlargeenoughtoholdtheaddressandsettheintegerpointedby<codeclass="language-plaintexthighlighter-rouge">addrlen</code>tothesizeofthebuffer.</p><h2id="tcp-example">TCPclient/serverexample</h2><p>Inthisexample,<ahref="/engs50/Examples/client-server">client-server</a>,weseeabasicTCPclientthatcantalktoourbasicTCPserver.</p><p>Thiscodedemonstrates</p><ul><li>theserver’sloopoverclients,andhandlingeachclientinturn</li><li>theserver-sideflow:<codeclass="language-plaintexthighlighter-rouge">socket</code>,<codeclass="language-plaintexthighlighter-rouge">bind</code>,<codeclass="language-plaintexthighlighter-rouge">listen</code>,<codeclass="language-plaintexthighlighter-rouge">accept</code>,<codeclass="language-plaintexthighlighter-rouge">read</code>,<codeclass="language-plaintexthighlighter-rouge">close</code>7*theclient-sideflow:<codeclass="language-plaintexthighlighter-rouge">socket</code>,<codeclass="language-plaintexthighlighter-rouge">connect</code>,<codeclass="language-plaintexthighlighter-rouge">write</code>,<codeclass="language-plaintexthighlighter-rouge">close</code></li><li>theuseof<codeclass="language-plaintexthighlighter-rouge">getsockname()</code>toretrievetheportnumberboundtoasocket</li><li>theuseof<codeclass="language-plaintexthighlighter-rouge">gethostbyname()</code>tofindtheIPaddressforahostname</li><li>theuseof<codeclass="language-plaintexthighlighter-rouge">bzero()</code>tozeroallbytesinabuffer</li><li>theuseof<codeclass="language-plaintexthighlighter-rouge">bcopy()</code>tocopyallbytesfromonebuffertoanother</li><li>a<codeclass="language-plaintexthighlighter-rouge">read</code>/<codeclass="language-plaintexthighlighter-rouge">write</code>loop,recognizingthat<codeclass="language-plaintexthighlighter-rouge">read</code>doesnotalwaysfillthebuffer</li></ul><!--Seethein-classscriptfrom[flume](/engs50/Notes/sockets/script-flume.txt)and[Mac](/engs50/Notes/sockets/script-mac.txt).--><h2id="http-example">HTTP-over-TCPclient/serverexample</h2><p>Inthisexample,<ahref="/engs50/Examples/client-server-http">client-server-http</a>,weenhancethebasicexampletosupportHTTP.TheclientcanconnecttoourHTTPserver,ortorealHTTPservers.TheservercanserveourbasicHTTPclient,orrealbrowsers.</p><p>Thiscodedemonstrates</p><ul><li>theHTTPprotocolonbothserverandclientside</li><li>theuseof<codeclass="language-plaintexthighlighter-rouge">fdopen()</code>toconverta‘filedescriptor’intoa‘filepointer’usablewithstdioandourCS50<codeclass="language-plaintexthighlighter-rouge">file.c</code>module.</li></ul><!--Seeagainthein-classscriptfrom[flume](/engs50/Notes/sockets/script-flume.txt)and[Mac](/engs50/Notes/sockets/script-mac.txt).--><h3id="to-learn-more">Tolearnmore</h3><p>Formoredetailsaboutthehandshakeprotocolsseethisexcellent<ahref="https://upload.wikimedia.org/wikipedia/commons/f/f6/Tcp_state_diagram_fixed_new.svg">TCPstatediagramonWikipedia</a></p><h2id="activity">Activity</h2><p>Intoday’s<ahref="activity.html">activity</a>yourgroupwillcopyandinstalltheexamplecodeandtryitout!</p></div></article></div></div><footerclass="site-footer"><divclass="wrapper"><h2class="footer-heading">Engs50(CS50)--DartmouthCollege</h2><p><fontsize=-1>ThisversionofthecourseisbaseduponthosedesignedbyProfessorsPalmer,Kotz,Zhou,Campbell,andBalkcom.Iamdeeplyindebtedtotheseoutstandingeducators.--<ahref="https://engineering.dartmouth.edu/people/faculty/stephen-taylor/">StephenTaylor</a></font></p><p><small>Thispagewaslastupdatedon<strong>2023-01-05</strong>at<strong>11:31</strong>.</small></p></div></footer></body></html>
