https://thayer.github.io/engs50/Notes/cohesion/
2
11317
<!DOCTYPEhtml><html><head><metacharset="utf-8"><metahttp-equiv="X-UA-Compatible"content="IE=edge"><metaname="viewport"content="width=device-width,initial-scale=1"><title>Cohesionandcoupling</title><metaname="description"content="InEngs50youwilllearnhowtodesign&buildlarge,reliable,maintainable,andunderstandablesoftwaresystems.IntheprocessyouwilllearntoprograminCwithUnixdevelopmenttools."><linkrel="shortcuticon"href="/engs50/50.png"/><linkrel="stylesheet"href="/engs50/css/main.css"><linkrel="canonical"href="/engs50/Notes/cohesion/"></head><body><headerclass="site-header"><aclass="site-title"href="/engs50/"><imgwidth=48align=centersrc="/engs50/50.png"alt="icon">Engs50(CS50)</a><navclass="site-nav">[<ahref="/engs50/Labs/">Labs</a>][<ahref="/engs50/Notes/">Notes</a>][<ahref="/engs50/Reading/">Reading</a>][<ahref="/engs50/Resources/">Resources</a>][<ahref="/engs50/Examples/">Examples</a>]</nav></header><divclass="page-content"><divclass="wrapper"><articleclass="post"><headerclass="post-header"><h1class="post-title">Cohesionandcoupling</h1></header><divclass="post-content"><h3id="goals">Goals</h3><p>todiscuss</p><ul><li><em>routines</em>-typesandnames</li><li><em>cohesion</em>-andwhywewantstrongcohesion</li><li><em>coupling</em>-andwhywewantweakcoupling</li></ul><p>Theconceptsintoday’slecturecomefromchapter5of<em>CodeComplete</em>bySteveMcConnell.[MicrosoftPress,1993.]</p><h2id="routines">Routines</h2><p>Weoftenusetheword<em>routine</em>asageneralconcept,torefertoa<em>function</em>ora<em>procedure</em>.Wetypicallyusetheword<em>procedure</em>torefertoafunctionwithnoreturnvalue.Inotherlanguages,routinesmightbecalled<em>subroutines</em>or<em>methods</em>.</p><p>Therearemanyreasonstobreakaprograminto<em>routines</em>:</p><ul><li>Reducecomplexity</li><li>Avoidduplicatecode</li><li>Limiteffectsofchanges(narrowscopeofchangetoaroutine)</li><li>Hidesequences(aformofinformationhiding)</li><li>Improveperformance(optimizeinoneplace)</li><li>Centralizecontrol(e.g.,controllingdevices,files,datastructures…moreinformationhiding)</li><li>Hidedatastructures(ADTs)</li><li>Hideglobaldata(accessroutinescentralizecontrolofglobals)</li><li>Hidepointeroperations(makesiteasiertoread)</li><li>Promotecodereuse(easiertoreusecodeinaroutine)</li><li>Planforafamilyofprograms(isolatepartsthatmaychangeinafewroutines)</li><li>Improvereadability(namedroutineismorereadable;avoiddeepnesting,etc)</li><li>Improveportability(isolatenonportablefeatures)</li><li>Isolatecomplexoperations(algorithm,protocols,etc)</li><li>Isolateuseofnonstandardlanguagefunctions(isolatenonportablefeatures)</li><li>Simplifycomplicatedbooleantests(inlinesaregreathere)</li></ul><p>Routinesshouldbewellnamed:</p><ul><li>a<em>procedure</em>nameshouldbeastrongverbfollowedbyobject(like<em>printCalendar()</em>).</li><li>a<em>function</em>nameshoulddescribeitsreturnvalue(like<em>numberOfNonzeros()</em>).</li><li>a<em>booleanfunction</em>nameshouldsoundlikeaquestion(like<em>IsInternalURL()</em>).</li></ul><p>Agoodroutinename</p><ul><li>avoidsmeaninglessverbs(like<em>do</em>,<em>perform</em>)</li><li>describeseverythingtheroutinedoes</li><li>isaslongasnecessary</li><li>followsnamingconventions!</li></ul><p>Aroutine’sbodyshouldnotbe<strong>toolong</strong>.Ifyoufindyourroutineapproaching200lines,youshouldbreakitup-orhaveadarngoodreasonyoushouldnotbreakitup.</p><h3id="cohesion">Cohesion</h3><blockquote><p>“Cohesionreferstohowclosely[orstrongly]theoperationsinaroutinearerelated.”–McConnell</p></blockquote><p>Onestudyfoundthat50%ofhigh-cohesionroutineswerefault-free,while18%oflow-cohesionroutineswerefault-free.</p><p>Goodroutineshave<strong><em>strongcohesion</em></strong>.</p><p><strong>Acceptablecohesion</strong>:</p><ul><li><strong>Functionalcohesion</strong>(strongestandbestkind):performsoneandonlyoneoperation.</li><li><strong>Sequentialcohesion</strong>:containsoperationsthatmustbeperformedinasequentialorder.</li><li><strong>Communicationalcohesion</strong>:containsoperationsthatmakeuseofthesamedata,butarenototherwiserelated.</li><li><strong>Temporalcohesion</strong>:containsoperationsthatdoseveralthings,becauseallaredoneatthesametime.</li></ul><p><strong>Unacceptablecohesion</strong>:</p><ul><li><strong>Proceduralcohesion</strong>:containsoperationsthatmustbeperformedinasequentialorder,butdon’tsharethesamedata.</li><li><strong>Logicalcohesion</strong>:severalthingsinaroutine,onlyoneexecuted,dependingonaflagparameter.(Exception-itcanbeokifusinga<codeclass="language-plaintexthighlighter-rouge">switch</code>statementtocalloneofmanyother(cohesive)functions.)</li><li><strong>Coincidentalcohesion</strong>:noapparentreasonforthingstobetogetherinaroutine!</li></ul><h3id="coupling">Coupling</h3><blockquote><p>“Thedegreeofcouplingreferstothestrengthofaconnectionbetweentworoutines.Couplingisacomplementtocohesion.”–McConnell</p></blockquote><p>Goodcodehas<strong><em>loosecoupling</em></strong>amongroutines.</p><blockquote><p>“Makethecouplingofroutinesassimpleaspossible.”</p></blockquote><p><strong>Criteria</strong>forevaluatingcouplingbetweenroutines:</p><ul><li><strong>size</strong>(numberofconnections)</li><li><strong>intimacy</strong>(directnessofconnection;bettertousedirectparameterpassingthanindirectglobalvariables)</li><li><strong>visibility</strong>(bestifconnectionisobvious)</li><li><strong>flexibility</strong>(howeasilyyoucanchangeconnections)</li></ul><p>Goforminimalinterconnectedness,andmakewhatinterconnectionsyouhavesimpleandobvious.“Ifaprogramwereapieceofwood,you’dtrytosplititwiththegrain.”</p><h4id="kinds-of-coupling">Kindsofcoupling</h4><ul><li><strong>Simple-datacoupling</strong>:theonlydatapassedfromoneroutinetoanotheristhroughparameters,andisnonstructured.</li><li><strong>Data-structurecoupling</strong>:oneroutinepassesadatastructuretoanother;bestifitreallyneedsthewholedatastructure.</li><li><strong>Controlcoupling</strong>:oneroutinetellstheotherwhattodo.</li><li><strong>Global-datacoupling</strong>:tworoutinesusethesameglobaldata;maybetolerableifread-only.</li><li><strong>Pathologicalcoupling</strong>:oneroutineusesthedatainsidetheotherroutine.(SomewhathardtodoinCandC++.)</li></ul><blockquote><p>“Trytocreateroutinesthatdependlittleonotherroutines.”</p></blockquote><h4id="defensive-programming">Defensiveprogramming</h4><p>Bestpractices:</p><ul><li>Useassert()orotherteststoinsertsanitychecksintoyourcode.</li><li>Beparticularlysuspiciousofparametersandinputvaluesthatcomefromanothermodule(includingtheuser!),i.e.,datathatcrossesamoduleinterface.</li></ul><h4id="routine-parameters">Routineparameters</h4><p>Bestpractices:</p><ul><li>Putparametersininput-modify-outputorder;put“status”or“error”variableslast.</li><li>Usealltheparameters.</li><li>Useaconsistentorderamongsimilarroutines.</li><li>Documentassumptionsaboutparameters:<em>Preconditions</em>areassumptionsabouttheparameters(orinternaldata-structurestate)beforetheroutineexecutes,and<em>postconditions</em>areassumptionsabouttheparameters,datastructure,andreturnvalueaftertheroutineexits.</li></ul><h4id="macros">Macros</h4><p>Youcanwrite<em>macros</em>inCwith#define-thesearehandledbytheCpreprocessor.Macroscanbehandy,onoccasion,butitisusuallybettertouse<codeclass="language-plaintexthighlighter-rouge">inline</code>functionsor<codeclass="language-plaintexthighlighter-rouge">const</code>variablesforthesepurposes.Yougetbettersyntax,typechecking,andbetterdebuggersupport.</p><h2id="modules">Modules</h2><p>A<em>module</em>isacollectionofrelatedroutinesthat,together,encapsulateadatastructure,subsystem,ortask.Inobject-orientedprogramming,amoduleistypicallycalleda<em>class</em>.</p><p>Whymodules?</p><ul><li>Itissometimesnecessarytohavestrongcouplingbetweenroutines.</li><li>Inthatcaseyoushouldgroupthoseroutinesintoa<em>module</em>;themodulehasstrongcohesion.</li><li>Striveforstrongintra-modulecohesionandlooseinter-modulecoupling.</li><li>Awell-designedmodule(inC)orclass(inC++orJava)encourages<em>informationhiding</em>.</li></ul><h4id="information-hiding">Informationhiding</h4><p>Agoodmoduleservesto“hide”implementationdetailsinsidethemodule,providingacleanabstractionandclearinterfacetoothermodules.</p><p>Eachmoduleprogrammermakesmanyimplementationdecisions,whichshouldlargelybeunknowntocodeoutsidethemodule.Thusthemoduleis</p><ul><li>lesscoupledtoothers,</li><li>moremaintainable,</li><li>moreself-testable,</li><li>morereplacable,</li><li>moredebuggable(caninsertdebuggingcodeeasily),</li><li>morereliable(caninsertchecksinafewplaces),</li><li>moreunderstandable(hidescomplexity).</li></ul><h4id="collaborative-work">Collaborativework</h4><p>Modules(classes)areanexcellentmechanismfordividingworkamongprogrammers,becausemoduleboundariesandinterfacesareclear,andthereisotherwiselittlecoupling.Thus,themoduleprogrammerhaswideflexibilityandauthorityontheimplementationdetailsofhermodule,aslongasshestickstotheagreed-uponinterfaceforthemoduleandclearlydocumentstheinterface.</p><h2id="activity">Activity</h2><p>Intoday’s<ahref="activity.html">activity</a>yourgroupwilllookatsome<ahref="/engs50/Notes/cohesion/example.c">example</a>codeandcommentonitsnaming,cohesion,andcoupling.</p></div></article></div></div><footerclass="site-footer"><divclass="wrapper"><h2class="footer-heading">Engs50(CS50)--DartmouthCollege</h2><p><fontsize=-1>ThisversionofthecourseisbaseduponthosedesignedbyProfessorsPalmer,Kotz,Zhou,Campbell,andBalkcom.Iamdeeplyindebtedtotheseoutstandingeducators.--<ahref="https://engineering.dartmouth.edu/people/faculty/stephen-taylor/">StephenTaylor</a></font></p><p><small>Thispagewaslastupdatedon<strong>2023-01-05</strong>at<strong>11:31</strong>.</small></p></div></footer></body></html>
