https://thayer.github.io/engs50/Notes/bugs/
2
65059
<!DOCTYPEhtml><html><head><metacharset="utf-8"><metahttp-equiv="X-UA-Compatible"content="IE=edge"><metaname="viewport"content="width=device-width,initial-scale=1"><title>Bugs&amp;Testing</title><metaname="description"content="InEngs50youwilllearnhowtodesign&buildlarge,reliable,maintainable,andunderstandablesoftwaresystems.IntheprocessyouwilllearntoprograminCwithUnixdevelopmenttools."><linkrel="shortcuticon"href="/engs50/50.png"/><linkrel="stylesheet"href="/engs50/css/main.css"><linkrel="canonical"href="/engs50/Notes/bugs/"></head><body><headerclass="site-header"><aclass="site-title"href="/engs50/"><imgwidth=48align=centersrc="/engs50/50.png"alt="icon">Engs50(CS50)</a><navclass="site-nav">[<ahref="/engs50/Labs/">Labs</a>][<ahref="/engs50/Notes/">Notes</a>][<ahref="/engs50/Reading/">Reading</a>][<ahref="/engs50/Resources/">Resources</a>][<ahref="/engs50/Examples/">Examples</a>]</nav></header><divclass="page-content"><divclass="wrapper"><articleclass="post"><headerclass="post-header"><h1class="post-title">Bugs&Testing</h1></header><divclass="post-content"><h3id="goals">Goals</h3><p>Inthislecturewetalkaboutbugsandintroducetheartoftesting.</p><ul><li>typesofbugs</li><li>thedifferencebetween<em>debugging</em>and<em>testing</em></li><li>whenandwhytotest</li><li>variousapproachestotesting</li></ul><p>Butfirst,let’stalkaboutbugs.</p><h2id="bugs">Bugs</h2><blockquote><p>From<em><ahref="http://www5.in.tum.de/~huckle/FightingBugs.pdf">FightingBugs:Remove,Retry,Replicate,andRejuvenate</a></em>,byGrottkeandTrivedi.</p></blockquote><p><strong><em>Bohrbugs</em></strong>.Mostbugsarereproducible.Theyalwaysoccurunderthesameset(s)ofcircumstances.Thesehavebeendescribedas<em>Bohrbugs</em>,inreferencetothesimpleatomicmodelofNielsBohrthatbroughtconsistencyandpredictabilitytothestudyofphysicsattheatomiclevel.</p><p><strong><em>Mandelbugs</em></strong>.However,bugsdon’talwayscooperate.It’sacommonexperiencetohavebugs“disappear”everytimeyoutrytoshowittosomeoneelse,onlytoreturnlateraftertheotherpersonhasleft.</p><p>Therecouldbemanyexplanations.G&amp;Tmentionedseveral:(1)varyingerror-propagationdelayand(2)variationsinsystemsoutsideyoursoftware,suchasvariationsinthecompiler(anditsconfiguration),useraccountconfiguration,operatingsystem(anditsconfiguration),networkconnection(orunreliabilityofsaidconnection),toanalogorsensorhardware(whichsometimehasnon-deterministicbehavior),orvariationsinthephysicalenvironment(forsoftwarethatsensesorinteractswiththerealworld).</p><p>Bugsthatdon’tappeartobetheresultofalogicalchainofeventsaresometimescalled<em>Mandelbugs</em>(afterBenoitMandelbrot,aleadingmathematicianknownforhisworkonFractals).</p><p><strong><em>Heisenbugs</em></strong>.AsubsetofMandelbugsarethe<em>Heisenbugs</em>,namedafterWernerHeisenberg’sUncertaintyPrinciple.Thesealsoresultinchaoticorunpredictablebehavior,buttheyarealittletoughertofigureoutbecausetheirbehaviorcanchangewhenyoutrytoexaminethem.PrimeexamplesofHeisenbugsaresometimingproblemsandotherswheretheveryactofprobingthebugcanintroducesideeffects.</p><p><strong><em>Bitrot</em></strong>.Finally,thereareaging-relatedbugs,alsoreferredtoas<em>bitrot</em>.Systemsthatrunforalongtimecaneventuallysufferafailureduetotheseslow-effectbugs.TheyareusuallyBohrBugs,sincetheyarerepeatable,buttheyareseldomfoundintestingduetothelongdurationbeforetheycausetrouble.(Example:Slowmemoryleaks.)Thesearethebugsthataremostoftenhandledbyestablishingpoliciesforascheduleonwhichapplicationsorcomputersareperiodicallyrestartedevenwhenallseemswell.Thispracticedoesn’tcomewithoutacost,especiallyifyouthinkofthepersonneltimerequiredtodoitandtheinconveniencetosystemusers/customers.</p><p>Anotherformofbitrotoccurstosoftwarethatneedstoliveforyears,spanningmanygenerationsoftheunderlyingsoftwareandhardware.Aprogramthatcompilestodaymaynotcompilenextyear,becauseofchangesintheincludefilesorlibraries,andeventhecompiler.Evenifitcompiles,itmaynotrunproperly,becauseofchangesintheunderlyingoperatingsystemoritsconfiguration,changesinthehardwareifthesystemhasmigratedtoanewserver,orchangesinthesurroundingenvironment(suchasremoteserverstowhichthesoftwareneedstoconnect).</p><h3id="three-motivational-anecdotes">Threemotivationalanecdotes</h3><h4id="proven-program-found-to-have-a-bug-20-years-later">Provenprogramfoundtohaveabug20yearslater</h4><blockquote><p>adaptedfromJoshuaBloch’s<ahref="http://bit.ly/FMKax">blog</a>.</p></blockquote><p>JonBentley(Authorof<em>ProgrammingPearls</em>andotherbooks)observedthatarelativelysimplepieceofcodeforabinarysortthathehadproventobecorrectduringalectureatCMUhadabuginitthatwasn’tdiscovereduntil20yearslater.Here’sthecode:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="mi">1</span><spanclass="o">:</span><spanclass="kt">int</span><spanclass="nf">binarySearch</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="p">[]</span><spanclass="n">a</span><spanclass="p">,</span><spanclass="kt">int</span><spanclass="n">length</span><spanclass="p">,</span><spanclass="kt">int</span><spanclass="n">key</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="mi">2</span><spanclass="o">:</span><spanclass="kt">int</span><spanclass="n">low</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">,</span><spanclass="n">mid</span><spanclass="p">,</span><spanclass="n">midVal</span><spanclass="p">;</span><spanclass="mi">3</span><spanclass="o">:</span><spanclass="kt">int</span><spanclass="n">high</span><spanclass="o">=</span><spanclass="n">length</span><spanclass="o">-</span><spanclass="mi">1</span><spanclass="p">;</span><spanclass="mi">4</span><spanclass="o">:</span><spanclass="mi">5</span><spanclass="o">:</span><spanclass="k">while</span><spanclass="p">(</span><spanclass="n">low</span><spanclass="o">&lt;=</span><spanclass="n">high</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="mi">6</span><spanclass="o">:</span><spanclass="n">mid</span><spanclass="o">=</span><spanclass="p">(</span><spanclass="n">low</span><spanclass="o">+</span><spanclass="n">high</span><spanclass="p">)</span><spanclass="o">/</span><spanclass="mi">2</span><spanclass="p">;</span><spanclass="mi">7</span><spanclass="o">:</span><spanclass="n">midVal</span><spanclass="o">=</span><spanclass="n">a</span><spanclass="p">[</span><spanclass="n">mid</span><spanclass="p">];</span><spanclass="mi">8</span><spanclass="o">:</span><spanclass="mi">9</span><spanclass="o">:</span><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">midVal</span><spanclass="o">&lt;</span><spanclass="n">key</span><spanclass="p">)</span><spanclass="mi">10</span><spanclass="o">:</span><spanclass="n">low</span><spanclass="o">=</span><spanclass="n">mid</span><spanclass="o">+</span><spanclass="mi">1</span><spanclass="mi">11</span><spanclass="o">:</span><spanclass="k">else</span><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">midVal</span><spanclass="o">&gt;</span><spanclass="n">key</span><spanclass="p">)</span><spanclass="mi">12</span><spanclass="o">:</span><spanclass="n">high</span><spanclass="o">=</span><spanclass="n">mid</span><spanclass="o">-</span><spanclass="mi">1</span><spanclass="p">;</span><spanclass="mi">13</span><spanclass="o">:</span><spanclass="k">else</span><spanclass="mi">14</span><spanclass="o">:</span><spanclass="k">return</span><spanclass="n">mid</span><spanclass="p">;</span><spanclass="c1">//keyfound</span><spanclass="mi">15</span><spanclass="o">:</span><spanclass="p">}</span><spanclass="mi">16</span><spanclass="o">:</span><spanclass="k">return</span><spanclass="o">-</span><spanclass="p">(</span><spanclass="n">low</span><spanclass="o">+</span><spanclass="mi">1</span><spanclass="p">);</span><spanclass="c1">//keynotfound.</span><spanclass="mi">17</span><spanclass="o">:</span><spanclass="p">}</span></code></pre></div></div><p>Thebugwasfoundtobeinline6:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="mi">6</span><spanclass="o">:</span><spanclass="n">mid</span><spanclass="o">=</span><spanclass="p">(</span><spanclass="n">low</span><spanclass="o">+</span><spanclass="n">high</span><spanclass="p">)</span><spanclass="o">/</span><spanclass="mi">2</span><spanclass="p">;</span></code></pre></div></div><p>Thislookscorrect,sinceit’spurposeistofindtheaverageof<codeclass="language-plaintexthighlighter-rouge">low</code>and<codeclass="language-plaintexthighlighter-rouge">high</code>,roundeddowntothenearestinteger.However,ifthesumof<codeclass="language-plaintexthighlighter-rouge">low</code>and<codeclass="language-plaintexthighlighter-rouge">high</code>exceedthemaximumsignedintvalue(<codeclass="language-plaintexthighlighter-rouge">2^31-1</code>onsomearchitectures),thesumgoesnegativeandtheresultingvaluefor<codeclass="language-plaintexthighlighter-rouge">mid</code>isalso.</p><p>Sohowwouldyoufixit?Thefollowingwouldwork:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="mi">6</span><spanclass="o">:</span><spanclass="n">mid</span><spanclass="o">=</span><spanclass="n">low</span><spanclass="o">+</span><spanclass="p">((</span><spanclass="n">high</span><spanclass="o">-</span><spanclass="n">low</span><spanclass="p">)</span><spanclass="o">/</span><spanclass="mi">2</span><spanclass="p">);</span></code></pre></div></div><h4id="missile-system-looking-in-the-wrong-place">Missilesystemlookinginthewrongplace</h4><p>FromtheFebruary1992GAOreporttotheHouseofRepresentatives’SubcommitteeonInvestigationsandOversight,CommitteeonScience,Space,andTechnology:</p><blockquote><p><em>OnFebruary25,1991,aPatriotmissiledefensesystemoperatingatDhahran,SaudiArabia,duringOperationDesertStormfailedtotrackandinterceptanincomingScud.ThisScudsubsequentlyhitanArmybarracks,killing28Americans.…ThePatriotbatteryatDhahranfailedtotrackandintercepttheScudmissilebecauseofasoftwareprobleminthesystem’sweaponscontrolcomputer.Thisproblemledtoaninaccuratetrackingcalculationthatbecameworsethelongerthesystemoperated.Atthetimeoftheincident,thebatteryhadbeenoperatingcontinuouslyforover100hours.Bythen,theinaccuracywasseriousenoughtocausethesystemtolookinthewrongplacefortheincomingScud.…ThePatriothadneverbeforebeenusedtodefendagainstScudmissilesnorwasitexpectedtooperatecontinuouslyforlongperiodsoftime.Twoweeksbeforetheincident,ArmyofficialsreceivedIsraelidataindicatingsomelossinaccuracyafterthesystemhadbeenrunningfor8consecutivehours.Consequently,Armyofficialsmodifiedthesoftwaretoimprovethesystem’saccuracy.However,themodifiedsoftwaredidnotreachDhahranuntilFebruary26,1991–thedayaftertheScudincident.</em></p></blockquote><p>Theproblemwasthatinordertopredictwhereanincomingmissile<em>wouldbe</em>,thesystemneededitsvelocityandthetimeexpressedasrealnumberstodothecalculations.Unfortunately,thetimewasmaintainedasanintegerrepresentingthenumberoftenthsofasecondsincethesystembeganoperating.Theproblemwasthatthelongeritwasrunning,thelargertheerrorwouldbewhenconvertingtheintegertimeintoarealnumber.Thus,thePatriotwaslooking“inthewrongplace.”</p><h4id="apple-ssl-bug-example">AppleSSLBugexample</h4><p>Sometimessoftwareupdatesaddnewbugsthatwouldn’tbecaughtwithoutrunningallthetestsagain.Here’sanexamplefromFebruary2014inAppleMacOSXandiOSwherehackerscouldtrickthosesystemsintoacceptingSSL(TLS)certificatesthatshouldberejected.</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="p">.</span><spanclass="p">.</span><spanclass="p">.</span><spanclass="n">hashOut</span><spanclass="p">.</span><spanclass="n">data</span><spanclass="o">=</span><spanclass="n">hashes</span><spanclass="o">+</span><spanclass="n">SSL_MD5_DIGEST_LEN</span><spanclass="p">;</span><spanclass="n">hashOut</span><spanclass="p">.</span><spanclass="n">length</span><spanclass="o">=</span><spanclass="n">SSL_SHA1_DIGEST_LEN</span><spanclass="p">;</span><spanclass="k">if</span><spanclass="p">((</span><spanclass="n">err</span><spanclass="o">=</span><spanclass="n">SSLFreeBuffer</span><spanclass="p">(</span><spanclass="o">&amp;</span><spanclass="n">hashCtx</span><spanclass="p">))</span><spanclass="o">!=</span><spanclass="mi">0</span><spanclass="p">)</span><spanclass="k">goto</span><spanclass="n">fail</span><spanclass="p">;</span><spanclass="k">if</span><spanclass="p">((</span><spanclass="n">err</span><spanclass="o">=</span><spanclass="n">ReadyHash</span><spanclass="p">(</span><spanclass="o">&amp;</span><spanclass="n">SSLHashSHA1</span><spanclass="p">,</span><spanclass="o">&amp;</span><spanclass="n">hashCtx</span><spanclass="p">))</span><spanclass="o">!=</span><spanclass="mi">0</span><spanclass="p">)</span><spanclass="k">goto</span><spanclass="n">fail</span><spanclass="p">;</span><spanclass="k">if</span><spanclass="p">((</span><spanclass="n">err</span><spanclass="o">=</span><spanclass="n">SSLHashSHA1</span><spanclass="p">.</span><spanclass="n">update</span><spanclass="p">(</span><spanclass="o">&amp;</span><spanclass="n">hashCtx</span><spanclass="p">,</span><spanclass="o">&amp;</span><spanclass="n">clientRandom</span><spanclass="p">))</span><spanclass="o">!=</span><spanclass="mi">0</span><spanclass="p">)</span><spanclass="k">goto</span><spanclass="n">fail</span><spanclass="p">;</span><spanclass="k">if</span><spanclass="p">((</span><spanclass="n">err</span><spanclass="o">=</span><spanclass="n">SSLHashSHA1</span><spanclass="p">.</span><spanclass="n">update</span><spanclass="p">(</span><spanclass="o">&amp;</span><spanclass="n">hashCtx</span><spanclass="p">,</span><spanclass="o">&amp;</span><spanclass="n">serverRandom</span><spanclass="p">))</span><spanclass="o">!=</span><spanclass="mi">0</span><spanclass="p">)</span><spanclass="k">goto</span><spanclass="n">fail</span><spanclass="p">;</span><spanclass="k">if</span><spanclass="p">((</span><spanclass="n">err</span><spanclass="o">=</span><spanclass="n">SSLHashSHA1</span><spanclass="p">.</span><spanclass="n">update</span><spanclass="p">(</span><spanclass="o">&amp;</span><spanclass="n">hashCtx</span><spanclass="p">,</span><spanclass="o">&amp;</span><spanclass="n">signedParams</span><spanclass="p">))</span><spanclass="o">!=</span><spanclass="mi">0</span><spanclass="p">)</span><spanclass="k">goto</span><spanclass="n">fail</span><spanclass="p">;</span><spanclass="k">goto</span><spanclass="n">fail</span><spanclass="p">;</span><spanclass="cm">/*MISTAKE!THISLINESHOULDNOTBEHERE*/</span><spanclass="k">if</span><spanclass="p">((</span><spanclass="n">err</span><spanclass="o">=</span><spanclass="n">SSLHashSHA1</span><spanclass="p">.</span><spanclass="n">final</span><spanclass="p">(</span><spanclass="o">&amp;</span><spanclass="n">hashCtx</span><spanclass="p">,</span><spanclass="o">&amp;</span><spanclass="n">hashOut</span><spanclass="p">))</span><spanclass="o">!=</span><spanclass="mi">0</span><spanclass="p">)</span><spanclass="k">goto</span><spanclass="n">fail</span><spanclass="p">;</span><spanclass="n">err</span><spanclass="o">=</span><spanclass="n">sslRawVerify</span><spanclass="p">(...);</span><spanclass="p">.</span><spanclass="p">.</span><spanclass="p">.</span></code></pre></div></div><p>Yes,Cdoeshavea<codeclass="language-plaintexthighlighter-rouge">goto</code>statement.Itworksasexpected,providinganimmediatetransfertothespecifiedlabel.</p><p>Heretheprogrammerisverifyingthecertificate;ifanyofthechecksfailthe<codeclass="language-plaintexthighlighter-rouge">err</code>variableissetnon-zeroandthecodeexitstothefailurehandler.Unfortunately,theprogrammerinsertedtwo<codeclass="language-plaintexthighlighter-rouge">gotofail</code>statementsinsteadofjustone.Asaresult,evenif<codeclass="language-plaintexthighlighter-rouge">err==0</code>thecodetransferstothefailsection.Thatreturnedwithareturncodeof<codeclass="language-plaintexthighlighter-rouge">err</code>which,if<codeclass="language-plaintexthighlighter-rouge">err==0</code>meanssuccess,meansthecertificateisreportedasvalid,andultimatelyaccepted.Thisbugcouldallowwebsitespoofingortheacceptanceofaboguscertificatecontainingamismatchedprivatekey.</p><p>Thisbugwasoverlookedbecausethesecond<codeclass="language-plaintexthighlighter-rouge">goto</code>isindented-butitisnotpartofthe<codeclass="language-plaintexthighlighter-rouge">if</code>statement.ProperuseofCS50style(puttingbracketsaroundeverycodeblock)wouldhavepreventedthisbugfrommanifestingitself!</p><h4id="loss-of-the-mars-climate-orbiter-and-mars-polar-lander">LossoftheMarsClimateOrbiterandMarsPolarLander</h4><p>From<ahref="https://en.wikipedia.org/wiki/List_of_software_bugs">Wikipedia</a>.</p><blockquote><p><em>NASAMarsPolarLanderwasdestroyedbecauseitsflightsoftwaremistookvibrationsduetoatmosphericturbulenceforevidencethatthevehiclehadlandedandshutofftheengines40metersfromtheMartiansurface.</em></p></blockquote><blockquote><p><em>ItssisterspacecraftMarsClimateOrbiterwasalsodestroyed,duetosoftwareonthegroundgeneratingcommandsinpound-force(lbf),whiletheorbiterexpectednewtons(N).</em></p></blockquote><h4id="more-examples">Moreexamples</h4><ul><li><em><ahref="http://royal.pingdom.com/2009/03/19/10-historical-software-bugs-with-extreme-consequences/">Historicalsoftwarebugswithextremeconsequences</a></em>,fromablog</li><li><em><ahref="https://en.wikipedia.org/wiki/List_of_software_bugs">Listofsoftwarebugs</a></em>,Wikipedia</li></ul><h2id="testing">Testing</h2><blockquote><p>“Testingcandemonstratethepresenceofbugsbutnottheirabsence.”–EdsgerDijkstra</p></blockquote><p>Thisquoteisagoodtokeepinmindwhenyouaredevelopingcode.Whatisthedifferencebetweendebuggingandtesting?Youdebugwhenyouknoworhaveidentifiedproblemsinyourcode.Testingistheartofsystematicallytryingtobreakcode,whichyouthink(hope?)isbugfree.Wetestthroughoutthesoftwarelifecyclebecauseitistypicallymuchlessexpensivetofixabugearlierinthesoftware’slifethanlater.</p><p>TheseCS50lecturesarestronglyinfluencedby<em><ahref="http://www.amazon.com/Practice-Programming-Addison-Wesley-Professional-Computing/dp/020161586X/ref=pd_bbs_sr_2?ie=UTF8&amp;s=books&amp;qid=1199226460&amp;sr=1-2">ThePracticeofProgramming</a>,</em>byBrianKernighanandRobPike,anoutstandingbookthatwilladvanceyourknowledgeongoodprogrammingpractices.ThenotesuseanumberofprogrammingexamplesfromtheirChapter6onTesting.</p><h3id="kinds-of-testing">Kindsoftesting</h3><p>Therearemanykindsoftesting,eachwithitsownpurpose:</p><p><strong>Unittesting:</strong>Thegoalofunittestingistoverifythateachfunctionalunitofthesystemisworkingproperly.It’swrittenfromtheunitdeveloper’sperspective,andaimstotesttheinternalworkingsoftheunit.Ifthistestingisn’tdonewell,<em>all</em>ofthesubsequenttestingismorepainful,slow,andsometimesmeaningless!</p><p><strong>Functionaltesting:</strong>Thegoaloffunctionaltestingistoverifythattheunit,module,sub-system,orsystemisdoingwhatitsuserwants.Forasystem,the‘user’isthecustomer;foraunit,the‘user’maybeadeveloperofothercomponentsthatdependonthisunit.Thistestingusuallyrequires“scaffolding”ora“testharness”toexercisethedeviceorunitundertest.</p><blockquote><p>“Unitteststelladeveloperthatthecodeisdoingthingsright;functionalteststelladeveloperthatthecodeisdoingtherightthings.”–JeffCanna,<em><ahref="http://www.ibm.com/developerworks/library/j-test.html">Testing,Fun,Really</a></em>.</p></blockquote><p><strong>Glass-boxtestingandblack-boxtesting:</strong>Theserefertotwotypesofunittesting(orfunctionaltesting).In<em>glass-boxtesting</em>youcanpeekinsidethethingbeingtested.In<em>black-boxtesting</em>youcanonlyaccessthething’spublicAPI:youcansendtheboxinputandseeonlywhatcomesoutofthebox.Bothapproacheshavevalue,buttheformerisonlyusefulifyouhavethesourcecodetothethingbeingtested.Unittestingistypicallyglass-box,whereasfunctionaltestingisusuallyblack-box.</p><p><strong>Integrationtesting:</strong>Afterunittesting,theintegrationtestverifiesthattheunits(modules)cancommunicateproperlywitheachothers.Interfacesdefinedbytheunits(modules)areproperlyimplementedandused.Nospecialchannelsorconnectionsshouldbeused,eveniftheymakethingsrunfaster!</p><p><strong>Systemtesting:</strong>Alsoknownas“bigbang”testing,thisiswhereyouputthewholethingtogetherandrunteststoensurethatitmeetsthestatedrequirementswithoutcausinganyunexpectedside-effects.Ifyouskipovertheintegrationtests,youmayencounterseriousproblemsinsystemtests-problemsthatmaybeveryexpensivetofix.(Considerthisexampleof<ahref="http://giphy.com/gifs/unit-test-integration-3o7rbPDRHIHwbmcOBy">unittestswithoutanintegrationtest</a>).</p><p><strong>Regressiontesting:</strong>Regressiontestingisanautomatedmeansofrunning(andre-running)unittests,integrationtests,andsometimessystemtests,eachtimeyouprepareanewrelease.(Forunitandintegrationtests,eachtimeyou‘gitpush’!Indeed,somesource-codecontrolsystemsautomaticallyrununitandintegrationtestsbeforeacommitisaccepted,rejectingthecommitifanytestsfail.)</p><p><strong>Usabilitytesting:</strong>Thisistestingwithrealusers.Nototherprogrammersorengineers,andnotfriendsandneighbors,buttherealusers.Whenthisisn’tpossible,youhavetoreallyworkhardtofindobjectivetesterswhowillactliketheendusers.Peoplewhohave(orcansimulate)thesamelevelofexperience,biases,andpastexperiencearethekindsofusabilitytestersyouwant.</p><p>Insomeproducts,youmustalsoconduct<em>accessabilitytesting</em>todeterminewhetheryoursoftwareisaccessibleforpeoplewithvariousdisabilities.</p><p><strong>Securitytesting:</strong>Securitytestsverifythesecurityofthesystem,e.g.,toensurethatsensitivedataarealwaysencrypted,passwordsandcredit-cardnumbersaremasked,andsensitivedataissecurelyerasedimmediatelyafteruse.Sometimes,theteamhiresoutsidetesterstoconduct<em>penetrationtests</em>,inwhichthetestertriestobreakthesystemorleaksensitiveinformation.Unfortunately,onecanneverprovethatasystemis‘secure’,thatis,ithasnobugsthatleadtothefailureofsecurityorprivacyproperties.RememberDijkstra’squoteabouttesting:onecanonlydemonstratethepresenceofbugs,nottheirabsence.Thisisespeciallytrueforsecurity!</p><p><strong>Performancetesting:</strong>Mostsoftwareneedstoperform‘well’accordingtooneormoremetrics,whetherimplicitorexplict.Performancemetricsincludespeed(howlongdoesittaketocompleteatask),throughput(howmanytaskscompletedpersecond),memory(codesize,stacksize,heapusage),networkbandwidth,energy(batterydrain),orcost(indollars,suchaswhenusingcloudresourcesbilledbyusage).Performancetestingsubjectsthesoftwaretovariousloads,measuringtherelevantmetrics,todeterminewhetherthesystemperformswithinacceptablebounds.</p><p><strong>Acceptancetesting:</strong>Theultimatetest:whetherthecustomeracceptsyourproduct.Mostofthetimethesetestsaresimilartothesystemtests.However,youwilloccasionlyencounternew,previouslyunstated“requirements”duringacceptancetesting.</p><p>Finally,themostimportanttipofallontestingfromThe<ahref="http://pragprog.com/the-pragmatic-programmer/extracts/tips">PragmaticProgrammer</a>:</p><blockquote><p>Findbugsonce.</p></blockquote><p>Onceyouoroneofyourtesters(orevenacustomer)findabug,thatshouldbethelasttimeahumanfindsthatbug.Onceidentifiedandfixed,yourautomatedtestsshouldbeextendedtocheckforthatsamebugeverytimetheyarerun.Findingabugduringregressiontestingisalotbetterthanhowitwasfoundthefirsttime.</p><h2id="tips-for-testing">TipsforTesting</h2><p>Onceagain,<strong>thedifferencebetweendebuggingandtesting</strong>:</p><ul><li><strong>Testing</strong>isadetermined,systematicattempttobreakaprogramthatyouthinkshouldbeworking.Asdiscussedabove,toolsandatestharnesscanautomatethisprocess.</li><li><strong>Debugging</strong>iswhatyoudowhenyouknowthattheprogramcrashes(e.g.,segfaults),fails(e.g.,answersqueriesincorrecly),underperforms(e.g.,runsslowly)oractsinconsistently(e.g.,intermittentlyfailsoncertainconditions).Theseareallbugsthattestingcanfind.Bettertofindthemandfixthem.</li></ul><h3id="test-early-test-often-test-automatically">TestEarly.TestOften.TestAutomatically.</h3><p>That’sa<ahref="http://pragprog.com/the-pragmatic-programmer/extracts/tips">PragmaticProgrammerTip</a>.</p><p>Weshouldbegintestingassoonaswehavesomethingtotest(Makefile,parsingarguments,initialization,scaffolding,firstunits).Thesooneryoufindyourbugs,thecheaperitwillbeintermsofyourtime,others’time,anddownstreamsupportcosts.</p><p><ahref="http://pragprog.com/the-pragmatic-programmer/extracts/tips">PragmaticProgrammerTip</a>:</p><blockquote><p>Thecodingain’tdone‘tilallthetestsrun.</p></blockquote><p>Furthermore:</p><ul><li>Codethatisn’ttesteddoesnotwork.</li><li>Codethatisn’tregressiontestedeventuallystopsworking.</li><li>Codethatisn’t<em>automatically</em>regressiontestedtoproveitworks,doesnotwork.</li></ul><p>Thus,youshouldbuildautomatedtestingcode(unittests,Makefilerules,shellscripts,testdata)fromtheverybeginning.</p><h3id="i-write-bug-free-code---testing-is-a-waste-of-time">Iwritebugfreecode-testingisawasteoftime</h3><p>Manypeoplehavetheattitudethattestingcodeisawasteoftimeandboring-whydoit?AsFredBrookssaid,“Allprogrammersareoptimists”!</p><p>Considerthesoftwarelifecyclediscussedinclass:requirements,design,coding,testing,debugging,integration,anddelivery.Professionalprogrammerswilltellyouthattestinganddebuggingtakethelargestchunkoftime.Thus,it’ssmartto<em>developtoolstoautomatethetestingofcode</em>.</p><p>Perhapsthemostimportanttoolsarefor<em>regressiontesting</em>,whichsystematicallyretestthecodeperiodically.Eachofthosewordsisimportant:</p><ul><li><em>retest:</em>theytestolderpartsofthecodeevenasyoudevelopnewpartsofthecode-justincaseyournewcodebroketheoldcode.</li><li><em>systematic:</em>theyrunautomaticallythroughalargenumberoftests,validatingtheresultsofeachtest,soneithercarelessnessnorlazinesscausesyoutooverlookimportanttests.</li><li><em>periodic:</em>theyrunatcriticalpointsinthedevelopmentprocess;certainly,rightbeforeanewrelease,butinmanyorganizationstheyrunaspartofa“nightlybuild”thatcompilesandteststheentiresystemandallofitsunits.Woetotheprogrammerwho“breaksthenightlybuild”!</li></ul><p>Ifalltheregressiontestspassthenyouhavesomeconfidencethatyournewcodedidnotintroduceadditionalproblems.Amoreaccuratestatementmightbe“thechangesdidn’treintroduceanyofthebugsthatIalreadyknewmightexist.”</p><h3id="write-the-unit-test-code-first-and-keep-it-with-the-objectfunctions">Writetheunit-testcodefirst,andkeepitwiththeobject/functions</h3><p>AsJeffCannaobserved,it’sbesttowritethetestcode<em>before</em>youwritetherealcode.Thisensuresthatyou’repayingattentiontothespecificationsfirst,andnotjustleapingintothecode.Whenwritingtheseunittests,trytoavoidanytestingordependenceonthingsoutsideoftheunit.Aimtoproduceaunittestfor<em>every</em>functionormethodthatsomeothercodeoruserwillinvoke.</p><h3id="test-as-you-write-code">Testasyouwritecode</h3><p>Theearlieryoufindaproblemwithyourcodethebetter;itwillsavesignificanttimeandyourcompanymoney.Youwillalsogetrespectfromotherprogrammers.</p><p>Iexpectmostofyousitattheterminalandhackatthecodetorevealandfixbugs-youhackinsomeprintfsandrunyourcodeagain,iteratinghundredsoftimes.Thisbrute-forcemethodisdumb,slow,anderrorprone-you’llgetnorespectinindustryforthisapproach.Readyourcode,thinklikeacomputer,andwritetestcodeasyouwritetherealcode.</p><h3id="use-c-idioms-and-be-consistent-when-you-write-code">UseCidiomsandbeconsistentwhenyouwritecode</h3><p>YoualreadyknowmanyCidiomsevenifwehaven’talwayslabeledthemthatway.InC,therearemanywaystowriteasimpleloop:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="c1">//example1</span><spanclass="n">i</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="k">while</span><spanclass="p">(</span><spanclass="n">i</span><spanclass="o">&lt;=</span><spanclass="n">n</span><spanclass="o">-</span><spanclass="mi">1</span><spanclass="p">)</span><spanclass="n">array</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="o">++</span><spanclass="p">]</span><spanclass="o">=</span><spanclass="mi">1</span><spanclass="p">.</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="c1">//example2</span><spanclass="k">for</span><spanclass="p">(</span><spanclass="n">i</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">&lt;</span><spanclass="n">n</span><spanclass="p">;</span><spanclass="p">)</span><spanclass="n">array</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="o">++</span><spanclass="p">]</span><spanclass="o">=</span><spanclass="mi">1</span><spanclass="p">.</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="c1">//example3</span><spanclass="k">for</span><spanclass="p">(</span><spanclass="n">i</span><spanclass="o">=</span><spanclass="n">n</span><spanclass="p">;</span><spanclass="o">--</span><spanclass="n">i</span><spanclass="o">&gt;=</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="p">)</span><spanclass="n">array</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">]</span><spanclass="o">=</span><spanclass="mi">1</span><spanclass="p">.</span><spanclass="mi">0</span><spanclass="p">;</span></code></pre></div></div><p>Asinanyhumanlanguage,Chas<em>idioms</em>,thatis,conventionalwaysthatexperiencedprogrammerswritecommonpiecesofcode.Idiomsaidunderstandingbecausetheyareimmediatelyrecognizableandanyerrorsintheiruseisalsoquicklydiscernible.</p><p>Alloftheloopsabovewouldwork…buttheydonotfollowtheCidiomforsuchloops.TheidiomaticC<codeclass="language-plaintexthighlighter-rouge">for</code>loopis:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="c1">//Idiomaticform</span><spanclass="k">for</span><spanclass="p">(</span><spanclass="n">i</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">&lt;</span><spanclass="n">n</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">++</span><spanclass="p">)</span><spanclass="n">array</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">]</span><spanclass="o">=</span><spanclass="mi">1</span><spanclass="p">.</span><spanclass="mi">0</span><spanclass="p">;</span></code></pre></div></div><p>BeingconsistentwhenprogrammingCwillhelpenormously.Forexample,ifyouareusetowritingidiomaticcodethenwhenyouseeapieceofcodethatisnotidiomaticyoushouldstopandtakeacloselookatthatcode:maybeaboundaryproblemismorelikely?Ifcodeiswrittenthesamewayeachtimethenwhenyouseecodethatisnotidiomaticiteithersuggestspoorcodeorsomegenuinedifferenceexiststhattheidiomdoesnotcover.Eitherway:takeasecondcloselooktoconvinceyourselfitsoneortheother.</p><p>HerearesomemoreexamplesofCidiomsthatyoushouldbefamiliarwith:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="c1">//Infiniteloopidioms</span><spanclass="k">for</span><spanclass="p">(;;)</span><spanclass="p">{</span><spanclass="p">....</span><spanclass="p">}</span><spanclass="c1">//or</span><spanclass="k">while</span><spanclass="p">(</span><spanclass="mi">1</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="p">....</span><spanclass="p">}</span><spanclass="c1">//malloc,stringcopyidiom</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">newp</span><spanclass="o">=</span><spanclass="n">malloc</span><spanclass="p">(</span><spanclass="n">strlen</span><spanclass="p">(</span><spanclass="n">buf</span><spanclass="p">)</span><spanclass="o">+</span><spanclass="mi">1</span><spanclass="p">);</span><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">newp</span><spanclass="o">!=</span><spanclass="nb">NULL</span><spanclass="p">)</span><spanclass="n">strcpy</span><spanclass="p">(</span><spanclass="n">newp</span><spanclass="p">,</span><spanclass="n">buf</span><spanclass="p">);</span><spanclass="k">else</span><spanclass="c1">//handlethemallocerror</span><spanclass="c1">//copyingcharactersfromstdintostdoutuntilendoffile</span><spanclass="k">while</span><spanclass="p">((</span><spanclass="n">c</span><spanclass="o">=</span><spanclass="n">getchar</span><spanclass="p">())</span><spanclass="o">!=</span><spanclass="n">EOF</span><spanclass="p">)</span><spanclass="n">putchar</span><spanclass="p">(</span><spanclass="n">c</span><spanclass="p">);</span><spanclass="c1">//traversalofanull-terminatedstring</span><spanclass="k">for</span><spanclass="p">(</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">p</span><spanclass="o">=</span><spanclass="n">string</span><spanclass="p">;</span><spanclass="o">*</span><spanclass="n">p</span><spanclass="o">!=</span><spanclass="sc">'\0'</span><spanclass="p">;</span><spanclass="n">p</span><spanclass="o">++</span><spanclass="p">)</span><spanclass="c1">//dosomethingwith*p</span></code></pre></div></div><p>Writeinidiomsasmuchaspossible;itmakesiteasiertospotbugs-andhardertocreatethem.</p><h3id="test-code-at-its-boundaries">Testcodeatitsboundaries</h3><p>Inwhatfollows,weuseaseriesofcodesnippetsfrom[KP,1999]toillustratehowtocodetoremove<em>boundarybugs</em>,i.e.,thosethatappearatthe‘boundarycases’ofalooporfunction(sometimescalled‘edgecases’).Boundarytestingassumesyoutestasmallsnippetofcodeatatime-sortofmicrotestingofcodesequences.Theexamples(below)donotuseidiomsandarepoorlywrittentocaterforboundarybugs.Everytime<em>you</em>writealoop,verifytheboundarycasestoensuretheexecutiongoesthroughtheloopthecorrectnumberoftimes.</p><p>Forexample,inthecodebelowweprobethefollowingboundaries:</p><ol><li>emptyinput</li><li>asingleinputcharacter</li><li>anexactlyfullarray-butcouldbea<codeclass="language-plaintexthighlighter-rouge">malloc</code>‘edbuffer.</li></ol><p>Considerthefollowingcodesnippetfrom[KP,1999]:</p><h3id="boundary-test-empty-line-input-with-only-newline">BOUNDARYTEST:emptyline(inputwithonlynewline)</h3><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="c1">//readcharactersfromstdinintoastring</span><spanclass="kt">int</span><spanclass="n">i</span><spanclass="p">;</span><spanclass="kt">char</span><spanclass="n">s</span><spanclass="p">[</span><spanclass="n">MAX</span><spanclass="p">];</span><spanclass="k">for</span><spanclass="p">(</span><spanclass="n">i</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="p">(</span><spanclass="n">s</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">]</span><spanclass="o">=</span><spanclass="n">getchar</span><spanclass="p">())</span><spanclass="o">!=</span><spanclass="sc">'\n'</span><spanclass="o">&amp;&amp;</span><spanclass="n">i</span><spanclass="o">&lt;</span><spanclass="n">MAX</span><spanclass="o">-</span><spanclass="mi">1</span><spanclass="p">;</span><spanclass="o">++</span><spanclass="n">i</span><spanclass="p">)</span><spanclass="p">;</span><spanclass="n">s</span><spanclass="p">[</span><spanclass="o">--</span><spanclass="n">i</span><spanclass="p">]</span><spanclass="o">=</span><spanclass="sc">'\0'</span><spanclass="p">;</span></code></pre></div></div><p>Lookingatthiscodethefirstthingthatshouldstrikeusisthatit’snotaCidiom.Thatshouldmakeuslookverycloselyatthelooplogic;particularly,theloop’sconditionallogic.Maybe,afterstudyingthecodeandthinkingaboutcharactersbeinginputweconvinceourselvesthatthecodeisnonidiomaticbutworks.Nowstarttotestboundaries.Considerthecasewheretheusersimplytypes‘return’.Theresultingcodewouldterminateimmediatelyonthefirstiterationwith<codeclass="language-plaintexthighlighter-rouge">i</code>stillsettozero.Outsidetheloop,theassignmentstatementwillwritetos[i-1],whichis<em>beforethestartofthearray</em>.Notagoodidea!</p><h3id="boundary-test-empty-line-input-with-only-eof-character">BOUNDARYTEST:emptyline(inputwithonlyEOFcharacter)</h3><p>OK.Thesmartthingtodoisrewritethisconvolutedloopasanidiomandsolvetheproblem;forexample:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="k">for</span><spanclass="p">(</span><spanclass="n">i</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">&lt;</span><spanclass="n">MAX</span><spanclass="o">-</span><spanclass="mi">1</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">++</span><spanclass="p">)</span><spanclass="c1">//noteweswitch++i=&gt;i++,theidiom</span><spanclass="k">if</span><spanclass="p">((</span><spanclass="n">s</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">]</span><spanclass="o">=</span><spanclass="n">getchar</span><spanclass="p">())</span><spanclass="o">==</span><spanclass="sc">'\n'</span><spanclass="p">)</span><spanclass="k">break</span><spanclass="p">;</span><spanclass="n">s</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">]</span><spanclass="o">=</span><spanclass="sc">'\0'</span><spanclass="p">;</span></code></pre></div></div><p>Inspectingthecodeabovewecaneasilyseethatthepreviousboundaryproblemissolvedwiththenewidiomaticcode.Ithandlesthecasewhentheinputissolelyanewlinebeautifully.Ifwementallycomputethroughreading1,2or3charactersweseeitalsoworks;forexample<codeclass="language-plaintexthighlighter-rouge">abc\n</code>works.</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="n">s</span><spanclass="p">[</span><spanclass="mi">0</span><spanclass="p">]</span><spanclass="n">is</span><spanclass="n">a</span><spanclass="n">s</span><spanclass="p">[</span><spanclass="mi">1</span><spanclass="p">]</span><spanclass="n">is</span><spanclass="n">b</span><spanclass="n">s</span><spanclass="p">[</span><spanclass="mi">2</span><spanclass="p">]</span><spanclass="n">is</span><spanclass="n">c</span><spanclass="n">s</span><spanclass="p">[</span><spanclass="mi">3</span><spanclass="p">]</span><spanclass="n">is</span><spanclass="err">\</span><spanclass="mi">0</span></code></pre></div></div><p>Looksgood.</p><p>Butwhatifwegetanemptylineandthefirstcharacterisan<codeclass="language-plaintexthighlighter-rouge">EOF</code>?Itbreaks.Anotherpeskybuginourcode.Someonetypingcontrol-D(<codeclass="language-plaintexthighlighter-rouge">EOF</code>)wouldnotbeanunlikelyoccurrence.</p><p>OK.Let’sfixthisboundarybug.</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="k">for</span><spanclass="p">(</span><spanclass="n">i</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">&lt;</span><spanclass="n">MAX</span><spanclass="o">-</span><spanclass="mi">1</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">++</span><spanclass="p">)</span><spanclass="k">if</span><spanclass="p">((</span><spanclass="n">s</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">]</span><spanclass="o">=</span><spanclass="n">getchar</span><spanclass="p">())</span><spanclass="o">==</span><spanclass="sc">'\n'</span><spanclass="o">||</span><spanclass="n">s</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">]</span><spanclass="o">==</span><spanclass="n">EOF</span><spanclass="p">)</span><spanclass="k">break</span><spanclass="p">;</span><spanclass="n">s</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">]</span><spanclass="o">=</span><spanclass="sc">'\0'</span><spanclass="p">;</span></code></pre></div></div><p>Thatworks!Nicepieceofcodenow.Lookslikewearedone.</p><p>Em…areyousure?Thereareotherboundaryproblemsthatcouldlurkhere.Whathappensifthearrayisnearlyfull-doesitwork?Whathappensifthearrayisexactlyfull?Oroverfull?Whathappensifthearrayisfullandthenfollowedbyanewline?Aretheseboundaryconditionscateredfor?Wewillleaveyoutodeterminetheanswertothatquestion.</p><p>Yougettheidea.Bugslurkatboundaries.Conversely,ifcodeworksatboundariesitislikelytoworkelsewhere.</p><h3id="break-building-blocks-on-purpose">Breakbuildingblocksonpurpose</h3><p>Consideroneofyourimportant‘buildingblock’functions.Nowbreakit!Haveitstilloperate,butjustproducegoofyresults.Forexample,inourTSEprograms,supposethehashfunctionalwaysreturnedthesamehashvalue?Whatwouldyourprogramdo?Woulditrun,perhapsmoreslowly,orwoulditcrash?</p><p>Manyofyouusethe<codeclass="language-plaintexthighlighter-rouge">count_malloc()</code>functiontohelptrackthebalanceof<codeclass="language-plaintexthighlighter-rouge">malloc</code>and<codeclass="language-plaintexthighlighter-rouge">free</code>calls.Ifyouusethemforeverymemoryallocationandfree,theyareagreatplacetoinsertdebuggingcodeandbreakpoints.Theyarealsoagreatplacefortesting!</p><p>Forexample,youcouldcauseittocauseanout-of-memorysituationaftersomenumberofcalls(assuggestedbyKernighanandPike):</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="c1">//Usageexample:gcc-DMEMORYTESTLIMIT=50...</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="nf">count_malloc</span><spanclass="p">(</span><spanclass="kt">size_t</span><spanclass="n">size</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="cp">#ifdefMEMORYTESTLIMIT</span><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">nmalloc</span><spanclass="o">&gt;=</span><spanclass="n">MEMORYTESTLIMIT</span><spanclass="p">)</span><spanclass="k">return</span><spanclass="nb">NULL</span><spanclass="p">;</span><spanclass="c1">//fakeanout-of-memorycondition</span><spanclass="cp">#endif</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">ptr</span><spanclass="o">=</span><spanclass="n">malloc</span><spanclass="p">(</span><spanclass="n">size</span><spanclass="p">);</span><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">ptr</span><spanclass="o">!=</span><spanclass="nb">NULL</span><spanclass="p">)</span><spanclass="n">nmalloc</span><spanclass="o">++</span><spanclass="p">;</span><spanclass="k">return</span><spanclass="n">ptr</span><spanclass="p">;</span><spanclass="p">}</span></code></pre></div></div><h3id="test-pre--and-post-conditions">Testpre-andpost-conditions</h3><p>Itisalwaysagoodideatotestforpre-andpost-conditions:<em>pre-conditions</em>arethoseyouexpecttobetruebeforesomeblockofcode;<em>post-conditions</em>arethoseyouexpecttobetrueaftersomeblockofcodeexecutes.Forexample,wehavealreadyuseddefensiveprogramtocheckinputvaluesarewithinrange-anexampleofpre-conditiontesting.Let’slookatanothersimpleexampleoutof[KP,1999]thatcomputestheaverageofnelementsinanarray<codeclass="language-plaintexthighlighter-rouge">a[]</code>.Closerinspectionofthecoderevealsthatthereisaproblemif<codeclass="language-plaintexthighlighter-rouge">n</code>islessthanorequalto<codeclass="language-plaintexthighlighter-rouge">0</code>.</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="kt">float</span><spanclass="nf">avg</span><spanclass="p">(</span><spanclass="kt">float</span><spanclass="n">a</span><spanclass="p">[],</span><spanclass="kt">int</span><spanclass="n">n</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="kt">float</span><spanclass="n">sum</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">.</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="k">for</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="n">i</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">&lt;</span><spanclass="n">n</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">++</span><spanclass="p">)</span><spanclass="n">sum</span><spanclass="o">+=</span><spanclass="n">a</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">];</span><spanclass="k">return</span><spanclass="n">sum</span><spanclass="o">/</span><spanclass="n">n</span><spanclass="p">;</span><spanclass="p">}</span></code></pre></div></div><p>Anaturalquestioniswhattodoifsomeonecalls<codeclass="language-plaintexthighlighter-rouge">avg()</code>with<codeclass="language-plaintexthighlighter-rouge">n=0</code>?Anarrayofzeroelementsdoesnotmakemuchsensebutanaverageof<codeclass="language-plaintexthighlighter-rouge">0</code>does.Shouldourcodecatchthedivisionbyzero,perhapswithanassertorabort,orcomplain,orbesilent?Onereasonableapproachistojustreturn<codeclass="language-plaintexthighlighter-rouge">0</code>astheaverageif<codeclass="language-plaintexthighlighter-rouge">n</code>islessthanorequaltozero.Whilethecodeisidiomaticinstyleweneedtotweakittotestpre-condition,asshownbelow-note:<codeclass="language-plaintexthighlighter-rouge">returnn&lt;=0?0.0:sum/n;</code></p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="kt">double</span><spanclass="nf">avg</span><spanclass="p">(</span><spanclass="kt">double</span><spanclass="n">a</span><spanclass="p">[],</span><spanclass="kt">int</span><spanclass="n">n</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">n</span><spanclass="o">&lt;=</span><spanclass="mi">0</span><spanclass="p">)</span><spanclass="k">return</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="kt">float</span><spanclass="n">sum</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">.</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="k">for</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="n">i</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">&lt;</span><spanclass="n">n</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">++</span><spanclass="p">)</span><spanclass="n">sum</span><spanclass="o">+=</span><spanclass="n">a</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">];</span><spanclass="k">return</span><spanclass="n">sum</span><spanclass="o">/</span><spanclass="n">n</span><spanclass="p">;</span><spanclass="p">}</span></code></pre></div></div><h3id="use-assert">Use‘assert’</h3><p>Cprovidesanassertionfacilityin<codeclass="language-plaintexthighlighter-rouge">assert.h</code>usefulforpre-andpost-conditiontesting.Assertsareusuallyusedforunexpectedfailurewherethereisnocleanwaytorecoverthelogiccontrol.Forexampleourabove<codeclass="language-plaintexthighlighter-rouge">avg()</code>functioncouldincludeadifferentsolutionusingtheassertfunction:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="kt">float</span><spanclass="nf">avg</span><spanclass="p">(</span><spanclass="kt">float</span><spanclass="n">a</span><spanclass="p">[],</span><spanclass="kt">int</span><spanclass="n">n</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="n">assert</span><spanclass="p">(</span><spanclass="n">n</span><spanclass="o">&gt;</span><spanclass="mi">0</span><spanclass="p">);</span><spanclass="kt">float</span><spanclass="n">sum</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">.</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="k">for</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="n">i</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">&lt;</span><spanclass="n">n</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">++</span><spanclass="p">)</span><spanclass="n">sum</span><spanclass="o">+=</span><spanclass="n">a</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">];</span><spanclass="k">return</span><spanclass="n">sum</span><spanclass="o">/</span><spanclass="n">n</span><spanclass="p">;</span><spanclass="p">}</span></code></pre></div></div><p>Iftheassertionisinfactviolateditwillcauseanabortandstandardmessagetobeprintedout:</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>Assertionfailed:n&gt;0,fileavgtest.c,line7Abort(crash)</code></pre></div></div><p>Assertionsshouldbeusedonlyfortesting“thisshouldneverhappen”kindsofconditions…othererrors,especiallythosecausedbytheuser,shouldbehandledmoregracefully.</p><p>Wewroteanown<codeclass="language-plaintexthighlighter-rouge">assert</code>functionforuseinmostofmyTSEcode;</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="kt">void</span><spanclass="o">*</span><spanclass="nf">assertp</span><spanclass="p">(</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">p</span><spanclass="p">,</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">message</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">p</span><spanclass="o">==</span><spanclass="nb">NULL</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="n">fprintf</span><spanclass="p">(</span><spanclass="n">stderr</span><spanclass="p">,</span><spanclass="s">"MALLOCFAILED:%s</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">message</span><spanclass="p">);</span><spanclass="n">exit</span><spanclass="p">(</span><spanclass="mi">99</span><spanclass="p">);</span><spanclass="p">}</span><spanclass="k">return</span><spanclass="n">p</span><spanclass="p">;</span><spanclass="p">}</span></code></pre></div></div><p>Noticethatitactslikeapass-throughfunction,whenalliswell.Thepointercomingfrom<codeclass="language-plaintexthighlighter-rouge">malloc</code>isreturnedby<codeclass="language-plaintexthighlighter-rouge">assertp</code>andissavedinthevariable.Atthatpointitisassuredtobenon-NULL.When<codeclass="language-plaintexthighlighter-rouge">assertp</code>receivesaNULLpointer,itprintsamessageto<codeclass="language-plaintexthighlighter-rouge">stderr</code>andexits.</p><p>IuseitatthetopofmostfunctionstoverifythatallinboundpointersarenotNULL(whereNULLisnotvalidorexpected):</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="n">assertp</span><spanclass="p">(</span><spanclass="n">page</span><spanclass="p">,</span><spanclass="s">"page_savegetsNULLpage"</span><spanclass="p">);</span><spanclass="n">assertp</span><spanclass="p">(</span><spanclass="n">page</span><spanclass="o">-&gt;</span><spanclass="n">url</span><spanclass="p">,</span><spanclass="s">"page_savegetsNULLpage-&gt;url"</span><spanclass="p">);</span><spanclass="n">assertp</span><spanclass="p">(</span><spanclass="n">page</span><spanclass="o">-&gt;</span><spanclass="n">html</span><spanclass="p">,</span><spanclass="s">"page_savegetsNULLpage-&gt;html"</span><spanclass="p">);</span><spanclass="n">assertp</span><spanclass="p">(</span><spanclass="n">pageDirectory</span><spanclass="p">,</span><spanclass="s">"page_savegetsNULLpageDirectory"</span><spanclass="p">);</span></code></pre></div></div><h3id="test-for-the-unexpected-aka-defensive-programming">Testfortheunexpected:aka,defensiveprogramming</h3><p>Yourcrawlerandindexerusesdefensiveprogrammingforcheckingthattheinputargumentsarelogicallycorrect:e.g.,thatapathactuallyexisted.Butausefultechniquewhencodingisto“expecttheunexpected”,orcodefortheunexpected.Addingchecksfor<codeclass="language-plaintexthighlighter-rouge">n&lt;0</code>in<codeclass="language-plaintexthighlighter-rouge">avg()</code>isanexample.Anotherisbelow:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">grade</span><spanclass="o">&lt;</span><spanclass="mi">0</span><spanclass="o">||</span><spanclass="n">grade</span><spanclass="o">&gt;</span><spanclass="mi">100</span><spanclass="p">)</span><spanclass="c1">//can'thappenatDartmouth</span><spanclass="n">letter</span><spanclass="o">=</span><spanclass="sc">'?'</span><spanclass="p">;</span><spanclass="k">else</span><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">grade</span><spanclass="o">&gt;=</span><spanclass="mi">90</span><spanclass="p">)</span><spanclass="n">letter</span><spanclass="o">=</span><spanclass="sc">'A'</span><spanclass="p">;</span><spanclass="k">else</span><spanclass="p">....</span></code></pre></div></div><p>Otherexamplesinclude:</p><ol><li>Outofrangesubscripts</li><li>NULLpointers</li><li>Dividebyzero</li></ol><p>Thisisespeciallyimportantforphysicalsystems.Thecontrollingsoftwaremustbeawareofthelimitationsofthephysicalsystem.Otherwise,seemingvalid,ifperhapsunusual,softwareinteractionscouldleadtodisaster:See<ahref="http://www.youtube.com/watch?v=fJyWngDco3g">thisvideo</a>oftheeffectofsomeprocesscontrolsoftwarehacking.</p><h3id="plan-for-automate-able-and-repeatable-tests">Planforautomate-ableandrepeatabletests</h3><p>K&amp;Precommendthatthetestoutputshouldalwayscontainalloftheinputparametersettingssothattheresultscanbematchedtotheparametersettings.Furthermore,youneedtobeabletopreciselyrecreatetheconditionsofthattestasaccuratelyaspossible.Somesituationscomplicatethisgoal.Ifyourprogramusesrandomnumbers,youwillneedsomewaytosetandprintthestartingseedsothatyoucanensurethesamesequenceofrandomnumbersforeachtestrun.Alternatively,youcanhaveafileof“random”numbersforuseduringtest-therandomnumberfunctionjustreadsthenextonefromthefile.</p><p>Anothersituationwhichposesachallengehereistestinginthepresenceofasynchronousprocesses.Thesecouldbeassimpleasacollectionofindependentandvariablelengthtimersorascomplicatedasadistributedreal-timeprocesscontrolsystemmanagingtheflowofproductthrougharefineryprocess.</p><h3id="always-check-error-returns-from-functions">Alwayscheckerrorreturnsfromfunctions</h3><p>Areallygoodprogrammerwillalwayscheckthereturnstatusfromfunctions,systemcalls,andlibraries.Ifyouneglecttolookatthereturnstatus…howdoyouknowthatthefunctionreallyworked?Ifyourcodeassumesitdidnotfailbutitdid,thentheresultingsegfaultorerrorwillbehardtodebug.Bettertoalwayschecktheerrorstatusreturnedbyfunctions.</p><p>AnotherexamplefromKernighanandPike:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="n">fp</span><spanclass="o">=</span><spanclass="n">fopen</span><spanclass="p">(</span><spanclass="n">outfile</span><spanclass="p">,</span><spanclass="s">"w"</span><spanclass="p">);</span><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="o">==</span><spanclass="nb">NULL</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="c1">//filecouldnotbeopened</span><spanclass="p">}</span><spanclass="k">while</span><spanclass="p">(</span><spanclass="n">some</span><spanclass="n">expression</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="n">fprintf</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">,</span><spanclass="p">...);</span><spanclass="c1">//but...whatifthereisanerror?</span><spanclass="p">}</span><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">fclose</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">)</span><spanclass="o">==</span><spanclass="n">EOF</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="c1">//someoutputerroroccurred</span><spanclass="p">}</span></code></pre></div></div><p>Theerrorstatusof<codeclass="language-plaintexthighlighter-rouge">fprintf</code>isnotchecked;whatifitfails?Thedatawrittenmayhavebeenlost.</p><h3id="summary">Summary</h3><ol><li>Testincrementallyandbuildconfidenceinyourcode.</li><li>Writeunitteststhatcanbere-runoncefixesorchangeshavebeenmade.</li><li>Writeself-containedunittests<ul><li>Testinputsandoutputs.</li><li>Testthedataflowthroughtheprogram.</li><li>Testalltheexecutionpathsthroughtheprogram.</li></ul></li><li>Stress-testthecode;startsimpleandadvance(testcrawleratdepths1..5forexample).</li><li>Don’timplementnewfeaturesifthereareknownbugsinthesystem.</li><li>Thetargetruntimeenvironmentisasimportantadesignandimplementationpointasthepurposeofthecode.Design<em>and</em>testwiththatenvironmentinmind.</li><li>Testforportability:runcodeandtestsonmultiplemachines/OSs.</li><li>Beforeshippingcodemakesurethattheanydebug/testmodesareturnedoff.</li></ol><p>Ifyoufollowatleast50%ofthetipsinthesenotesyouwillwritebettercodeanditwillhaveconsiderablyfewerbugs.</p><h2id="tips-from-google">TipsfromGoogle</h2><p><ahref="http://code.google.com/p/googletest/wiki/V1_6_Primer">Google’sC++TestingFrameworks</a>putsthegoalsoftestingthisway(andit’sclearlyapplicabletoCprogrammingandunittestingaswellasfunctionalandsystemtesting):</p><ul><li>Testsshouldbeindependentandrepeatable</li><li>Testsshouldbeportableandreusable</li><li>Whentestsfail,theyshouldprovideasmuchinformationaspossibleaboutthefailure</li><li>Thetestingframeworkshouldhandleallthetrackingofsuccessfulandunsuccessfultestsforyou</li><li>Testsshouldbeasfastaspossible</li></ul><h2id="activity">Activity</h2><p>Intoday’s<ahref="activity.html">activity</a>wewillreviewthefeedbackfromthemid-termsurvey.</p></div></article></div></div><footerclass="site-footer"><divclass="wrapper"><h2class="footer-heading">Engs50(CS50)--DartmouthCollege</h2><p><fontsize=-1>ThisversionofthecourseisbaseduponthosedesignedbyProfessorsPalmer,Kotz,Zhou,Campbell,andBalkcom.Iamdeeplyindebtedtotheseoutstandingeducators.--<ahref="https://engineering.dartmouth.edu/people/faculty/stephen-taylor/">StephenTaylor</a></font></p><p><small>Thispagewaslastupdatedon<strong>2023-01-05</strong>at<strong>11:31</strong>.</small></p></div></footer></body></html>
