https://thayer.github.io/engs50/Notes/makefiles/extra/
3
42684
<!DOCTYPEhtml><html><head><metacharset="utf-8"><metahttp-equiv="X-UA-Compatible"content="IE=edge"><metaname="viewport"content="width=device-width,initial-scale=1"><title>Extra-Themakeutility</title><metaname="description"content="InEngs50youwilllearnhowtodesign&buildlarge,reliable,maintainable,andunderstandablesoftwaresystems.IntheprocessyouwilllearntoprograminCwithUnixdevelopmenttools."><linkrel="shortcuticon"href="/engs50/50.png"/><linkrel="stylesheet"href="/engs50/css/main.css"><linkrel="canonical"href="/engs50/Notes/makefiles/extra/"></head><body><headerclass="site-header"><aclass="site-title"href="/engs50/"><imgwidth=48align=centersrc="/engs50/50.png"alt="icon">Engs50(CS50)</a><navclass="site-nav">[<ahref="/engs50/Labs/">Labs</a>][<ahref="/engs50/Notes/">Notes</a>][<ahref="/engs50/Reading/">Reading</a>][<ahref="/engs50/Resources/">Resources</a>][<ahref="/engs50/Examples/">Examples</a>]</nav></header><divclass="page-content"><divclass="wrapper"><articleclass="post"><headerclass="post-header"><h1class="post-title">Extra-Themakeutility</h1></header><divclass="post-content"><p><strong><em>ThispagewrittenbyCharlesPalmerwithexamplesfromIraJenkins,butnotupdatedforCS50in17S.</em></strong></p><h2id="the-make-utility-concept">Themakeutilityconcept</h2><p>Recallthecompilationprocesswediscussedinanearlierclass.Sourcefilessuchas<codeclass="language-plaintexthighlighter-rouge">weather.c</code>and<codeclass="language-plaintexthighlighter-rouge">mycurl.c</code>arecompiledintoobjectfilessuchas<codeclass="language-plaintexthighlighter-rouge">weather.o</code>and<codeclass="language-plaintexthighlighter-rouge">mycurl.o</code>,respectively.Eachobjectfilecontainsacompiledsystemdependentrepresentationofthesourcefile.Thesourcefilesincludetheheaderfilesaspartofthepreprocessorphaseofthecompilation.Thelinkerlinkstheobjectfilestogethertoresolvethefunctioncallsandglobalvariablereferencesbetweenthem,andthendoesthesamewithanyneededlibraryfunctionsandvariables,andproducesanexecutable.Wheninvoked,theloadermaythenloadtheprogramintomemoryreadytorun.</p><p>Upuntilnowwehavebeentypingoutthe<codeclass="language-plaintexthighlighter-rouge">gcc</code>commandlinestobuildandexecutable:</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>gcc-Wall-pedantic-std=c11-oweatherweather.cmycurl.c</code></pre></div></div><p>ormorespecifically,withouralias<codeclass="language-plaintexthighlighter-rouge">mygcc</code>:</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>mygcc-oweatherweather.cmycurl.c</code></pre></div></div><p>Fromnowonwewilluseabettermethodforbuildingsystems.Wewillusethe<codeclass="language-plaintexthighlighter-rouge">make</code>softwarewhichautomatesthebuildingofsoftwaresystems.</p><p>The<codeclass="language-plaintexthighlighter-rouge">make</code>utilityisessentiallyacommandgenerator.Youprovideitwithafilethatdescribestheinterdependenciesamongthefilesthatareusedtobuildaparticular<em>target</em>,whichcanbeanexecutableorotherkindoffile(itdoesn’thavetobeanexecutable!).<codeclass="language-plaintexthighlighter-rouge">make</code>buildsadependencytreeofallthefilesthattherequestedtargetdependson,determineswhetheranyofthefileshavechanged,andthenissuesthecommandsshowninthe<codeclass="language-plaintexthighlighter-rouge">Makefile</code>thatwillbringanydependentfilesuptodateandthenthetargetitself.</p><p>Youcanviewthe<ahref="http://www.gnu.org/software/make/manual/make.html">GNUdocumentationfor<codeclass="language-plaintexthighlighter-rouge">make</code></a>,themanualpagesfor<codeclass="language-plaintexthighlighter-rouge">make</code>,SteveTalbot’s“oldiebutgoodie”book“<em>Managingprojectswithmake</em>”whichhasbeen<ahref="http://shop.oreilly.com/product/9780596006105.do">updated</a>in2004byRobertMecklenburgforGNU<codeclass="language-plaintexthighlighter-rouge">make</code>,oranyofthevarietyofonlinetutorialsfor<codeclass="language-plaintexthighlighter-rouge">make</code>formoreinformation.</p><p>Note:Therearethreepopular<codeclass="language-plaintexthighlighter-rouge">make</code>-likeutilitiesforJavaprogramsthatyoumayencounter:Ant,Maven,andGradle.Theysharemanyofthesameideasas<codeclass="language-plaintexthighlighter-rouge">make</code>,butwithadecidedlyJavaorientation.ThebottomlineisyoucanbuildJavasystemswith<codeclass="language-plaintexthighlighter-rouge">make</code>,buttheseJava-specificalternativesaregenerallyfasterandoffermoreoptions.</p><h2id="makefile-basics">Makefilebasics</h2><p>A<codeclass="language-plaintexthighlighter-rouge">Makefile</code>(whichisaplaintextfilethatyouwritethatthe<codeclass="language-plaintexthighlighter-rouge">make</code>utilityinterprets)describeasetofrulesthatcapturethevariousactionsthatmustbeperformedtobuildatarget.Targetscanbespecificfiles,mostcommonlyanexecutable,alibrary,documentation,etc.,oramoreabstractthing,suchasaspecificsystemstate,softwarerepositoryinquiries,oranysequenceofcommands.Theserulesarecapturedinthe<codeclass="language-plaintexthighlighter-rouge">Makefile</code>thatistypicallyfoundinthesourcefiledirectory.</p><p>Beforewedescribethe<codeclass="language-plaintexthighlighter-rouge">make</code>toolandgivesomeexamplesof<codeclass="language-plaintexthighlighter-rouge">Makefile</code>sletstalkaboutthereasonsformovingtoamoreformaltoolforcompilingandlinkingoursourcecode.</p><p>First,itistedioustokeeptypingoutalistoffiles-maybealargenumberoffiles-uponwhichseveralprograms,suchascompilersandlinkers,needtooperate.The<codeclass="language-plaintexthighlighter-rouge">make</code>utilityautomatesthecompilationandlinkingprocess.With<codeclass="language-plaintexthighlighter-rouge">make</code>youspecifyallthefilesthatmakeupyourproject,andhowtheyfittogether,and<codeclass="language-plaintexthighlighter-rouge">make</code>takescareoftherest.Thekeyfunctionofthe<codeclass="language-plaintexthighlighter-rouge">make</code>utilityisthatitdeterminesifanyfiles(forus,typically<codeclass="language-plaintexthighlighter-rouge">*.c</code>and<codeclass="language-plaintexthighlighter-rouge">*.h</code>files)havechangedsincethelastbuild(wherebuildheremeansthenewexecutablethatwouldbecreatedby<codeclass="language-plaintexthighlighter-rouge">make</code>).Ifthetargetfileyouwantmaketobuilddependsonanyfileswhichhavebeenupdated,makethenensuresthosefilesarerecompiled.</p><p>Here’sanexampleofsuchadependencytreewherethetopofthetreerepresentsthetarget<codeclass="language-plaintexthighlighter-rouge">myApp</code>whichdependsuponthosefilesbelowit,andthey,inturn,dependuponthefilesbelowthem.</p><p><imgsrc="/engs50/Notes/makefiles/extra/dependencyTree.png"alt=""/></p><p>Inthisexample,theovalsrepresentfilesthattheprogrammercreatedusinganeditor,downloadedfromgithub,orreceivedfromanotherprogrammer.Therectanglesrepresentfilesthataretheresultofsomeprocessingthatisperformedupononeoftheprogrammer-generatedfiles.Filesthathavea<codeclass="language-plaintexthighlighter-rouge">.o</code>extensionresultfromthecompilerbeingrunona<codeclass="language-plaintexthighlighter-rouge">.c</code>filethatmightusea<codeclass="language-plaintexthighlighter-rouge">.h</code>file.Some<codeclass="language-plaintexthighlighter-rouge">.c</code>filesmightincludeseveral<codeclass="language-plaintexthighlighter-rouge">.h</code>filesbecauseitusesfunctionsdefinedinother<codeclass="language-plaintexthighlighter-rouge">.c</code>files.Inaddition,a<codeclass="language-plaintexthighlighter-rouge">.c</code>filemightcallfunctionsthatarekeptinacommonlibrary,sothe<codeclass="language-plaintexthighlighter-rouge">.c</code>filewillincludethe<codeclass="language-plaintexthighlighter-rouge">.h</code>fileassociatedwiththatlibrary.</p><p>Whenoneofthefileschanges,howdoyoudeterminewhichonesneedstoberecompiledtobringthetargetexecutablefileuptodate?Forexample,if<codeclass="language-plaintexthighlighter-rouge">hash.h</code>changes,thenthefilesthatdependonitmustberebuilt.Inthiscase,thosewouldbe<codeclass="language-plaintexthighlighter-rouge">myApp.o</code>and<codeclass="language-plaintexthighlighter-rouge">hash.o</code>,andthen<codeclass="language-plaintexthighlighter-rouge">myApp</code>itself.</p><p>Thisisbothefficientandcansaveasignificantamountoftime.Thelecturerhasworkedonmanyprojectswhereacompleterebuildforalargeprojecttookseveralhours.Youmayfindyouarerecompilingaprojecteveryfewminutesbecauseoftheenhancementsandfixesyouaremaking.Clearly,agoodgoalofdevelopersofalargeprojectistoonlyrecompilethenecessaryfilesandnotwastetimerecompilingthosefilesthathavenotchangedorhavenodependenciesonfilesthathavechanged.</p><p>Sohowdowetranslatethisdependencytreeintosomething<codeclass="language-plaintexthighlighter-rouge">make</code>canhandle?Themakeutilityusesfilescalled“<codeclass="language-plaintexthighlighter-rouge">Makefiles</code>”toguideitswork.Wecandescribetheabovedependencytreein<ahref="/engs50/Notes/makefiles/extra/Makefile1.txt">Makefile1</a>:</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>#Makefile1CC=gccCFLAGS=-Wall-pedantic-std=c11UTILDIR=../util/UTILFLAG=-ltseutilUTILLIB=$(UTILDIR)libmylib.aUTILC=$(UTILDIR)file1.c$(UTILDIR)file2.c$(UTILDIR)file3.c$(UTILDIR)file4.cUTILH=$(UTILC:.c=.h)#luckily,makehascommentstoo!myApp:myApp.ohtml.ohash.o$(UTILLIB)$(CC)$(CFLAGS)-omyAppmyApp.ohtml.ohash.o-lmylibmyApp.o:myApp.cmyApp.hhtml.hhash.hmylib.h$(CC)$(CFLAGS)-cmyApp.chtml.o:html.chtml.h$(CC)$(CFLAGS)-chtml.chash.o:hash.chash.hmylib.h$(CC)$(CFLAGS)-chash.c$(UTILLIB):$(UTILC)$(UTILH)cd$(UTILDIR);makeclean:rm-f*~rm-f*#rm-f./myApprm-f*.ocd$(UTILDIR);makeclean</code></pre></div></div><p>The<codeclass="language-plaintexthighlighter-rouge">Makefile</code>includesanumberofvariabledefinitionsanddependencyrules.Variables(whereyousee``<codeclass="language-plaintexthighlighter-rouge">=</code>‘’)canbeusedtodefinealistofdirectoriestosearch,asetoffiles,thecompilerandoptionstouse,etc.Makerulescanbeverysimpleorincludecomplicatedcollectionsofshellcommands.The<codeclass="language-plaintexthighlighter-rouge">make</code>utilitysupportsdefinedvariables,conditionalsandsomeotherverysophisticatedfeatures.</p><p>Therearelotsofthingsgoingonhere.</p><p>Firstyouseesome<codeclass="language-plaintexthighlighter-rouge">make</code>macro(constant)definitions:</p><ul><li><codeclass="language-plaintexthighlighter-rouge">CC</code>-definesthenameoftheCcompilertobeusedanddefaultsto<codeclass="language-plaintexthighlighter-rouge">cc</code>or<codeclass="language-plaintexthighlighter-rouge">gcc</code>.Inthiscase<codeclass="language-plaintexthighlighter-rouge">gcc</code>isdefined.</li><li><codeclass="language-plaintexthighlighter-rouge">CFLAGS</code>-definesasetofoptionspassedtothecompilerforallsourcefilecompilation.Inourcasewespecifythesameoptionswehaveusedthroughoutthecourse:<codeclass="language-plaintexthighlighter-rouge">-Wall-pedantic-std=c11</code>.Wecouldalsospecifyotheroptions,liketheincludepathtoincludestandarddirectories(<codeclass="language-plaintexthighlighter-rouge">-I</code>)ordebugging(<codeclass="language-plaintexthighlighter-rouge">-g-ggdb</code>)ifwewish.</li><li><codeclass="language-plaintexthighlighter-rouge">UTILDIR</code>-defineswheretheutilitylibraryismaintained</li><li><codeclass="language-plaintexthighlighter-rouge">UTILFLAG</code>-definestheswitchtogivetogcctolinkwiththatlibrary</li><li><codeclass="language-plaintexthighlighter-rouge">UTILC</code>-definesthelistof<codeclass="language-plaintexthighlighter-rouge">.c</code>filesthatarecompiledintothatlibrary</li><li><codeclass="language-plaintexthighlighter-rouge">UTILH</code>-defines(viaaverytrickymacroexpansion)thelistof<codeclass="language-plaintexthighlighter-rouge">.h</code>filesthatareusedbythe<codeclass="language-plaintexthighlighter-rouge">.c</code>filesthatmakeupthelibrary.</li></ul><p>Similartotheshell,thesemacroscanbeusedbyspecifyingtheirnamewithin<codeclass="language-plaintexthighlighter-rouge">$(</code>and<codeclass="language-plaintexthighlighter-rouge">)</code>,asin<codeclass="language-plaintexthighlighter-rouge">$(CC)</code>.</p><p>Afterthosedefinitionsweseethetargetspecifications.Thestringsbeforethe‘<codeclass="language-plaintexthighlighter-rouge">:</code>’arethe<em>targets</em>ofthe<codeclass="language-plaintexthighlighter-rouge">Makefile</code>.Theyarethethingsthatthis<codeclass="language-plaintexthighlighter-rouge">Makefile</code>canproduce.Afterthe‘<codeclass="language-plaintexthighlighter-rouge">:</code>’isthelistoffilesorothertargetsuponwhichthattarget“depends”.Afterthattargetanddependencyline,thefollowinglines<em>thatbeginwithatabcharacter</em>areexecutedinordertobringthattarget“uptodate.”</p><p>Yes,thetabcharacterisalittleannoying,butthat’sthewayitis.Anauthorexpresseditwellintheentryfor<codeclass="language-plaintexthighlighter-rouge">make</code>inWikipedia:</p><blockquote><p>``ThesyntaxusedbyMakegivestab,awhitespacecharacter,adifferentmeaningfromthespacecharacter.Thisisproblematic,sincethereisusuallynovisualdifferencebetweenatabandanumberofspacecharacters.Thus,thesyntaxofmakeisoftensubjecttocriticism.’’</p><p>Citation:http://en.wikipedia.org</p></blockquote><p>So,ifyoucutandpastea<codeclass="language-plaintexthighlighter-rouge">Makefile</code>fromthese<codeclass="language-plaintexthighlighter-rouge">html</code>lecturenotesintoaneditor,youwilllikelyhaveproblemswiththetabcharactersandmakewillnotexecutecorrectly.Instead,ifyouclickonthesuppliedlinkanddownloadthefileitwillarriveintact.</p><p>InalloftheexampleMakefilespresentedhere,actionsstartwithatabandnotspaces.Allotherformattingusessinglespaces.</p><p>Ifyouareinthesamedirectoryofa<codeclass="language-plaintexthighlighter-rouge">Makefile</code>andenter“<codeclass="language-plaintexthighlighter-rouge">make</code>”,(withnoparameters)theutilitywillreadtheMakefile,checkthefirsttargetitreads,and,ifitis“outofdate”,trytoexecutethecommandsthatarespecified.</p><p>Let’shaveanexample.Supposethe<codeclass="language-plaintexthighlighter-rouge">html.c</code>filehaschangedsincethelasttime<codeclass="language-plaintexthighlighter-rouge">myApp</code>wasbuilt.Then<codeclass="language-plaintexthighlighter-rouge">myApp</code>isoutofdate.IftheMakefileisinthecurrentdirectory,youcansimplyrun<codeclass="language-plaintexthighlighter-rouge">make</code>andthesecommandswillbeexecuted:</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>gcc<spanclass="nt">-Wall</span><spanclass="nt">-pedantic</span><spanclass="nt">-std</span><spanclass="o">=</span>c11<spanclass="nt">-c</span>hash.cgcc<spanclass="nt">-Wall</span><spanclass="nt">-pedantic</span><spanclass="nt">-std</span><spanclass="o">=</span>c11<spanclass="nt">-o</span>myAppmyApp.ohtml.ohash.o<spanclass="nt">-lmylib</span></code></pre></div></div><p>Ifanyofthecommands<codeclass="language-plaintexthighlighter-rouge">make</code>isexecutingexitswithanon-zeroreturncode,<codeclass="language-plaintexthighlighter-rouge">make</code>willthen:</p><ul><li>erasethecurrenttargetitwasworkingon</li><li>issueamessage</li><li>exitwithanon-zeroreturncodewithouttryingtobuildanythingelse</li></ul><p>Oftenyouwillseeotherusesofmacrosinthe<codeclass="language-plaintexthighlighter-rouge">Makefile</code>.</p><p>Here’sanothersample<codeclass="language-plaintexthighlighter-rouge">Makefile</code>whichisavariationonthepreviousexample.<ahref="/engs50/Notes/makefiles/extra/Makefile2.txt">Makefile2</a></p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>#Makefile2CC=gccCFLAGS=-Wall-pedantic-std=c11UTILDIR=../util/UTILFLAG=-lmylibUTILLIB=$(UTILDIR)libmylib.aUTILC=$(UTILDIR)file1.c$(UTILDIR)file2.comments$(UTILDIR)file3.c$(UTILDIR)file4.cUTILH=$(UTILC:.c=.h)#myprojectdetailsEXEC=myAppOBJS=myApp.ohtml.ohash.oSRCS=myApp.chtml.chash.cmyApp.hhtml.hhash.h#luckily,makehascommentstoo!$(EXEC):$(OBJS)$(UTILLIB)$(CC)$(CFLAGS)-o$(EXEC)$(OBJS)$(UTILFLAG)$(OBJS):$(SRCS)$(CC)$(CFLAGS)-c$(SRCS)debug:$(SRCS)$(CC)$(CFLAGS)-g-ggdb-c$(SRCS)$(CC)$(CFLAGS)-g-ggdb-o$(EXEC)$(OBJS)$(UTILFLAG)$(UTILLIB):$(UTILC)$(UTILH)cd$(UTILDIR);makeclean:rm-f*~rm-f*#rm-f./myApprm-f*.ocd$(UTILDIR);makeclean</code></pre></div></div><p>Hereweseesomenewmacrosbeingused:</p><p><codeclass="language-plaintexthighlighter-rouge">EXEC</code>-which,definesthenameoftheexecutablefile.</p><p><codeclass="language-plaintexthighlighter-rouge">SRCS</code>-whichdefinesthelistofsourcefiles.</p><p><codeclass="language-plaintexthighlighter-rouge">OBJS</code>-whichdefinesthelistofobjectfiles.</p><p>TheMakefiledefaultactionwhensimplytyping<codeclass="language-plaintexthighlighter-rouge">make</code>buildsthefirsttargetitfinds,namely,the<codeclass="language-plaintexthighlighter-rouge">myApp</code>executable.Iftheprogrammertypes<codeclass="language-plaintexthighlighter-rouge">makedebug</code>then<codeclass="language-plaintexthighlighter-rouge">make</code>willbuildthefirsttarget(<codeclass="language-plaintexthighlighter-rouge">myApp</code>)withthe<codeclass="language-plaintexthighlighter-rouge">-g-ggdb</code>optionswhichallowstheGNUdebugger(<codeclass="language-plaintexthighlighter-rouge">gdb</code>)toberunontheexecutable.</p><p>TheexampleMakefileabovedefinesthesetofrulesanddependenciestofollowinordertobuildtheexecutable<codeclass="language-plaintexthighlighter-rouge">myApp</code>.Tomakethe<codeclass="language-plaintexthighlighter-rouge">EXEC</code>youneedthe<codeclass="language-plaintexthighlighter-rouge">OBJS</code>.Togetthe<codeclass="language-plaintexthighlighter-rouge">OBJS</code>youneedthe<codeclass="language-plaintexthighlighter-rouge">SRCS</code>.</p><p>Anothercommontargetdefinedinmakefilesis<codeclass="language-plaintexthighlighter-rouge">clean</code>.Itisanexampleofatargetthatdoesnotresultinanewfilebeingcreatedorupdated.Here,the<codeclass="language-plaintexthighlighter-rouge">clean</code>targethasnodependenciesand,thus,canbethoughtofas“alwaysoutofdate”.Ifyouenter“<codeclass="language-plaintexthighlighter-rouge">makeclean</code>”the<codeclass="language-plaintexthighlighter-rouge">make</code>utilitywillskiptothe<codeclass="language-plaintexthighlighter-rouge">clean</code>targetand,seeingnodependencies,proceeddirectlytotheassociatedcommands.</p><p>Theideaofa“<codeclass="language-plaintexthighlighter-rouge">clean</code>”targetisagoodone,butit’ssurprisinglyhardtogetright.Asisoftenthecasewithsoftware,therearemanylittlefilesthatgetcreatedhereandthere,andoftenadeveloperwillupdatetherealtargetsanddependenciespartofthe<codeclass="language-plaintexthighlighter-rouge">Makefile</code>withoutcheckingtoseeifhealsoneedstoupdatethe“<codeclass="language-plaintexthighlighter-rouge">clean</code>”target’scommands.Thisisanexampleof<em><ahref="http://www.cmcrossroads.com/article/make-clean-usmans-law">Usman’slaw</a>.</em>Onesolutiontothischallengeisdescribedthereas:</p><blockquote><p>*“Becauseofthepitfallsof<codeclass="language-plaintexthighlighter-rouge">makeclean</code>,thebestwayisnottohavea`makeclean`.Themostreliablemethodisasfollows:</p><ol><li>TheprojectMakefilemustwriteitsoutputtoasub-directoryofthedirectoryitisin.</li><li>Tomakecleanyougouponedirectoryanddeletetheentirehierarchy.Thentomakeagainyoucreateanewdirectory,checkoutthesources,enterthedirectoryandrunmake.”*</li></ol></blockquote><h2id="make-command-usage"><codeclass="language-plaintexthighlighter-rouge">make</code>commandusage</h2><p>Herearesomeofthecommandlineargumentsyoucanusewithmake.Toseeallofthem,use<codeclass="language-plaintexthighlighter-rouge">manmake</code></p><p><codeclass="language-plaintexthighlighter-rouge">-ffile</code>use<codeclass="language-plaintexthighlighter-rouge">file</code>asthe<codeclass="language-plaintexthighlighter-rouge">Makefile</code></p><p><codeclass="language-plaintexthighlighter-rouge">-d</code>producedebugginginformationwhilerunning</p><p><codeclass="language-plaintexthighlighter-rouge">-k</code>whileaparticulartargetandthethingsthatdependonitmighthavefailed,continuetryingtomaketheotherdependenciesofthesetargetsanyway.</p><p><codeclass="language-plaintexthighlighter-rouge">-n</code>Determinewhichcommandsneedtoberun,butdon’tactuallyexecuteanyofthem,justprintthem.</p><p><codeclass="language-plaintexthighlighter-rouge">-B</code>unconditionallymakealltargets</p><h3id="how-does-make-respond">Howdoesmakerespond?</h3><p>AssumingyouhavenoerrorsinyourMakefile,whenyouinvokethemakeutilityoneoffourthingswillhappen:</p><ol><li><p>whenithasnothingtodo,makerespondswiththefollowingandhalts:</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>'target'isuptodate</code></pre></div></div></li><li>abunchofcommandsareexecutedtotrytodowhatyouasked,continuinguntileitheranerroroccurs(e.g.,compileerror)orallofthecommandsareexecuted.</li><li><p>whenitdoesn’tknowwhattodo,makerespondswiththefollowingandhalts:</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>Don'tknowhowtomakesome-target</code></pre></div></div></li><li><p>sometimesifmakecan’tdecidewhattodo,itrespondswithnothing.Thisisusuallyduetoamissingcomponentfile.Forexample,ifyouhave</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>target:main.o</code></pre></div></div><p>andthenenter<codeclass="language-plaintexthighlighter-rouge">maketarget</code>,makewilltrytofindsomewaytocheckif<codeclass="language-plaintexthighlighter-rouge">main.o</code>isuptodate.If</p><ul><li>aguessofhowtomake<codeclass="language-plaintexthighlighter-rouge">main.o</code>dependsuponafilethatdoesn’texist,or</li><li>thefile<codeclass="language-plaintexthighlighter-rouge">main.o</code>doesexist,or</li><li><codeclass="language-plaintexthighlighter-rouge">target</code>eitherdoesn’texistorisoutofdatewithrespectto<codeclass="language-plaintexthighlighter-rouge">main.o</code></li></ul><p>thenthe<codeclass="language-plaintexthighlighter-rouge">make</code>commandwilleitherremaintotallysilent(oldsystems)orrespondwithsomethinglike:</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>make:***Noruletomaketarget`mainline.o',neededby`target`.Stop.</code></pre></div></div></li></ol><h2id="more-on-macros">Moreonmacros</h2><p>AnysymbolthatisdefinedinaMakefilelikethis</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>NAME=VALUE</code></pre></div></div><p>iscalledamacro.Oncedefined,youcanexpandthemusing</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>...$(NAME)...</code></pre></div></div><p>Anyenvironmentvariablesthatweresetpriortoyourrunningmakeareautomaticallymadeavailableduringtheexecutionofmake:<ahref="/engs50/Notes/makefiles/extra/Makefile4.txt">Makefile4</a></p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>#Makefile4top:middle@echo"buildingthetop"middle:whoami@echo"buildingthemiddle"whoami:@echo"makeinvokedbyUser"$(USER)"runningshell"$(SHELL)"."</code></pre></div></div><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="o">[</span>ccpalmer@swamp]<spanclass="nv">$</span>make<spanclass="nt">-f</span>Makefile2makeinvokedbyUserccpalmerrunningshell/bin/sh<spanclass="nb">.</span>buildingthemiddlebuildingthetop<spanclass="o">[</span>ccpalmer@swamp]<spanclass="nv">$</span></code></pre></div></div><p>Themakeutilityalsoprovidessomeusefulbuiltinmacros:</p><p><codeclass="language-plaintexthighlighter-rouge">$@</code>nameofthecurrenttarget</p><p><codeclass="language-plaintexthighlighter-rouge">$?</code>Thelistofdependenciesthatarenewerthanthetarget</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>target:a.cb.cc.c@echo<spanclass="s2">"workingon"</span><spanclass="nv">$@</span><spanclass="s2">"duetoupdatesto"</span><spanclass="nv">$?</span><spanclass="s2">"[ccpalmer@swamp]</span><spanclass="nv">$</span><spanclass="s2">touchtarget[ccpalmer@swamp]</span><spanclass="nv">$</span><spanclass="s2">toucha.cc.c[ccpalmer@swamp]</span><spanclass="nv">$</span><spanclass="s2">make-fMakefile3workingontargetduetoupdatestoa.cc.c[ccpalmer@swamp]</span><spanclass="nv">$</span><spanclass="s2"></span></code></pre></div></div><p>Note,ofcourse,thatthetargetdoesn’tnecessarilyrepresentafile,butbyusing“touchtarget”weforcecreationofanemptyfilewiththecurrenttimestamp.</p><p><codeclass="language-plaintexthighlighter-rouge">D</code>directorypath,$(@D),$(&lt;D)</p><p><codeclass="language-plaintexthighlighter-rouge">F</code>filename,$(@F),$(&lt;F)</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>target.x:a.cb.cc.c@echo"workingon"$@"duetoupdatesto"$?@echo"Dollar@withDis:["$(@D)"]"@echo"Dollar@withFis:["$(@F)"]"[ccpalmer@swamp]$touchtarget.x[ccpalmer@swamp]$touchb.cc.c[ccpalmer@swamp]$make-fMakefile3workingontarget.xduetoupdatestob.cc.cDollar@withDis:[.]Dollar@withFis:[target.x][ccpalmer@swamp]$</code></pre></div></div><h2id="suffix-rules">Suffixrules</h2><p>Tofurtherreducethecomplexityofyour<codeclass="language-plaintexthighlighter-rouge">Makefiles</code>,youcanusemake’ssuffixrules.Bysuffixinthiscontext,we’retalkingaboutfiletypesorextensions(e.g.,<codeclass="language-plaintexthighlighter-rouge">.c</code>,<codeclass="language-plaintexthighlighter-rouge">.h</code>,<codeclass="language-plaintexthighlighter-rouge">.o</code>,etc.).Theserulesaredefinedinthe<codeclass="language-plaintexthighlighter-rouge">Makefile</code>andshowadefaultwayofmakingafilewithonesuffixintoafilewithanothersuffix.Forexample,youmighthaveinallofyourmakefilessomesuffixruleslikethese:</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>.SUFFIXES:.o.c.s.c.o:$(CC)$(CFLAGS)-c$&lt;.s.o:$(AS)$ASFLAGS)-o$@$&lt;</code></pre></div></div><p>The<codeclass="language-plaintexthighlighter-rouge">.SUFFIXES</code>lineidentifieswhichsuffixesmakeshouldconsiderasspecial.Afterthat,youseelineswithtwosuffixesasatarget,followedbystatementsofhowtoturnfileswiththefirstsuffixintofileswiththesecond.</p><p>Inessence,thesesuffixrulesprovideadefaultmeansofproducingonekindoffilefromanother.Ifthesedefaultsaresufficient,youwon’tneedtodefinespecifictargetsforthesetargets.</p><p>Therearealsosomemorebuiltinmacrosthatareonlyavailableinsuffixrules:</p><p><codeclass="language-plaintexthighlighter-rouge">$&lt;</code>Thenameofadependencyfile,derivedasifselectedforusewithanimplicitrule.</p><p><codeclass="language-plaintexthighlighter-rouge">$*</code>Thebasenameofthecurrenttarget.Thatis,thenameofthecurrenttargetwithoutitssuffix.</p><h2id="more-cool-make-ideas-from-ask-mr-make-ccp--others">Morecoolmakeideas(from<ahref="http://blog.jgc.org/2010/01/update-list-of-my-gnu-make-articles.html">AskMrMake</a>,ccp,&amp;others)</h2><h3id="printing-out-make-variables">Printingoutmakevariables</h3><p>Sometimesyouneedtoknowwhat$Xiswhilethemakefileisbeingrun.Aneasywaytoprintoutitsvalueistoaddtherule</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>MYVAR=42target:@echo"atthetop"@echo"itis="$(MYVAR)print-%:@echo$*=$($*)[cs50@tahoe]$make-fp.makatthetopitis=42[cs50@tahoe]$make-fp.makprint-MYVARMYVAR=42[cs50@tahoe]$</code></pre></div></div><p>Specialcapabilities</p><ul><li>dontforgetyoucanincludeshellcommandsinthemakefile</li><li>makefilescaninvokeothermakefiles!</li><li>makefilescancreatealltheothermakefilesforasystem(seethe<ahref="http://www.porcupine.org/postfix-mirror/start.html">postfixproject</a>foranexcellentexample).</li></ul><h3id="non-compilation-makefiles">Non-compilationmakefiles</h3><p>Youcanusemakefilestosolvemanyofyourdailychallengesinvolvingasequencesofdependentactions:</p><ul><li>runningtestshellscriptsduringdevelopmentandregressiontesting(wewilldothis!)</li><li>creatingdocumentswithLaTeX(seethefollowingexample)</li><li>maintainingwebpages(stagingandlivedirectories),includingverifyingaccessibilitycompliance,stylerules,etc.</li><li>automateddocumentationgeneration,includingliterateprogramming</li><li>sourcecodemanagement</li></ul><h2id="large-example-makefile">LargeexampleMakefile</h2><p>HerearesomeexcerptsoftheMakefileweusetobuild,test,andrunourserverfortheProject.</p><divclass="language-makehighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="c">#======================================</span><spanclass="c">#Makefileforappserver</span><spanclass="c">#</span><spanclass="c">#Author:IraRayJenkins</span><spanclass="c">#Date:SunMay11,2014</span><spanclass="c">#Note:Gnumakeisassumed</span><spanclass="c">#======================================</span><spanclass="c">#directories</span><spanclass="nv">INC_DIR</span><spanclass="o">=</span>.<spanclass="nv">SRC_DIR</span><spanclass="o">=</span>src<spanclass="nv">BLD_DIR</span><spanclass="o">=</span>build<spanclass="nv">BIN_DIR</span><spanclass="o">=</span>bin<spanclass="nv">TST_DIR</span><spanclass="o">=</span><spanclass="nb">test</span><spanclass="c">#compilerandflags</span><spanclass="nv">CC</span><spanclass="o">=</span>gcc<spanclass="nv">CFLAGS</span><spanclass="o">=</span><spanclass="nt">-std</span><spanclass="o">=</span>c11<spanclass="nt">-Wall</span><spanclass="nt">-pedantic</span><spanclass="nt">-g</span><spanclass="nv">LIBS</span><spanclass="o">=</span><spanclass="nt">-lcrypto</span><spanclass="nt">-lgd</span><spanclass="nv">INCS</span><spanclass="o">=</span><spanclass="nt">-I</span><spanclass="nv">$(INC_DIR)</span>/<spanclass="nt">-I</span><spanclass="nv">$(SRC_DIR)</span>/<spanclass="c">#whatwe'redoing</span><spanclass="nv">HDR</span><spanclass="o">=</span><spanclass="nv">$(INC_DIR)</span>/app.h<spanclass="nv">SRC</span><spanclass="o">=</span>app.cfile.chash.cgenstack.c<spanclass="nv">OBJ</span><spanclass="o">=</span><spanclass="nf">$(</span><spanclass="nb">patsubst</span><spanclass="nv">$(SRC_DIR)</span>/%.c,<spanclass="nv">$(BLD_DIR)</span>/%.o,<spanclass="nv">$(SRC)</span><spanclass="nf">)</span><spanclass="nv">BIN</span><spanclass="o">=</span><spanclass="nv">$(BIN_DIR)</span>/appd<spanclass="nv">TST_BINS</span><spanclass="o">=</span><spanclass="nv">$(BIN_DIR)</span>/app_test<spanclass="nv">$(BIN_DIR)</span>/genstack_test<spanclass="c">#thesetargetsdonotproducereal"targets"</span><spanclass="nl">.PHONY</span><spanclass="o">:</span><spanclass="nf">cleansetuptestserverstart-serverstop-serverclient</span>\<spanclass="nf">start-clientstop-client</span><spanclass="c">#ignoreerrorsfromthesetargets</span><spanclass="nl">.IGNORE</span><spanclass="o">:</span><spanclass="nf">stop-server</span><spanclass="c">#Defaulttarget-theserver</span><spanclass="nl">$(BIN)</span><spanclass="o">:</span><spanclass="nf">setup$(OBJ)$(HDR)</span><spanclass="err">@echo</span><spanclass="s2">"Buildingur..."</span><spanclass="err">$(CC)</span><spanclass="err">$(CFLAGS)</span><spanclass="err">$(INCS)</span><spanclass="err">-o</span><spanclass="err">$@</span><spanclass="err">$(OBJ)</span><spanclass="err">$(LIBS)</span><spanclass="c">#app_test</span><spanclass="nl">$(BIN_DIR)/app_test</span><spanclass="o">:</span><spanclass="nf">setup$(BLD_DIR)/app_test.o$(BLD_DIR)/file.o</span>\<spanclass="nf">$(BLD_DIR)/genstack.o$(HDR)</span><spanclass="err">@echo</span><spanclass="s2">"Building$(@)..."</span><spanclass="err">$(CC)</span><spanclass="err">$(CFLAGS)</span><spanclass="err">$(INCS)</span><spanclass="err">-o</span><spanclass="err">$@</span><spanclass="err">$(BLD_DIR)/app_test.o</span><spanclass="err">$(BLD_DIR)/file.o</span><spanclass="err">\</span><spanclass="err">$(BLD_DIR)/genstack.o</span><spanclass="err">$(LIBS)</span><spanclass="err">@$(BIN_DIR)/app_test</span><spanclass="c">#genstack_test</span><spanclass="nl">$(BIN_DIR)/genstack_test</span><spanclass="o">:</span><spanclass="nf">setup$(BLD_DIR)/genstack_test.o$(BLD_DIR)/genstack.o$(HDR)</span><spanclass="err">@echo</span><spanclass="s2">"Building$(@)..."</span><spanclass="err">$(CC)</span><spanclass="err">$(CFLAGS)</span><spanclass="err">$(INCS)</span><spanclass="err">-o</span><spanclass="err">$@</span><spanclass="err">$(BLD_DIR)/genstack_test.o</span><spanclass="err">$(BLD_DIR)/genstack.o</span><spanclass="err">$(LIBS)</span><spanclass="err">@$(BIN_DIR)/genstack_test</span><spanclass="c">#appc</span><spanclass="nl">$(BIN_DIR)/appc</span><spanclass="o">:</span><spanclass="nf">setup$(BLD_DIR)/appc.o$(HDR)</span><spanclass="err">@echo</span><spanclass="s2">"Building$(@)..."</span><spanclass="err">$(CC)</span><spanclass="err">$(CFLAGS)</span><spanclass="err">$(INCS)</span><spanclass="err">-o</span><spanclass="err">$@</span><spanclass="err">$(BLD_DIR)/appc.o</span><spanclass="err">$(LIBS)</span><spanclass="c">#generalrulefor.ofileswitha.h</span><spanclass="nl">$(BLD_DIR)/%.o</span><spanclass="o">:</span><spanclass="nf">$(SRC_DIR)/%.c$(SRC_DIR)/%.h$(HDR)</span><spanclass="err">@echo</span><spanclass="s2">"Building$(@)..."</span><spanclass="err">$(CC)</span><spanclass="err">$(CFLAGS)</span><spanclass="err">$(INCS)</span><spanclass="err">-c</span><spanclass="err">-o</span><spanclass="err">$@</span><spanclass="err">$&lt;</span><spanclass="err">$(LIBS)</span><spanclass="err">@echo</span><spanclass="c">#generalrulefor.ofileswithno.h</span><spanclass="nl">$(BLD_DIR)/%.o</span><spanclass="o">:</span><spanclass="nf">$(SRC_DIR)/%.c$(HDR)</span><spanclass="err">@echo</span><spanclass="s2">"Building$(@)..."</span><spanclass="err">$(CC)</span><spanclass="err">$(CFLAGS)</span><spanclass="err">$(INCS)</span><spanclass="err">-c</span><spanclass="err">-o</span><spanclass="err">$@</span><spanclass="err">$&lt;</span><spanclass="err">$(LIBS)</span><spanclass="err">@echo</span><spanclass="nl">$(BLD_DIR)/%.o</span><spanclass="o">:</span><spanclass="nf">$(TST_DIR)/%.c$(HDR)</span><spanclass="err">@echo</span><spanclass="s2">"Building$(@)..."</span><spanclass="err">$(CC)</span><spanclass="err">$(CFLAGS)</span><spanclass="err">$(INCS)</span><spanclass="err">-c</span><spanclass="err">-o</span><spanclass="err">$@</span><spanclass="err">$&lt;</span><spanclass="err">$(LIBS)</span><spanclass="err">@echo</span><spanclass="nl">test</span><spanclass="o">:</span><spanclass="nf">$(TST_BINS)</span><spanclass="nl">client</span><spanclass="o">:</span><spanclass="nf">$(BIN_DIR)/appc</span><spanclass="nl">start-client</span><spanclass="o">:</span><spanclass="nf">client</span><spanclass="err">@$(BIN_DIR)/appc</span><spanclass="err">4</span><spanclass="err">5</span><spanclass="err">pierce.cs.dartmouth.edu</span><spanclass="nl">stop-client</span><spanclass="o">:</span><spanclass="err">@killall</span><spanclass="err">-q</span><spanclass="err">appc</span><spanclass="nl">server</span><spanclass="o">:</span><spanclass="nf">$(BIN)</span><spanclass="nl">start-server</span><spanclass="o">:</span><spanclass="nf">$(BIN)</span><spanclass="err">@$(BIN)&amp;</span><spanclass="nl">stop-server</span><spanclass="o">:</span><spanclass="err">@killall</span><spanclass="err">-q</span><spanclass="err">appd</span><spanclass="nl">setup</span><spanclass="o">:</span><spanclass="err">@mkdir</span><spanclass="err">-p</span><spanclass="err">$(BIN_DIR)</span><spanclass="err">@mkdir</span><spanclass="err">-p</span><spanclass="err">$(BLD_DIR)</span><spanclass="c">#cleanupthedirectories</span><spanclass="nl">clean</span><spanclass="o">:</span><spanclass="nf">stop-server</span><spanclass="err">rm</span><spanclass="err">-rf</span><spanclass="err">*</span><spanclass="c">#core**.png$(BLD_DIR)$(BIN_DIR)test/*log*.log</span></code></pre></div></div><p>Notesontheabove:</p><ol><li>Normallymakewillechoeachcommanditisrunningtothescreen.Byprecedingacommandwithan‘@’youcanpreventthisechoing,butthecommandwillrunnormally.</li><li><codeclass="language-plaintexthighlighter-rouge">patsubst</code>changesstringsthatmatchthefirstarg,intostringsthatlooklikethesecondarg,withthethirdargprovidingthelistofstrings.(Gnumake)</li><li><codeclass="language-plaintexthighlighter-rouge">.PHONY:</code>providesalistoftargetsthatdon’tcorrespondtoactualfiles.Forexample,byusingthisdirectiveinamakefilewithatarget<codeclass="language-plaintexthighlighter-rouge">clean</code>,thenevenifthereisafilenamed<codeclass="language-plaintexthighlighter-rouge">clean</code>onthesystemitwillnotbeconsideredandthe<codeclass="language-plaintexthighlighter-rouge">clean:</code>targetwillbemadewhenneededorrequested.</li><li><codeclass="language-plaintexthighlighter-rouge">.IGNORE:</code>providesalistoftargetsforwhicherrorsshouldbeignored</li></ol></div></article></div></div><footerclass="site-footer"><divclass="wrapper"><h2class="footer-heading">Engs50(CS50)--DartmouthCollege</h2><p><fontsize=-1>ThisversionofthecourseisbaseduponthosedesignedbyProfessorsPalmer,Kotz,Zhou,Campbell,andBalkcom.Iamdeeplyindebtedtotheseoutstandingeducators.--<ahref="https://engineering.dartmouth.edu/people/faculty/stephen-taylor/">StephenTaylor</a></font></p><p><small>Thispagewaslastupdatedon<strong>2023-01-05</strong>at<strong>11:31</strong>.</small></p></div></footer></body></html>
