https://thayer.github.io/engs50/Labs/Lab3/
2
43432
<!DOCTYPEhtml><html><head><metacharset="utf-8"><metahttp-equiv="X-UA-Compatible"content="IE=edge"><metaname="viewport"content="width=device-width,initial-scale=1"><title>Lab3-DatastructuresinC</title><metaname="description"content="InEngs50youwilllearnhowtodesign&buildlarge,reliable,maintainable,andunderstandablesoftwaresystems.IntheprocessyouwilllearntoprograminCwithUnixdevelopmenttools."><linkrel="shortcuticon"href="/engs50/50.png"/><linkrel="stylesheet"href="/engs50/css/main.css"><linkrel="canonical"href="/engs50/Labs/Lab3/"></head><body><headerclass="site-header"><aclass="site-title"href="/engs50/"><imgwidth=48align=centersrc="/engs50/50.png"alt="icon">Engs50(CS50)</a><navclass="site-nav">[<ahref="/engs50/Labs/">Labs</a>][<ahref="/engs50/Notes/">Notes</a>][<ahref="/engs50/Reading/">Reading</a>][<ahref="/engs50/Resources/">Resources</a>][<ahref="/engs50/Examples/">Examples</a>]</nav></header><divclass="page-content"><divclass="wrapper"><articleclass="post"><headerclass="post-header"><h1class="post-title">Lab3-DatastructuresinC</h1></header><divclass="post-content"><p><strong>DueFriday,April20,at10pm</strong></p><p>Inthislabyou’llcodeasetofdatastructuresthatwillsupporttheneedsoftheTinySearchEngine(TSE).</p><ulid="markdown-toc"><li><ahref="#assignment"id="markdown-toc-assignment">Assignment</a><ul><li><ahref="#about-the-data-structures"id="markdown-toc-about-the-data-structures">Aboutthedatastructures</a></li><li><ahref="#bag"id="markdown-toc-bag">bag</a></li><li><ahref="#set"id="markdown-toc-set">set</a></li><li><ahref="#counters"id="markdown-toc-counters">counters</a></li><li><ahref="#hashtable"id="markdown-toc-hashtable">hashtable</a></li><li><ahref="#general-notes"id="markdown-toc-general-notes">Generalnotes</a></li></ul></li><li><ahref="#hints"id="markdown-toc-hints">Hints</a></li><li><ahref="#what-to-hand-in-and-how"id="markdown-toc-what-to-hand-in-and-how">Whattohandin,andhow</a><ul><li><ahref="#submitting-your-lab"id="markdown-toc-submitting-your-lab">Submittingyourlab</a></li></ul></li></ul><p>Inthislabyouwilldevelopsomegeneral-purposedatastructuresthat,withmodulardesign,canbere-usedforotherlabs-mostnotably,theTinySearchEngine.</p><p>Gradingwillfocuson<ahref="/engs50/Resources/CodingStyle.html">CS50codingstyle</a>-includingconsistentformatting,selectionofidentifiernames,anduseofmeaningfulcomments-inadditiontocorrectnessandtesting.</p><p><strong><em>YourCcodemustcompilewithoutproducinganycompilerwarnings.</em></strong>YouwilllosepointsifthecompilerproduceswarningswhenusingourCS50-standardcompilerflags.</p><p><strong><em>Ifyoursubmittedcodefailstocompile,ortriggersasegmentationfault,</em></strong>we’llnotifyyouandgiveyouanopportunitytorepairandresubmit.(See<em><ahref="/index.html#crashes">programsthatcrash</a>.</em>)Writedefensivecode:eachfunctionshouldcheckitspointerparametersforNULL,andtakesomeappropriate(safe)action.</p><h2id="assignment">Assignment</h2><p>Obtainour<ahref="starter">starterkit</a>,whichimplementsthe<codeclass="language-plaintexthighlighter-rouge">bag</code>moduleandincludesthe<em>readlinep</em>and<em>memory</em>module.Yourassignmentistoaddthreenewmodules,eachofwhichdefinesadifferentdatastructure.</p><ul><li>(30points)<em><codeclass="language-plaintexthighlighter-rouge">set</code></em></li><li>(30points)<em><codeclass="language-plaintexthighlighter-rouge">counters</code></em></li><li>(40points)<em><codeclass="language-plaintexthighlighter-rouge">hashtable</code></em></li></ul><p>YoucancopythestarterkittoyourownworkdirectoryontheCSdepartmentsystems:</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="c">#assumingyou'veloggedintoaCSsystem</span><spanclass="nb">mkdir</span><spanclass="nt">-p</span>~/cs50/labs/lab3<spanclass="nb">cp</span><spanclass="nt">-r</span>~cs50/public_html/Labs/Lab3/starter/<spanclass="k">*</span>~/cs50/labs/lab3/</code></pre></div></div><p>ortoyourMacusing<codeclass="language-plaintexthighlighter-rouge">scp</code>:</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>scp<spanclass="nt">-r</span>username@flume:~cs50/public_html/Labs/Lab3/starterlab3</code></pre></div></div><h3id="about-the-data-structures">Aboutthedatastructures</h3><p>Thespecificdatastructuresaredefinedinthesectionsbelow.</p><p>Inthetablebelow,wecomparethesedatastructureswiththetwoweexploredinclass.Mostofthesedatastructuresallowyoutostoreacollectionof“items”.Boththe<codeclass="language-plaintexthighlighter-rouge">set</code>and<codeclass="language-plaintexthighlighter-rouge">hashtable</code>areexamplesofanabstractdatastructurecalleda<em>dictionary</em>,whichprovidemethodslike<codeclass="language-plaintexthighlighter-rouge">insert(key,item)</code>and<codeclass="language-plaintexthighlighter-rouge">item=retrieve(key)</code>,wherethe<codeclass="language-plaintexthighlighter-rouge">key</code>allowsthestructuretodistinguishamongtheitemsitstores.</p><table><thead><tr><thstyle="text-align:left">Behavior</th><thstyle="text-align:left"><codeclass="language-plaintexthighlighter-rouge">list</code></th><thstyle="text-align:left"><codeclass="language-plaintexthighlighter-rouge">bag</code></th><thstyle="text-align:left"> </th><thstyle="text-align:left"><codeclass="language-plaintexthighlighter-rouge">set</code></th><thstyle="text-align:left"><codeclass="language-plaintexthighlighter-rouge">counters</code></th><th><codeclass="language-plaintexthighlighter-rouge">hashtable</code></th></tr></thead><tbody><tr><tdstyle="text-align:left">storesan<em>item</em></td><tdstyle="text-align:left">yes</td><tdstyle="text-align:left">yes</td><tdstyle="text-align:left"> </td><tdstyle="text-align:left">yes</td><tdstyle="text-align:left">no</td><td>yes</td></tr><tr><tdstyle="text-align:left">usesa<em>key</em></td><tdstyle="text-align:left">no</td><tdstyle="text-align:left">no</td><tdstyle="text-align:left"> </td><tdstyle="text-align:left">yes</td><tdstyle="text-align:left">yes</td><td>yes</td></tr><tr><tdstyle="text-align:left">keepsitemsinorder</td><tdstyle="text-align:left">yes</td><tdstyle="text-align:left">no</td><tdstyle="text-align:left"> </td><tdstyle="text-align:left">no</td><tdstyle="text-align:left">no</td><td>no</td></tr><tr><tdstyle="text-align:left">retrieval</td><tdstyle="text-align:left">firstitem</td><tdstyle="text-align:left">anyitem</td><tdstyle="text-align:left"> </td><tdstyle="text-align:left">bykey</td><tdstyle="text-align:left">bykey</td><td>bykey</td></tr><tr><tdstyle="text-align:left">insertionofduplicates</td><tdstyle="text-align:left">allowed</td><tdstyle="text-align:left">allowed</td><tdstyle="text-align:left"> </td><tdstyle="text-align:left">error</td><tdstyle="text-align:left">incrementcount</td><td>error</td></tr></tbody></table><p>Noticethat</p><ul><li>a<codeclass="language-plaintexthighlighter-rouge">list</code>keeps<em>items</em>inorder,buta<codeclass="language-plaintexthighlighter-rouge">bag</code>ora<codeclass="language-plaintexthighlighter-rouge">set</code>doesnot.</li><li>a<codeclass="language-plaintexthighlighter-rouge">set</code>and<codeclass="language-plaintexthighlighter-rouge">hashtable</code>allowyoutoretrieveaspecific<em>item</em>(indicatedbyits<em>key</em>)whereasa<codeclass="language-plaintexthighlighter-rouge">bag</code>mightreturnany<em>item</em>.</li><li>becausethe<codeclass="language-plaintexthighlighter-rouge">bag</code>and<codeclass="language-plaintexthighlighter-rouge">list</code>don’tdistinguishamong<em>items</em>theystore,theycanholdduplicates;theotherscannot.</li><li>the<codeclass="language-plaintexthighlighter-rouge">counters</code>datastructuremaintainsasetofcounters,eachidentifiedbya<em>key</em>,butitstoresno<em>items</em>.Instead,itkeepsacounterforeachkey.Attemptingtoinsertaduplicate<em>key</em>resultsinanincrementofthecounter.</li></ul><h3id="bag">bag</h3><p>A<codeclass="language-plaintexthighlighter-rouge">bag</code>isanunorderedcollectionof<em>items</em>.The<codeclass="language-plaintexthighlighter-rouge">bag</code>startsempty,growsasthecalleraddsone<em>item</em>atatime,andshrinksasthecallerextractsone<em>item</em>atatime.Itcouldbeempty,orcouldcontainhundredsof<em>items</em>.<em>Items</em>areindistinguishable,sothe<em>extract</em>functionisfreetoreturnany<em>item</em>fromthe<codeclass="language-plaintexthighlighter-rouge">bag</code>.</p><p>Thestarterkitincludesour<codeclass="language-plaintexthighlighter-rouge">bag</code>module,whichcontains:</p><ul><li><codeclass="language-plaintexthighlighter-rouge">bag.c</code>implementsabagof<codeclass="language-plaintexthighlighter-rouge">void*</code>,andexports<strong>exactly</strong>thefollowingfunctionsthrough<codeclass="language-plaintexthighlighter-rouge">bag.h</code>:</li></ul><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cm">/*Createanew(empty)bag;returnNULLiferror.*/</span><spanclass="n">bag_t</span><spanclass="o">*</span><spanclass="nf">bag_new</span><spanclass="p">(</span><spanclass="kt">void</span><spanclass="p">);</span><spanclass="cm">/*Addnewitemtothebag;aNULLbagisignored;aNULLitemisignored.*/</span><spanclass="kt">void</span><spanclass="nf">bag_insert</span><spanclass="p">(</span><spanclass="n">bag_t</span><spanclass="o">*</span><spanclass="n">bag</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">item</span><spanclass="p">);</span><spanclass="cm">/*Returnanydataitemfromthebag;returnNULLifbagisNULLorempty.*/</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="nf">bag_extract</span><spanclass="p">(</span><spanclass="n">bag_t</span><spanclass="o">*</span><spanclass="n">bag</span><spanclass="p">);</span><spanclass="cm">/*Printthewholebag;providetheoutputfileandfunctoprinteachitem.*Iffp==NULL;donothing.Ifbag==NULL,print(null).*Ifitemprint==NULL,printnothingforeachitem.*/</span><spanclass="kt">void</span><spanclass="nf">bag_print</span><spanclass="p">(</span><spanclass="n">bag_t</span><spanclass="o">*</span><spanclass="n">bag</span><spanclass="p">,</span><spanclass="kt">FILE</span><spanclass="o">*</span><spanclass="n">fp</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="p">(</span><spanclass="o">*</span><spanclass="n">itemprint</span><spanclass="p">)(</span><spanclass="kt">FILE</span><spanclass="o">*</span><spanclass="n">fp</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">item</span><spanclass="p">));</span><spanclass="cm">/*Iterateoverthewholebag;callthegivenfunctiononeachitem,*passingboththeitemandanargument.IgnoreifNULLbagorNULLitemfunc.*/</span><spanclass="kt">void</span><spanclass="nf">bag_iterate</span><spanclass="p">(</span><spanclass="n">bag_t</span><spanclass="o">*</span><spanclass="n">bag</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">arg</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="p">(</span><spanclass="o">*</span><spanclass="n">itemfunc</span><spanclass="p">)(</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">arg</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">item</span><spanclass="p">)</span><spanclass="p">);</span><spanclass="cm">/*Deletethewholebag;ignoreNULLbag.*Provideafunctionthatwilldeleteeachitem(maybeNULL).*/</span><spanclass="kt">void</span><spanclass="nf">bag_delete</span><spanclass="p">(</span><spanclass="n">bag_t</span><spanclass="o">*</span><spanclass="n">bag</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="p">(</span><spanclass="o">*</span><spanclass="n">itemdelete</span><spanclass="p">)(</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">item</span><spanclass="p">)</span><spanclass="p">);</span></code></pre></div></div><h3id="set">set</h3><p>A<codeclass="language-plaintexthighlighter-rouge">set</code>maintainsanunorderedcollectionof<em>(key,item)</em>pairs;anygiven<em>key</em>canonlyoccurinthe<codeclass="language-plaintexthighlighter-rouge">set</code>once.Itstartsoutemptyandgrowsasthecallerinsertsnew<em>(key,item)</em>pairs.Thecallercanretrieve<em>items</em>byaskingfortheir<em>key</em>,butcannotremoveorupdatepairs.Itemsaredistinguishedbytheir<em>key</em>.</p><p>Your<codeclass="language-plaintexthighlighter-rouge">set.c</code>shouldimplementa<codeclass="language-plaintexthighlighter-rouge">set</code>of<codeclass="language-plaintexthighlighter-rouge">void*</code>with<codeclass="language-plaintexthighlighter-rouge">char*</code><em>keys</em>,andexport<strong>exactly</strong>thefollowingfunctionsthrough<codeclass="language-plaintexthighlighter-rouge">set.h</code>:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cm">/*Createanew(empty)set;returnNULLiferror.*/</span><spanclass="n">set_t</span><spanclass="o">*</span><spanclass="nf">set_new</span><spanclass="p">(</span><spanclass="kt">void</span><spanclass="p">);</span><spanclass="cm">/*Insertitem,identifiedbyakey(string),intothegivenset.*Thekeystringiscopiedforusebytheset.*Returnfalseifkeyexists,anyparameterisNULL,orerror;*returntrueiffnewitemwasinserted.*/</span><spanclass="n">bool</span><spanclass="nf">set_insert</span><spanclass="p">(</span><spanclass="n">set_t</span><spanclass="o">*</span><spanclass="n">set</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">key</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">item</span><spanclass="p">);</span><spanclass="cm">/*Returntheitemassociatedwiththegivenkey;*returnNULLifsetisNULL,keyisNULL,orkeyisnotfound.*/</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="nf">set_find</span><spanclass="p">(</span><spanclass="n">set_t</span><spanclass="o">*</span><spanclass="n">set</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">key</span><spanclass="p">);</span><spanclass="cm">/*Printthewholeset;providetheoutputfileandfunctoprinteachitem.*IgnoreifNULLfp.Print(null)ifNULLset.*PrintasetwithnoitemsifNULLitemprint.*/</span><spanclass="kt">void</span><spanclass="nf">set_print</span><spanclass="p">(</span><spanclass="n">set_t</span><spanclass="o">*</span><spanclass="n">set</span><spanclass="p">,</span><spanclass="kt">FILE</span><spanclass="o">*</span><spanclass="n">fp</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="p">(</span><spanclass="o">*</span><spanclass="n">itemprint</span><spanclass="p">)(</span><spanclass="kt">FILE</span><spanclass="o">*</span><spanclass="n">fp</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">key</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">item</span><spanclass="p">)</span><spanclass="p">);</span><spanclass="cm">/*Iterateoverallitemsintheset,inundefinedorder.*Callthegivenfunctiononeachitem,with(arg,key,item).*Ifset==NULLoritemfunc==NULL,donothing.*/</span><spanclass="kt">void</span><spanclass="nf">set_iterate</span><spanclass="p">(</span><spanclass="n">set_t</span><spanclass="o">*</span><spanclass="n">set</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">arg</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="p">(</span><spanclass="o">*</span><spanclass="n">itemfunc</span><spanclass="p">)(</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">arg</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">key</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">item</span><spanclass="p">)</span><spanclass="p">);</span><spanclass="cm">/*Deletethewholeset;ignoreNULLset.*Provideafunctionthatwilldeleteeachitem(maybeNULL).*/</span><spanclass="kt">void</span><spanclass="nf">set_delete</span><spanclass="p">(</span><spanclass="n">set_t</span><spanclass="o">*</span><spanclass="n">set</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="p">(</span><spanclass="o">*</span><spanclass="n">itemdelete</span><spanclass="p">)(</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">item</span><spanclass="p">)</span><spanclass="p">);</span></code></pre></div></div><h3id="counters">counters</h3><p>A<em>counterset</em>isa<codeclass="language-plaintexthighlighter-rouge">set</code>ofcounters,eachdistinguishedbyaninteger<em>key</em>.It’sa<codeclass="language-plaintexthighlighter-rouge">set</code>-each<em>key</em>canonlyoccuronceinthe<codeclass="language-plaintexthighlighter-rouge">set</code>-butinsteadofstoring<em>(key,item)</em>pairs,ittracksa<codeclass="language-plaintexthighlighter-rouge">counter</code>foreach<em>key</em>.Itstartsempty.Eachtime<codeclass="language-plaintexthighlighter-rouge">counters_add</code>iscalledonagiven<em>key</em>,that<em>key</em>’s<codeclass="language-plaintexthighlighter-rouge">counter</code>isincremented.Thecurrent<codeclass="language-plaintexthighlighter-rouge">counter</code>valuecanberetrievedbyaskingfortherelevant<em>key</em>.</p><p>Your<codeclass="language-plaintexthighlighter-rouge">counters.c</code>shouldimplementasetofintegercounterswith<codeclass="language-plaintexthighlighter-rouge">int</code><em>keys</em>(where<em>keys</em>mustbenon-negative)andexport<strong>exactly</strong>thefollowingfunctionsthrough<codeclass="language-plaintexthighlighter-rouge">counters.h</code>:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cm">/*Createanew(empty)counterstructure;returnNULLiferror.*/</span><spanclass="n">counters_t</span><spanclass="o">*</span><spanclass="nf">counters_new</span><spanclass="p">(</span><spanclass="kt">void</span><spanclass="p">);</span><spanclass="cm">/*Incrementthecounterindicatedbykey;keymustbe&gt;=0.*Ifthekeydoesnotyetexist,createacounterforitandinitializeto1.*IgnoreifctrsisNULLorkeyisnegative.*/</span><spanclass="kt">void</span><spanclass="nf">counters_add</span><spanclass="p">(</span><spanclass="n">counters_t</span><spanclass="o">*</span><spanclass="n">ctrs</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">int</span><spanclass="n">key</span><spanclass="p">);</span><spanclass="cm">/*Returncurrentvalueofcounterassociatedwiththegivenkey;*return0ifctrsisNULLorifkeyisnotfound.*/</span><spanclass="kt">int</span><spanclass="nf">counters_get</span><spanclass="p">(</span><spanclass="n">counters_t</span><spanclass="o">*</span><spanclass="n">ctrs</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">int</span><spanclass="n">key</span><spanclass="p">);</span><spanclass="cm">/*Setthecurrentvalueofcounterassociatedwiththegivenkey;*Ifthekeydoesnotyetexist,createacounterforitandinitializeto*thegivenvalue.IgnoreifctrsisNULL,ifkey&lt;0,orcount&lt;0.*/</span><spanclass="kt">void</span><spanclass="nf">counters_set</span><spanclass="p">(</span><spanclass="n">counters_t</span><spanclass="o">*</span><spanclass="n">ctrs</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">int</span><spanclass="n">key</span><spanclass="p">,</span><spanclass="kt">int</span><spanclass="n">count</span><spanclass="p">);</span><spanclass="cm">/*Printallcounters;providetheoutputfile.*IgnoreifNULLfp.Print(null)ifNULLctrs.*/</span><spanclass="kt">void</span><spanclass="nf">counters_print</span><spanclass="p">(</span><spanclass="n">counters_t</span><spanclass="o">*</span><spanclass="n">ctrs</span><spanclass="p">,</span><spanclass="kt">FILE</span><spanclass="o">*</span><spanclass="n">fp</span><spanclass="p">);</span><spanclass="cm">/*Iterateoverallcountersintheset(inundefinedorder):*callitemfuncforeachitem,with(arg,key,count).*Ifctrs==NULLoritemfunc==NULL,donothing.*/</span><spanclass="kt">void</span><spanclass="nf">counters_iterate</span><spanclass="p">(</span><spanclass="n">counters_t</span><spanclass="o">*</span><spanclass="n">ctrs</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">arg</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="p">(</span><spanclass="o">*</span><spanclass="n">itemfunc</span><spanclass="p">)(</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">arg</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">int</span><spanclass="n">key</span><spanclass="p">,</span><spanclass="kt">int</span><spanclass="n">count</span><spanclass="p">));</span><spanclass="cm">/*Deletethewholecounters.ignoreNULLctrs.*/</span><spanclass="kt">void</span><spanclass="nf">counters_delete</span><spanclass="p">(</span><spanclass="n">counters_t</span><spanclass="o">*</span><spanclass="n">ctrs</span><spanclass="p">);</span></code></pre></div></div><h3id="hashtable">hashtable</h3><p>A<codeclass="language-plaintexthighlighter-rouge">hashtable</code>isa<codeclass="language-plaintexthighlighter-rouge">set</code>of<em>(key,item)</em>pairs.Itactsjustlikea<codeclass="language-plaintexthighlighter-rouge">set</code>,butisfarmoreefficientforlargecollections.</p><p>Your<codeclass="language-plaintexthighlighter-rouge">hashtable.c</code>shouldimplementa<codeclass="language-plaintexthighlighter-rouge">set</code>of<codeclass="language-plaintexthighlighter-rouge">void*</code>with<codeclass="language-plaintexthighlighter-rouge">char*</code><em>keys</em>,andexport<em>exactly</em>thefollowingfunctionsthrough<codeclass="language-plaintexthighlighter-rouge">hashtable.h</code>:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cm">/*Createanew(empty)hashtable;returnNULLiferror.*/</span><spanclass="n">hashtable_t</span><spanclass="o">*</span><spanclass="nf">hashtable_new</span><spanclass="p">(</span><spanclass="k">const</span><spanclass="kt">int</span><spanclass="n">num_slots</span><spanclass="p">);</span><spanclass="cm">/*Insertitem,identifiedbykey(string),intothegivenhashtable.*Thekeystringiscopiedforusebythehashtable.*Returnfalseifkeyexistsinht,anyparameterisNULL,orerror;*returntrueiffnewitemwasinserted.*/</span><spanclass="n">bool</span><spanclass="nf">hashtable_insert</span><spanclass="p">(</span><spanclass="n">hashtable_t</span><spanclass="o">*</span><spanclass="n">ht</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">key</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">item</span><spanclass="p">);</span><spanclass="cm">/*Returntheitemassociatedwiththegivenkey;*returnNULLifhashtableisNULL,keyisNULL,keyisnotfound.*/</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="nf">hashtable_find</span><spanclass="p">(</span><spanclass="n">hashtable_t</span><spanclass="o">*</span><spanclass="n">ht</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">key</span><spanclass="p">);</span><spanclass="cm">/*Printthewholetable;providetheoutputfileandfunctoprinteachitem.*IgnoreifNULLfp.Print(null)ifNULLht.*PrintatablewithnoitemsifNULLitemprint.*/</span><spanclass="kt">void</span><spanclass="nf">hashtable_print</span><spanclass="p">(</span><spanclass="n">hashtable_t</span><spanclass="o">*</span><spanclass="n">ht</span><spanclass="p">,</span><spanclass="kt">FILE</span><spanclass="o">*</span><spanclass="n">fp</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="p">(</span><spanclass="o">*</span><spanclass="n">itemprint</span><spanclass="p">)(</span><spanclass="kt">FILE</span><spanclass="o">*</span><spanclass="n">fp</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">key</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">item</span><spanclass="p">));</span><spanclass="cm">/*Iterateoverallitemsinthetable;inundefinedorder.*Callthegivenfunctiononeachitem,with(arg,key,item).*Ifht==NULLoritemfunc==NULL,donothing.*/</span><spanclass="kt">void</span><spanclass="nf">hashtable_iterate</span><spanclass="p">(</span><spanclass="n">hashtable_t</span><spanclass="o">*</span><spanclass="n">ht</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">arg</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="p">(</span><spanclass="o">*</span><spanclass="n">itemfunc</span><spanclass="p">)(</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">arg</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">key</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">item</span><spanclass="p">)</span><spanclass="p">);</span><spanclass="cm">/*Deletethewholehashtable;ignoreNULLht.*Provideafunctionthatwilldeleteeachitem(maybeNULL).*/</span><spanclass="kt">void</span><spanclass="nf">hashtable_delete</span><spanclass="p">(</span><spanclass="n">hashtable_t</span><spanclass="o">*</span><spanclass="n">ht</span><spanclass="p">,</span><spanclass="kt">void</span><spanclass="p">(</span><spanclass="o">*</span><spanclass="n">itemdelete</span><spanclass="p">)(</span><spanclass="kt">void</span><spanclass="o">*</span><spanclass="n">item</span><spanclass="p">)</span><spanclass="p">);</span></code></pre></div></div><p>Thestarterkitprovidescodeforthehashfunction.</p><h3id="general-notes">Generalnotes</h3><ul><li>Yourmodulesmustimplement<em>exactly</em>theaboveinterface.Donotmodifythosefunctionprototypes.</li><li>Ifyouneedhelperfunctionsordatatypes(likely<codeclass="language-plaintexthighlighter-rouge">struct</code>types),thoseshouldbedefinedwithinyour<codeclass="language-plaintexthighlighter-rouge">module.c</code>andmarked<codeclass="language-plaintexthighlighter-rouge">static</code>sotheyarenotvisibletousersofthemodule.</li><li>Yourmodulesmustprint<em>nothing</em>(except,ofcourse,inthe<codeclass="language-plaintexthighlighter-rouge">xxx_print()</code>function).Ifyouwanttoadddebugging<codeclass="language-plaintexthighlighter-rouge">printf</code>s,theymustbeprotectedbysomethinglike<codeclass="language-plaintexthighlighter-rouge">#ifdefDEBUG</code>or<codeclass="language-plaintexthighlighter-rouge">#ifdefTEST</code>.(Youcanseesomeexamplesin<codeclass="language-plaintexthighlighter-rouge">bag.c</code>wherewe’veprotectedsomedebuggingcodewith<codeclass="language-plaintexthighlighter-rouge">#ifdefMEMTEST</code>,andaspotinthe<codeclass="language-plaintexthighlighter-rouge">bag/Makefile</code>thatcontrolsthatflagfromthecompilercommandline.)</li><li>Yourmodulesmusthavenoglobalvariables.</li><li>Yourmodulesmusthaveno<codeclass="language-plaintexthighlighter-rouge">main()</code>function;asmodules,theyaremeanttobeusedbyotherprograms.Recallhowthemoduledefinedby<codeclass="language-plaintexthighlighter-rouge">bag.c</code>and<codeclass="language-plaintexthighlighter-rouge">bag.h</code>isusedbyatestprogram<codeclass="language-plaintexthighlighter-rouge">bagtest.c</code>.</li><li>Yourmodulesstore<codeclass="language-plaintexthighlighter-rouge">void*</code>items;thistypeisC’swayofdescribinga“pointertoanything”.Thecaller(userofyourmodule)mustpassapointer(addressofsomeitem)toyourcode;yourdatastructureholdsthatpointer,andlaterreturnsittothecallerinresponsetoan‘extract’or‘find’operation.Yourmoduledoesn’tknow,ordoesn’tcare,whatkindofthingstheitemsare.Yourmoduledoesn’tallocatememoryforitems,freememoryforitems,orcopyitems-itjusttracksthe<em>pointer</em>totheitem.</li><li>Forallmodules,the<em>caller</em>isresponsibleforthe<em>item</em>pointer,whichmustbeallocated(somehow)bythecaller.Themodules’<codeclass="language-plaintexthighlighter-rouge">_delete</code>function(likeadestructor)allowsthecallertoprovideacustom<codeclass="language-plaintexthighlighter-rouge">itemdelete</code>functionthatknowshowtofreeanymemoryconsumedbyanitem.</li><li>Forthisreason,thecallermustavoidinsertingthesameitem(sameaddress)multipletimes;later,the<codeclass="language-plaintexthighlighter-rouge">itemdelete</code>methodwouldbecalledmultipletimesonthatitem…whichcouldleadtotrouble.</li><li>Both<codeclass="language-plaintexthighlighter-rouge">set</code>and<codeclass="language-plaintexthighlighter-rouge">hashtable</code>workwithstring-typekeys.Whenaddinganewitemwith<codeclass="language-plaintexthighlighter-rouge">set_insert()</code>or<codeclass="language-plaintexthighlighter-rouge">hashtable_insert()</code>,bothmodulesmaketheirowncopyofthestring-presumablyinmemoryallocatedby<codeclass="language-plaintexthighlighter-rouge">malloc()</code>.(Themoduleisthenresponsibleforthismemory-andlaterfreeingit-justlikeanyothermemoryitallocates.)This‘copy’semanticisconvenientforthecaller,whoneednotworryabouthowtoallocateandmanagethekeystringafterinsertingitintothesetorhashtable.</li><li>Youmayassumethatanon-NULL<codeclass="language-plaintexthighlighter-rouge">key</code>isaproperCstring;thatis,itisnull-terminated.</li><li>Youmayusethe<em>memory</em>module-orusethenative<codeclass="language-plaintexthighlighter-rouge">malloc</code>and<codeclass="language-plaintexthighlighter-rouge">free</code>,andyoumayuse<codeclass="language-plaintexthighlighter-rouge">valgrind</code>-ornot.However,wewillbecheckingyourcodeformemoryleaks.</li><li>Yourmodulesmusteachhavea<codeclass="language-plaintexthighlighter-rouge">Makefile</code>tocompileandtestthemodulecode.</li><li>Yourdirectoryformodule<codeclass="language-plaintexthighlighter-rouge">x</code>must,therefore,havean<codeclass="language-plaintexthighlighter-rouge">xtest.c</code>program.</li></ul><h2id="hints">Hints</h2><p>Youareencouragedtofollowthestyleandlayoutofthe<codeclass="language-plaintexthighlighter-rouge">bag</code>modulewhendevelopingnewmodules.</p><p>Youcanalsolearnalotfromour<ahref="/engs50/Examples/trees">binarytrees</a>example.Youarewelcometocopysnippetsofcodefromthis(oranyother)CS50examplecodeaslongasyouaddacommentindicatingyou’vedoneso.</p><p>Wesuggestimplementingthe<codeclass="language-plaintexthighlighter-rouge">set</code>and<codeclass="language-plaintexthighlighter-rouge">counters</code>assimplifiedlinkedlists,muchlikewedidfor<codeclass="language-plaintexthighlighter-rouge">bag</code>.Eachshouldbeaseparateimplementationbecausetheydifferindetailandsemantics.</p><p>Your<codeclass="language-plaintexthighlighter-rouge">hashtable</code>module,ontheotherhand,shouldmakeuseofthe<codeclass="language-plaintexthighlighter-rouge">set</code>datastructure.Indeed,yourhashtablewillbeanarrayofpointerstosets.Allocatinganarrayofpointerscanbetricky;considerthese<ahref="array-allocate.html">tips</a>.</p><p><strong><em>Linkedlists</em></strong>weredemonstratedin<ahref="/engs50/Examples/names6.c">names6.c</a>,althoughforaspecializedcase;youwillneedtogeneralize.TheywerealsocoveredinCS10;seethe<ahref="http://www.cs.dartmouth.edu/~tjp/cs10/notes6.php">notes</a>.</p><p><strong><em>HashtableswerealsocoveredinCS10:</em></strong><ahref="http://www.cs.dartmouth.edu/~tjp/cs10/notes11.php">notes</a>,<ahref="/engs50/Labs/Lab3/cs10-hashtables.pdf">slides</a>.</p><h2id="what-to-hand-in-and-how">Whattohandin,andhow</h2><p>Makesuretocompileandtestyoursolutionsononeofthe<ahref="http://www.cs.dartmouth.edu/~wbc/suditour/011/index.html">CSLinuxsystems</a>beforesubmission.Ifyouchoosetodevelopyoursolutionsonsomeothersystem,youareresponsibletoensurethattheworkyousubmitrunscorrectlyonaCSsystem—whichiswherewherewewilltestit!</p><p>Indeed,youmustplaceyoursolutionsinyour<codeclass="language-plaintexthighlighter-rouge">cs50/labs/lab3</code>directoryonthedepartmentLinuxservers.(Ifyouworkedonyourlaptop,use<codeclass="language-plaintexthighlighter-rouge">scp</code>tocopyfilesfromyourlaptoptotheserver.)</p><p>Inadditiontoyourcode,eachofthefoursubdirectoriesof<codeclass="language-plaintexthighlighter-rouge">lab3</code>mustincludetwosimpletextfiles:</p><ol><li><p><codeclass="language-plaintexthighlighter-rouge">README</code>,whichdescribeshowyourprogramshouldbecompiledandexecuted,alongwithanexplanationofanyassumptionsyoumadeabouttheassignment.Seethe<ahref="starter/bag/README.md">README.md</a>forthe<codeclass="language-plaintexthighlighter-rouge">bag</code>module.</p></li><li><p><codeclass="language-plaintexthighlighter-rouge">TESTING</code>,whichdescribeshowyoutestedtheprogram,includinganytestinputs,testprograms,andtestscripts;thesetestfilesshouldbeincludedinyoursubmission.Seethe<ahref="starter/bag/TESTING.md">TESTING.md</a>forthe<codeclass="language-plaintexthighlighter-rouge">bag</code>moduleinthestarterkit.</p></li></ol><blockquote><p>Theseexamplesarewrittenin<ahref="/engs50/Resources/index.html#markdown">Markdown</a>format;hencethefilenameextension<codeclass="language-plaintexthighlighter-rouge">.md</code>.You’llneedtouseMarkdowninlaterlabs,sonow’sagreattimetolearn.Inthislab,theuseofMarkdownisoptional.</p></blockquote><p>Thinkofyouraudienceforeachfile:</p><ul><li>the<codeclass="language-plaintexthighlighter-rouge">README</code>fileiswrittenfortheuserofyourmodule.Forexample,<ahref="starter/bag/README.md">bag/README.md</a>referstotheinterface(<codeclass="language-plaintexthighlighter-rouge">bag.h</code>)anddescribeanyassumptions,implementationdetails,orcompilationinstructions(basically,<codeclass="language-plaintexthighlighter-rouge">makebag.o</code>).</li><li>the<codeclass="language-plaintexthighlighter-rouge">TESTING</code>fileiswrittenforyourgrader.Forexample,<ahref="starter/bag/TESTING.md">bag/TESTING.md</a>describeshowwetested<codeclass="language-plaintexthighlighter-rouge">bag.c</code>,byreferringto<codeclass="language-plaintexthighlighter-rouge">bagtest.c</code>andincludingtheresultsofatestrunin<codeclass="language-plaintexthighlighter-rouge">bagtest.out</code>.Ifyourtestrequiressomeinputfiles,includethosedatafilesinyoursubmissionandrefertotheminyour<codeclass="language-plaintexthighlighter-rouge">TESTING</code>file.(Inthesolution,theMakefilegeneratesthenecessaryinputfilesbydownloadingthemfromtheweb.)</li></ul><p>Your<codeclass="language-plaintexthighlighter-rouge">lab3</code>directorymustcontainthefollowing:</p><ul><li>Fivesubdirectories:<ul><li><codeclass="language-plaintexthighlighter-rouge">bag</code>with<codeclass="language-plaintexthighlighter-rouge">Makefile</code>,<codeclass="language-plaintexthighlighter-rouge">bagtest.c</code>,<codeclass="language-plaintexthighlighter-rouge">bag.c</code>,<codeclass="language-plaintexthighlighter-rouge">bag.h</code>.</li><li><codeclass="language-plaintexthighlighter-rouge">set</code>with<codeclass="language-plaintexthighlighter-rouge">Makefile</code>,<codeclass="language-plaintexthighlighter-rouge">settest.c</code>,<codeclass="language-plaintexthighlighter-rouge">set.c</code>,<codeclass="language-plaintexthighlighter-rouge">set.h</code>,<codeclass="language-plaintexthighlighter-rouge">README</code>,<codeclass="language-plaintexthighlighter-rouge">TESTING</code></li><li><codeclass="language-plaintexthighlighter-rouge">counters</code>with<codeclass="language-plaintexthighlighter-rouge">Makefile</code>,<codeclass="language-plaintexthighlighter-rouge">counterstest.c</code>,<codeclass="language-plaintexthighlighter-rouge">counters.c</code>,<codeclass="language-plaintexthighlighter-rouge">counters.h</code>,<codeclass="language-plaintexthighlighter-rouge">README</code>,<codeclass="language-plaintexthighlighter-rouge">TESTING</code></li><li><codeclass="language-plaintexthighlighter-rouge">hashtable</code>with<codeclass="language-plaintexthighlighter-rouge">Makefile</code>,<codeclass="language-plaintexthighlighter-rouge">hashtabletest.c</code>,<codeclass="language-plaintexthighlighter-rouge">hashtable.c</code>,<codeclass="language-plaintexthighlighter-rouge">hashtable.h</code>,<codeclass="language-plaintexthighlighter-rouge">README</code>,<codeclass="language-plaintexthighlighter-rouge">TESTING</code></li><li><codeclass="language-plaintexthighlighter-rouge">common</code>directorywithcontentsinheritedfromourstarterkit</li></ul></li><li>Each<codeclass="language-plaintexthighlighter-rouge">README</code>(or<codeclass="language-plaintexthighlighter-rouge">README.md</code>)explainsanyassumptionsandacknowledgesanylimitations.</li><li>Each<codeclass="language-plaintexthighlighter-rouge">TESTING</code>(or<codeclass="language-plaintexthighlighter-rouge">TESTING.md</code>)showshowyoutestedthemodule.</li><li>Includeanyspecialinputfilesyouusedfortesting.</li></ul><h4id="submitting-your-lab">Submittingyourlab</h4><p>Beforethedeadline,run</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>~cs50/labs/submit3</code></pre></div></div><p>Makesureitconfirmssuccess.Ifyouneedtoupdateyoursubmission,runthesamecommandagain;itwilloverwritethepriorsubmissionwiththecurrentcontentsofyour<codeclass="language-plaintexthighlighter-rouge">lab3</code>directory.</p><p><strong><em>Ifyouwishtouseoneofyour24-hourextensions,</em></strong>runthiscommand<em>beforethedeadline</em>:</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>~cs50/labs/submit3extension</code></pre></div></div><p>Thiscommanddeletesanysubmissionyoumayhavemadepreviously,andleavesasinglefile“extension”thereasanindicationyouarerequestinganextension.Whenyouarelaterreadytosubmityourwork,dosoasabove:</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>~cs50/labs/submit3</code></pre></div></div><p>Thisoverwritesanypriorsubmission-eventheextensionrequest.(Thus,ifyousubmitbeforethedeadline,youeffectively‘cancel’yourrequestforanextension.)Wewillgradethefirstsubmissionpresentat0h,24h,48h,or72haftertheoriginaldeadline.Toavoidconfusion,<strong><em>pleaseblitz<codeclass="language-plaintexthighlighter-rouge">cs50ATcs.dartmouth.edu</code>ifyouwantalatesubmissiontobegradedinsteadofyouron-timesubmission.</em></strong></p></div></article></div></div><footerclass="site-footer"><divclass="wrapper"><h2class="footer-heading">Engs50(CS50)--DartmouthCollege</h2><p><fontsize=-1>ThisversionofthecourseisbaseduponthosedesignedbyProfessorsPalmer,Kotz,Zhou,Campbell,andBalkcom.Iamdeeplyindebtedtotheseoutstandingeducators.--<ahref="https://engineering.dartmouth.edu/people/faculty/stephen-taylor/">StephenTaylor</a></font></p><p><small>Thispagewaslastupdatedon<strong>2023-01-05</strong>at<strong>11:31</strong>.</small></p></div></footer></body></html>
