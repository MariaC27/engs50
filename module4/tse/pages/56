https://thayer.github.io/engs50/Notes/c2/extra.html
3
61933
<!DOCTYPEhtml><html><head><metacharset="utf-8"><metahttp-equiv="X-UA-Compatible"content="IE=edge"><metaname="viewport"content="width=device-width,initial-scale=1"><title>LectureExtra-TheStandardCLibraries</title><metaname="description"content="InEngs50youwilllearnhowtodesign&buildlarge,reliable,maintainable,andunderstandablesoftwaresystems.IntheprocessyouwilllearntoprograminCwithUnixdevelopmenttools."><linkrel="shortcuticon"href="/engs50/50.png"/><linkrel="stylesheet"href="/engs50/css/main.css"><linkrel="canonical"href="/engs50/Notes/c2/extra.html"></head><body><headerclass="site-header"><aclass="site-title"href="/engs50/"><imgwidth=48align=centersrc="/engs50/50.png"alt="icon">Engs50(CS50)</a><navclass="site-nav">[<ahref="/engs50/Labs/">Labs</a>][<ahref="/engs50/Notes/">Notes</a>][<ahref="/engs50/Reading/">Reading</a>][<ahref="/engs50/Resources/">Resources</a>][<ahref="/engs50/Examples/">Examples</a>]</nav></header><divclass="page-content"><divclass="wrapper"><articleclass="post"><headerclass="post-header"><h1class="post-title">LectureExtra-TheStandardCLibraries</h1></header><divclass="post-content"><p>Thesenotesaremeanttocomplementthe“<ahref="index.html">lecture</a>”.</p><p><strong><em>Warning:theexamplesin(orcitedby)this“lectureextra”maynotfollowCS50programmingstyle.”</em></strong></p><h2id="the-standard-io-library">ThestandardI/Olibrary</h2><p>TheClanguageitselfdoesnotdefineanyparticularfileorcharacter-basedinputoroutputroutines(noranywindowingroutines),unlikeJava.Insteadanyprogrammayprovideitsown.Clearlythisisadauntingtask,andsothe<em>standardClibrary</em>providesacollectionoffunctionstoperformfile-basedinputandoutput.ThestandardI/Olibraryfunctionsprovideefficient,bufferedI/Otoandfrombothterminalsandfiles.</p><p>CprogramsrequiringstandardI/Oshouldincludetheline:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include&lt;stdio.h&gt;</span></code></pre></div></div><p>NOTE:the<codeclass="language-plaintexthighlighter-rouge">#include</code>preprocessordirectivesimplyinstructsthecompilertogofindthe<codeclass="language-plaintexthighlighter-rouge">stdio.h</code>fileintheusualsystemplaceandincludeitscontentsatthispointinthesourcestream.We’lllearnmoreaboutthepreprocessorlater.</p><p>AlltransactionsthroughthestandardI/Ofunctionsrequirea<em>filepointer</em>:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="kt">FILE</span><spanclass="o">*</span><spanclass="n">fp</span><spanclass="p">;</span><spanclass="n">fp</span><spanclass="o">=</span><spanclass="n">fopen</span><spanclass="p">(</span><spanclass="s">"file.dat"</span><spanclass="p">,</span><spanclass="s">"r"</span><spanclass="p">);</span><spanclass="p">...</span><spanclass="n">fclose</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">);</span></code></pre></div></div><p>Althougha‘filepointer’is,strictlyspeaking,aCpointer,wedon’tcaremuchaboutwhatitis-wesimplypassthispointertofunctionsinthestandardClibrary.</p><blockquote><p>Sometextswillrefertothispointerasa<em>filestream</em>(andC++confusedthistermevenmore),buttheseshouldnotbeconfusedwithnorbedescribedasakintoJava’s“streams”.</p></blockquote><p>ThestandardI/Olibrary(aka‘stdio’)predefinesthreefilepointers:<codeclass="language-plaintexthighlighter-rouge">stdin</code>,<codeclass="language-plaintexthighlighter-rouge">stdout</code>,and<codeclass="language-plaintexthighlighter-rouge">stderr</code>,whicharealreadyopenedforyou(bytheshellorotherprogramthatexecutedyourCprogram)andwhichyoucanread,write,ormanipulateusingstdiofunctions.</p><p>Severalfunctionsareprovidedtocheckthestatusoffileoperationsonagivenfilepointer,including:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="n">feof</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">)</span><spanclass="cm">/*checksforend-of-file*/</span><spanclass="n">ferror</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">)</span><spanclass="cm">/*checksforanerroronafile*/</span></code></pre></div></div><p>ThestandardI/Ofunctionsallreturn<codeclass="language-plaintexthighlighter-rouge">NULL</code>or<codeclass="language-plaintexthighlighter-rouge">1</code>(asappropriate)whenanerrorisdetected.Forexample:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include&lt;stdio.h&gt;</span><spanclass="kt">int</span><spanclass="nf">main</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="n">argc</span><spanclass="p">,</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">argv</span><spanclass="p">[])</span><spanclass="p">{</span><spanclass="kt">FILE</span><spanclass="o">*</span><spanclass="n">fp</span><spanclass="p">;</span><spanclass="k">if</span><spanclass="p">((</span><spanclass="n">fp</span><spanclass="o">=</span><spanclass="n">fopen</span><spanclass="p">(</span><spanclass="s">"/etc/passwd"</span><spanclass="p">,</span><spanclass="s">"w"</span><spanclass="p">))</span><spanclass="o">==</span><spanclass="nb">NULL</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="n">error</span><spanclass="n">message</span><spanclass="p">...</span><spanclass="p">}</span><spanclass="k">else</span><spanclass="p">{</span><spanclass="cm">/*processthefile*/</span><spanclass="p">...</span><spanclass="n">fclose</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">);</span><spanclass="p">}</span><spanclass="p">}</span></code></pre></div></div><blockquote><p>Inthepreceding,noticehowitembedsanassignmentstatementinsidetheconditionofthe<codeclass="language-plaintexthighlighter-rouge">if</code>statement!That’sok,becauseanassignmentstatementisanexpressionthatitselfhasavalue-thevaluethatisassignedtothevariableontheleft-handside-andthatvalueisthenusedintheouterexpression(here,aconditionalexpressiontestingequality).Thus,the<codeclass="language-plaintexthighlighter-rouge">if</code>statementcouldhavebeenwrittenas</p></blockquote><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="n">fp</span><spanclass="o">=</span><spanclass="n">fopen</span><spanclass="p">(</span><spanclass="s">"/etc/passwd"</span><spanclass="p">,</span><spanclass="s">"w"</span><spanclass="p">);</span><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="o">==</span><spanclass="nb">NULL</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="p">...</span></code></pre></div></div><blockquote><p>butsuchaconstructappearssooftenthattheyareoftencombined.Whentheassignmentisincludedinthe<codeclass="language-plaintexthighlighter-rouge">if</code>condition,itwaswrappedinparenthesesjusttobesurethatit’streatedasawhole,astheleft-hand-sideofthe<codeclass="language-plaintexthighlighter-rouge">==</code>comparisonoperator.</p></blockquote><p>ThemostfrequentlyusedfunctionsintheCstandardI/Olibraryperformoutputofformatteddata.WealsoseeherethemostfrequentuseofC’sacceptanceoffunctionsreceivingavariablenumberofarguments:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="n">fprintf</span><spanclass="p">(</span><spanclass="kt">FILE</span><spanclass="o">*</span><spanclass="n">fp</span><spanclass="p">,</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">format</span><spanclass="p">,</span><spanclass="p">(</span><spanclass="n">T</span><spanclass="p">)</span><spanclass="n">arg1</span><spanclass="p">,</span><spanclass="p">(</span><spanclass="n">T</span><spanclass="p">)</span><spanclass="n">arg2</span><spanclass="p">,</span><spanclass="p">...);</span></code></pre></div></div><p>The<codeclass="language-plaintexthighlighter-rouge">fprintf</code>functionisageneralizationof<codeclass="language-plaintexthighlighter-rouge">printf</code>.Putanotherway,<codeclass="language-plaintexthighlighter-rouge">printf(format,arg...)</code>isshorthandfor<codeclass="language-plaintexthighlighter-rouge">fprintf(stdout,format,arg...)</code>.</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="kt">int</span><spanclass="n">class</span><spanclass="o">=</span><spanclass="mi">50</span><spanclass="p">;</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">department</span><spanclass="o">=</span><spanclass="s">"ComputerScience"</span><spanclass="p">;</span><spanclass="n">fprintf</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">,</span><spanclass="s">"Course:%s%02d</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">department</span><spanclass="p">,</span><spanclass="n">class</span><spanclass="p">);</span></code></pre></div></div><p>ManystandardI/Ofunctionsaccepta<em>formatspecifier</em>,whichisastringdescribinghowthefollowingargumentsaretobeinterpreted.ThismechanismisincontrasttoJava’s<codeclass="language-plaintexthighlighter-rouge">toString</code>facilityinwhicheachobjectknowshowtooutput/displayitselfasa<codeclass="language-plaintexthighlighter-rouge">String</code>object.Therearemanypossibleformatspecifiers,themostcommononesbeing<codeclass="language-plaintexthighlighter-rouge">c</code>forcharactervalues,<codeclass="language-plaintexthighlighter-rouge">d</code>fordecimalvalues,<codeclass="language-plaintexthighlighter-rouge">f</code>forfloating-pointvalues,and<codeclass="language-plaintexthighlighter-rouge">s</code>forcharacterstrings.Formatspecifiersmaybeprecededbyanumberof<em>formatmodifiers</em>,whichmayfurtherspecifytheirdatatypeandmayindicatethewidthoftherequiredoutput(incharacters).</p><p>TheCstandardI/Olibraryprovidesefficient“buffering”.Thismeansthatalthoughitappearsthattheoutputhasgonetothe<codeclass="language-plaintexthighlighter-rouge">FILE</code>pointer,itmaystillbeheldwithinaninternalcharacterbufferinthelibrary(andwillhencenotbeactuallywrittentotheharddiskortothescreenuntilmoreoutputisaccumulatedandthebufferbecomesfull).Weoftenneedto“flush”ouroutputtoallowusto<em>know</em>whentheoutputwillbewrittentodiskorthescreen:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cm">/*...formatsomeoutput...*/</span><spanclass="n">fflush</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">);</span></code></pre></div></div><p>Asyoumightexpect,<codeclass="language-plaintexthighlighter-rouge">FILE</code>pointersareautomaticallyflushedwhenafileisclosedortheprocessexits.</p><p>Aswellasoutputtingto<codeclass="language-plaintexthighlighter-rouge">FILE</code>pointers,wemayalsoperformformattedoutputtoacharacterarray(astring),withaverysimilarseriesoffunctions:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="kt">int</span><spanclass="n">class</span><spanclass="o">=</span><spanclass="mi">50</span><spanclass="p">;</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">department</span><spanclass="o">=</span><spanclass="s">"ComputerScience"</span><spanclass="p">;</span><spanclass="kt">char</span><spanclass="n">buffer</span><spanclass="p">[</span><spanclass="n">BUFSIZ</span><spanclass="p">];</span><spanclass="n">sprintf</span><spanclass="p">(</span><spanclass="n">buffer</span><spanclass="p">,</span><spanclass="s">"Course:%s%02d</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">department</span><spanclass="p">,</span><spanclass="n">class</span><spanclass="p">);</span></code></pre></div></div><blockquote><p>Securityalert!Whatisthepotentialexposureinthecodeabove?</p></blockquote><p>C’sstandardI/Olibrarymayalsobeusedtoinputvaluesfrom<codeclass="language-plaintexthighlighter-rouge">FILE</code>pointersandcharacterarraysusing<codeclass="language-plaintexthighlighter-rouge">fscanf()</code>and<codeclass="language-plaintexthighlighter-rouge">sscanf()</code>.BecausewewantthecontentsofC’svariablestobemodifiedbythestandardI/Ofunctions,weneedtopassthem<em>byreference</em>,whichinCisaccomplishedbypassingthe‘address’ofthevariablesusingthe<codeclass="language-plaintexthighlighter-rouge">&amp;</code>operator:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="n">fscanf</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">,</span><spanclass="n">format</span><spanclass="p">,</span><spanclass="o">&amp;</span><spanclass="n">arg1</span><spanclass="p">,</span><spanclass="o">&amp;</span><spanclass="n">arg2</span><spanclass="p">,</span><spanclass="p">...);</span></code></pre></div></div><p>likethis:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="kt">int</span><spanclass="n">i</span><spanclass="p">,</span><spanclass="n">res</span><spanclass="p">;</span><spanclass="kt">char</span><spanclass="n">buffer</span><spanclass="p">[</span><spanclass="n">BUFSIZ</span><spanclass="p">];</span><spanclass="n">fscanf</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">,</span><spanclass="s">"%d%d"</span><spanclass="p">,</span><spanclass="o">&amp;</span><spanclass="n">i</span><spanclass="p">,</span><spanclass="o">&amp;</span><spanclass="n">res</span><spanclass="p">);</span><spanclass="n">sscanf</span><spanclass="p">(</span><spanclass="n">buffer</span><spanclass="p">,</span><spanclass="s">"%d%d"</span><spanclass="p">,</span><spanclass="o">&amp;</span><spanclass="n">i</span><spanclass="p">,</span><spanclass="o">&amp;</span><spanclass="n">res</span><spanclass="p">);</span></code></pre></div></div><p>We’lltalkmoreaboutaddressesandpointersinacoupleofdays.</p><p>WhenusingtheCstandardI/Ofunctions,wemustpayattentiontotheparticularreturnvaluesfromthosefunctions.Thefunctionsthemselvesmayreturn<codeclass="language-plaintexthighlighter-rouge">NULL</code>filepointers,thenumberofinputitemsread,thenumberofcharacterswritten,orspecialnon-zerovaluesthatindicatetheendofafileorsomeothererrorcondition.Alwayscheckthe<codeclass="language-plaintexthighlighter-rouge">man</code>pagetobesure.Someofthespecialreturnvalueshaveconstantsdefinedinthesystemincludefilesforconvenience,improvedcodereadability,andconsistency.Herearesomesamplecodesnippets:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include&lt;stdio.h&gt;#defineMAXLINE80</span><spanclass="kt">int</span><spanclass="n">i</span><spanclass="p">,</span><spanclass="n">sum</span><spanclass="p">;</span><spanclass="kt">char</span><spanclass="n">line</span><spanclass="p">[</span><spanclass="n">MAXLINE</span><spanclass="p">];</span><spanclass="k">for</span><spanclass="p">(;;)</span><spanclass="p">{</span><spanclass="n">fgets</span><spanclass="p">(</span><spanclass="n">line</span><spanclass="p">,</span><spanclass="k">sizeof</span><spanclass="p">(</span><spanclass="n">line</span><spanclass="p">),</span><spanclass="n">fp</span><spanclass="p">);</span><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">feof</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">))</span><spanclass="k">break</span><spanclass="p">;</span><spanclass="cm">/*...processthelinejustread...*/</span><spanclass="p">}</span><spanclass="n">fclose</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">);</span><spanclass="p">...</span><spanclass="k">for</span><spanclass="p">(</span><spanclass="n">numlines</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">,</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="o">=</span><spanclass="n">fopen</span><spanclass="p">(</span><spanclass="s">"thefile"</span><spanclass="p">,</span><spanclass="sc">'r'</span><spanclass="p">));</span><spanclass="n">feof</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">);</span><spanclass="n">numlines</span><spanclass="o">++</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="n">fgets</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">,</span><spanclass="n">buffer</span><spanclass="p">,</span><spanclass="k">sizeof</span><spanclass="p">(</span><spanclass="n">buffer</span><spanclass="p">),</span><spanclass="n">fp</span><spanclass="p">);</span><spanclass="p">...</span><spanclass="p">}</span><spanclass="p">...</span><spanclass="n">sum</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="k">while</span><spanclass="p">(</span><spanclass="n">fscanf</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">,</span><spanclass="s">"%d"</span><spanclass="p">,</span><spanclass="o">&amp;</span><spanclass="n">i</span><spanclass="p">)</span><spanclass="o">==</span><spanclass="mi">1</span><spanclass="p">)</span><spanclass="n">sum</span><spanclass="o">+=</span><spanclass="n">i</span><spanclass="p">;</span><spanclass="n">fclose</span><spanclass="p">(</span><spanclass="n">fp</span><spanclass="p">);</span></code></pre></div></div><p>Hereisacodesnippetthatuses<codeclass="language-plaintexthighlighter-rouge">fopen(),</code><codeclass="language-plaintexthighlighter-rouge">fgets()</code>,<codeclass="language-plaintexthighlighter-rouge">strlen()</code>,<codeclass="language-plaintexthighlighter-rouge">printf()</code>,<codeclass="language-plaintexthighlighter-rouge">sscanf()</code>,and<codeclass="language-plaintexthighlighter-rouge">fclose()</code>.Itreadsfrmothefileintotoacharacterarray,andthenapplies<codeclass="language-plaintexthighlighter-rouge">sscanf()</code>tothatarraytoextractinformationfromthearrayintovariousvariables.</p><p><strong>Example:<ahref="/engs50/Examples/files.c">files.c</a></strong></p><blockquote><p>SeethefullCcodein<ahref="/engs50/Examples/files.c">files.c</a>andasampleinputfile<ahref="/engs50/Examples/files-input.txt">input</a>.</p></blockquote><h2id="why-not-to-use-gets--an-example-of-dangerous-code">Whynottousegets():anexampleofdangerouscode</h2><p>Thereisasaying-youlearnfromyourmistakes,somakelotsofthem.Thereisanotherone:don’tmakethesamemistaketwice.Theuseofthestdiofunction<codeclass="language-plaintexthighlighter-rouge">gets()</code>isamistake.Lotsofprogrammershavemadethismistake,andcausedheadachesformillionsofcomputerusersaroundtheworld.Thelesson:<em>neveruse<codeclass="language-plaintexthighlighter-rouge">gets()</code>.</em></p><p>Let’slookatthefollowing<codeclass="language-plaintexthighlighter-rouge">buffer-overflow.c</code>,whichcouldhavebeennamed<codeclass="language-plaintexthighlighter-rouge">really-bad-code.c</code>.</p><p>Apartoftheuseof<codeclass="language-plaintexthighlighter-rouge">gets()</code>,thisisanicelittlestringmanipulationprogramthatusesanumberofotherClibrarycallsthatareofinterest.</p><p><strong>Example:<ahref="/engs50/Examples/buffer-overflow.c">buffer-overflow.c</a></strong></p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cm">/*File:buffer-overflow.cDescription:Thisisabadprogram!Butit'sfun.Thebasicideaofoftheprogramtoinputandmanipulatestringsusingarraysofcharsisfun.However,thereisaseriousflawintheprogram.Thebookusesthefunctiongets().Thisisaseriouslydangerousfunctioncall.DON'TUSEIT.Revisedcodetakenfrompg.457(Program9.5)(Bronson)"FirstBookonANSIC"*/</span><spanclass="cp">#include&lt;stdio.h&gt;#include&lt;string.h&gt;</span><spanclass="cm">/*requiredforthestringfunctionlibrary*/</span><spanclass="cp"></span><spanclass="cp">#defineMAXELS50</span><spanclass="kt">int</span><spanclass="nf">main</span><spanclass="p">()</span><spanclass="p">{</span><spanclass="kt">char</span><spanclass="n">string1</span><spanclass="p">[</span><spanclass="n">MAXELS</span><spanclass="p">]</span><spanclass="o">=</span><spanclass="s">"Hello"</span><spanclass="p">;</span><spanclass="kt">char</span><spanclass="n">string2</span><spanclass="p">[</span><spanclass="n">MAXELS</span><spanclass="p">]</span><spanclass="o">=</span><spanclass="s">"Hellothere"</span><spanclass="p">;</span><spanclass="kt">int</span><spanclass="n">n</span><spanclass="p">;</span><spanclass="n">n</span><spanclass="o">=</span><spanclass="n">strcmp</span><spanclass="p">(</span><spanclass="n">string1</span><spanclass="p">,</span><spanclass="n">string2</span><spanclass="p">);</span><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">n</span><spanclass="o">&lt;</span><spanclass="mi">0</span><spanclass="p">)</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"%sislessthan-%s</span><spanclass="se">\n\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">string1</span><spanclass="p">,</span><spanclass="n">string2</span><spanclass="p">);</span><spanclass="k">else</span><spanclass="k">if</span><spanclass="p">(</span><spanclass="n">n</span><spanclass="o">==</span><spanclass="mi">0</span><spanclass="p">)</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"%sisequalto-%s</span><spanclass="se">\n\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">string1</span><spanclass="p">,</span><spanclass="n">string2</span><spanclass="p">);</span><spanclass="k">else</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"%sisgreaterthan-%s</span><spanclass="se">\n\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">string1</span><spanclass="p">,</span><spanclass="n">string2</span><spanclass="p">);</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Thelengthofstring1is%dcharacters</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">strlen</span><spanclass="p">(</span><spanclass="n">string1</span><spanclass="p">));</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Thelengthofstring2is%dcharacters</span><spanclass="se">\n\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">strlen</span><spanclass="p">(</span><spanclass="n">string2</span><spanclass="p">));</span><spanclass="n">strcat</span><spanclass="p">(</span><spanclass="n">string1</span><spanclass="p">,</span><spanclass="s">"thereWorld!"</span><spanclass="p">);</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Afterconcatenation,string1containsthestringvalue</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">);</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"%s</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">string1</span><spanclass="p">);</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Thelengthofthisstringis%dcharacters</span><spanclass="se">\n\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">strlen</span><spanclass="p">(</span><spanclass="n">string1</span><spanclass="p">));</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Pleaseenteralineoftextforstring2,max%dcharacters:"</span><spanclass="p">,</span><spanclass="k">sizeof</span><spanclass="p">(</span><spanclass="n">string2</span><spanclass="p">));</span><spanclass="cm">/*Inthecodebelowcommentanduncommentthegets()code*/</span><spanclass="n">gets</span><spanclass="p">(</span><spanclass="n">string2</span><spanclass="p">);</span><spanclass="cm">/*Inthecodebelowcommentanduncommentthefgets()codesegment*/</span><spanclass="cm">/*fgets(string2,sizeof(string2),stdin);*/</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Thanksforentering%s</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">string2</span><spanclass="p">);</span><spanclass="n">strcpy</span><spanclass="p">(</span><spanclass="n">string1</span><spanclass="p">,</span><spanclass="n">string2</span><spanclass="p">);</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Aftercopyingstring2tostring1"</span><spanclass="p">);</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"thestringvalueinstring1is:</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">);</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"%s</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">string1</span><spanclass="p">);</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Thelengthofstring1is%dcharacters</span><spanclass="se">\n\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">strlen</span><spanclass="p">(</span><spanclass="n">string1</span><spanclass="p">));</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"</span><spanclass="se">\n</span><spanclass="s">Thestartingaddressofthestring1stringis:%x</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">string1</span><spanclass="p">);</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"</span><spanclass="se">\n</span><spanclass="s">Thestartingaddressofthestring2stringis:%x</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">string2</span><spanclass="p">);</span><spanclass="k">return</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="p">}</span></code></pre></div></div><p>Let’slookattheoutputwhenrunningtheprogramfirstwith<codeclass="language-plaintexthighlighter-rouge">gets()</code>andthenwiththesafer<codeclass="language-plaintexthighlighter-rouge">fgets()</code>.Ifwerunthecodewith<codeclass="language-plaintexthighlighter-rouge">gets()</code>wegetasegmentationfaultwhenentering51characters.</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="nv">$</span>./buffer-overflowHelloislessthan-HellothereThelengthofstring1is5charactersThelengthofstring2is11charactersAfterconcatenation,string1containsthestringvalueHellothereWorld!Thelengthofthisstringis18characterswarning:thisprogramusesgets<spanclass="o">()</span>,whichisunsafe.Pleaseenteralineoftext<spanclass="k">for</span>string2,max50characters:01234678901234567890123456789012345678901234567890Thanks<spanclass="k">for</span>entering01234678901234567890123456789012345678901234567890Segmentationfault</code></pre></div></div><p>Ifwecommentout<codeclass="language-plaintexthighlighter-rouge">gets()</code>,uncomment<codeclass="language-plaintexthighlighter-rouge">fgets()</code>,andrecompilewearesafe:</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="nv">$</span>./buffer-overflowHelloislessthan-HellothereThelengthofstring1is5charactersThelengthofstring2is11charactersAfterconcatenation,string1containsthestringvalueHellothereWorld!Thelengthofthisstringis18charactersPleaseenteralineoftext<spanclass="k">for</span>string2,max50characters:01234678901234567890123456789012345678901234567890Thanks<spanclass="k">for</span>entering012346789012345678901234567890123456789012345678Aftercopyingstring2tostring1thestringvalue<spanclass="k">in</span>string1is:012346789012345678901234567890123456789012345678Thelengthofstring1is49charactersThestartingaddressofthestring1stringis:bffff87aThestartingaddressofthestring2stringis:bffff848</code></pre></div></div><p>Thisisabadprogram!Thebasicideaoftheprogramistoacceptandmanipulatestringsusingarraysofchars.However,thereisaseriousflawintheprogram.Someolderbooksusethefunction<codeclass="language-plaintexthighlighter-rouge">gets()</code>;itisaseriouslydangerousfunctioncall.<strong><em>Donotusegets()!</em></strong></p><p>Theprogramdefinesabufferof50charsinlength.Theusertypesincharactersfromthekeyboardandtheyarewrittentothebuffer,i.e.,<codeclass="language-plaintexthighlighter-rouge">string1</code>and<codeclass="language-plaintexthighlighter-rouge">string2</code>.</p><p>Theinputparameterto<codeclass="language-plaintexthighlighter-rouge">gets()</code>isthenameofthearray(whichisapointer-moreonpointerslater).Thefunctiondoesnotknowhowlongthearrayis!Itisimpossibletodeterminethelengthof<codeclass="language-plaintexthighlighter-rouge">string1</code>and<codeclass="language-plaintexthighlighter-rouge">string2</code>fromapointeralone.</p><p>Ifweruntheprogramandtypein50characters,includingthenewline,allissafe.Butifwetype51or60ormorecharacters,weoverrunor‘overflow’thebuffer.Weendupwritingpasttheendofthearray!Thisoverflowcanhappenevenwithoutcallinganunsafefunctionsuchas<codeclass="language-plaintexthighlighter-rouge">gets()</code>,soit’sanimportantlessontolearn.Bufferoverflowscanhaveratherspectacularresults!</p><p>Bugsoftenhappenatboundaryconditionsandoneimportantboundaryistheendofthearray.Ifweoverwrite<codeclass="language-plaintexthighlighter-rouge">string1</code>,wemightwriteinto<codeclass="language-plaintexthighlighter-rouge">string2</code>.Recallthat,byconvention,Cstringsareterminatedby<codeclass="language-plaintexthighlighter-rouge">\0</code>(aka<codeclass="language-plaintexthighlighter-rouge">NULL</code>).Ifthischaracterisoverwrittenthenapieceofcodeoperatingonthearraywillkeeponscanninguntilitfindsa<codeclass="language-plaintexthighlighter-rouge">\0</code>.</p><p>Ifwerunthiscodeandtypeinmorethan50chars(aswedidabove)anythingcanhappen;forexample:1)thecodecouldworkwithnovisibleaffectofthebug;2)immediatesegfault;3)segfaultlaterinthecodestream;3)mistakeshappeninunrelatedfunctions(e.g.,strcat()inourcode).</p><p>Somebooksuse<codeclass="language-plaintexthighlighter-rouge">gets()</code>andpromoteitsuse.JustSayNO!Instead,usethesafe<codeclass="language-plaintexthighlighter-rouge">fgets()</code>asitisabuffer-safefunction.Itsprototypeis:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="kt">char</span><spanclass="o">*</span><spanclass="nf">fgets</span><spanclass="p">(</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">s</span><spanclass="p">,</span><spanclass="kt">int</span><spanclass="n">size</span><spanclass="p">,</span><spanclass="kt">FILE</span><spanclass="o">*</span><spanclass="n">stream</span><spanclass="p">);</span></code></pre></div></div><p>Itrequiresyoutoidentify<em>whichfile</em>,yes,butmoreimportantly,itrequiresyoutoidentifythesizeofthecharacterbufferintowhichitwillwritecharacters;<codeclass="language-plaintexthighlighter-rouge">fgets</code>willnotwritemorecharactersthanthesizeofthebuffer.</p><p>Example:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="n">fgets</span><spanclass="p">(</span><spanclass="n">buf</span><spanclass="p">,</span><spanclass="k">sizeof</span><spanclass="p">(</span><spanclass="n">buf</span><spanclass="p">),</span><spanclass="n">stdin</span><spanclass="p">);</span></code></pre></div></div><p>The<codeclass="language-plaintexthighlighter-rouge">fgets()</code>functionshallreadbytesfromstreamintothearraypointedtoby<codeclass="language-plaintexthighlighter-rouge">buf</code>,until<codeclass="language-plaintexthighlighter-rouge">sizeof(buf)-1</code>bytesareread,oranewlineisreadandtransferredto<codeclass="language-plaintexthighlighter-rouge">buf</code>,oranend-of-fileconditionisencountered.ThestringisthenterminatedwithaNULLbyte.</p><p>Wereplace<codeclass="language-plaintexthighlighter-rouge">gets()</code>with<codeclass="language-plaintexthighlighter-rouge">fgets()</code>intheabovecodeandnowwearesafe.</p><p>Ifyouwanttoreadinjustcharactersfromthescreenoneatatimeyoucanuse<codeclass="language-plaintexthighlighter-rouge">getchar()</code>.Butrememberthatifyouenteracharacteronthekeyboardandthenhitreturn,the‘newline’characterisalsointhestream.Takealookatthiscodeandrunit.</p><p><strong>Example:<ahref="/engs50/Examples/getchar.c">getchar.c</a></strong></p><h3id="the-coperating-system-interface">TheC/Operatingsysteminterface</h3><p>Operatingsystems(suchasUnix,Linux,MacOSX,andWindows10)willalwaysexecuteCprogramsbycallingthefunction<codeclass="language-plaintexthighlighter-rouge">main()</code>withtwoparameters:</p><ol><li>anintegerargumentcount(<codeclass="language-plaintexthighlighter-rouge">argc</code>),</li><li>anarrayofpointerstocharacterstrings(<codeclass="language-plaintexthighlighter-rouge">argv</code>)</li></ol><p>Noticethatinmanypreviousexampleswe’veprovideda<codeclass="language-plaintexthighlighter-rouge">main()</code>withoutanyparametersall.RememberthatCdoesnotcheckthelengthandtypesofparameterlistsoffunctionswhichitdoesnotknowaboutonesthathavenotbeenprototyped.Inaddition,thefunction<codeclass="language-plaintexthighlighter-rouge">main()</code>hasnospecialsignificancetotheCcompiler.Onlythelinkerrequires<codeclass="language-plaintexthighlighter-rouge">main()</code>astheapparentstartingpointofanyprogram.MostCprogramsyouseewilllooklikethis:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="kt">int</span><spanclass="n">main</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="n">argc</span><spanclass="p">,</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">argv</span><spanclass="p">[])</span></code></pre></div></div><p>IprefertodeclarethemasconstantsowelettheCcompilerhelpusavoidmodifyingtheseinputparameters:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="kt">int</span><spanclass="n">main</span><spanclass="p">(</span><spanclass="k">const</span><spanclass="kt">int</span><spanclass="n">argc</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">argv</span><spanclass="p">[])</span></code></pre></div></div><p>Sohowdoyouget“anarrayofpointerstochar”outofamouthfullike<codeclass="language-plaintexthighlighter-rouge">char*argv[]</code>?It’sallaboutoperatorprecedence.</p><p>Thehighestprecedenceofeverythingisvariablenamesandliterals.Thenthenexthighestprecedencethingisthesubscriptingoperator<codeclass="language-plaintexthighlighter-rouge">[]</code>.Abouthalfwaydownthelistofoperatorsistheindirectionoperator<codeclass="language-plaintexthighlighter-rouge">*</code>,soitsprecedenceislowerthanthesubscriptingoperator.Thus,theabovedeclarationisreadas:<em>argvisanarrayofpointerstochar</em>.</p><p>Thefollowingprogramprintsoutitscommandline.Notethat<codeclass="language-plaintexthighlighter-rouge">argv[0]</code>isthecommandnameand<codeclass="language-plaintexthighlighter-rouge">argv[1]</code>…<codeclass="language-plaintexthighlighter-rouge">argv[N]</code>arethecommand-linearguments(afteranyexpansionorsubsitutionsdonebytheshell).</p><p><strong>Example:<ahref="/engs50/Examples/arguments.c">arguments.c</a></strong></p><p>Lookatthefollowingsnippet:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include&lt;stdio.h&gt;</span><spanclass="kt">int</span><spanclass="nf">main</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="n">argc</span><spanclass="p">,</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">argv</span><spanclass="p">[])</span><spanclass="p">{</span><spanclass="kt">int</span><spanclass="n">i</span><spanclass="p">;</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"%ditemswereinputonthecommandline</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">argc</span><spanclass="p">);</span><spanclass="k">for</span><spanclass="p">(</span><spanclass="n">i</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">&lt;</span><spanclass="n">argc</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">++</span><spanclass="p">)</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"argument%dis%s</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">i</span><spanclass="p">,</span><spanclass="n">argv</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">]);</span><spanclass="p">}</span></code></pre></div></div><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="o">[</span>cs50@flume]<spanclass="nv">$</span>./arguments1two3.14154<spanclass="s2">"Five"</span>6itemswereinputonthe<spanclass="nb">command</span>lineargument0is./argumentsargument1is1argument2istwoargument3is3.1415argument4is4argument5isFive<spanclass="o">[</span>cs50@flume]<spanclass="err">$</span></code></pre></div></div><p>Wedeclared<codeclass="language-plaintexthighlighter-rouge">argv</code>as<em>arrayofpointerstochar</em>.Foranygivenargument<em>i</em>,<codeclass="language-plaintexthighlighter-rouge">argv[i]</code>isoneofthosepointers;thatis,<codeclass="language-plaintexthighlighter-rouge">argv[i]</code>isoftype<codeclass="language-plaintexthighlighter-rouge">char*</code>.Wecanpassthatpointertofunctionslike<codeclass="language-plaintexthighlighter-rouge">printf</code>,whereveritexpectsastring.</p><p>Amoreinterestingsnippetofcodeshowsthatthecommandlineisstoredasasetofstringargumentsinmemoryandthattheaddressofthelocationofthefirstcharacterforeachstringargumentisstoredinthe<codeclass="language-plaintexthighlighter-rouge">argv[]</code>array.</p><p><strong><em>Example:<ahref="/engs50/Examples/command.c">command.c</a></em></strong></p><p>Letslookatthefollowingsnippet:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include</span><spanclass="kt">int</span><spanclass="nf">main</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="n">argc</span><spanclass="p">,</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">argv</span><spanclass="p">[])</span><spanclass="p">{</span><spanclass="kt">int</span><spanclass="n">i</span><spanclass="p">;</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"</span><spanclass="se">\n</span><spanclass="s">Thenumberofitemsonthecommandlineis%d</span><spanclass="se">\n\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">argc</span><spanclass="p">);</span><spanclass="k">for</span><spanclass="p">(</span><spanclass="n">i</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">&lt;</span><spanclass="n">argc</span><spanclass="p">;</span><spanclass="n">i</span><spanclass="o">++</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"argument%dis</span><spanclass="se">\"</span><spanclass="s">%s</span><spanclass="se">\"</span><spanclass="s">`</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">i</span><spanclass="p">,</span><spanclass="n">argv</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">]);</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Theaddressstoredinargv[%d]is%p</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">i</span><spanclass="p">,</span><spanclass="n">argv</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">]);</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Thefirstcharacterpointedtothereis</span><spanclass="se">\'</span><spanclass="s">%c</span><spanclass="se">\'\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="o">*</span><spanclass="n">argv</span><spanclass="p">[</span><spanclass="n">i</span><spanclass="p">]);</span><spanclass="p">}</span><spanclass="k">return</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="p">}</span></code></pre></div></div><p>Ifyouruntheprogramyouwillseethefollowingoutput-notethatthehexadecimaladdressofthefirstcharacterforeachargumentisprintedouttoo.</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="o">[</span>cs50@flume]<spanclass="nv">$</span>./commandhellocs50readytogoskating?Thenumberofitemsonthe<spanclass="nb">command</span>lineis7argument0is<spanclass="s2">"./command"</span><spanclass="sb">`</span>Theaddressstored<spanclass="k">in</span>argv[0]is0x7fff5d056376Thefirstcharacterpointedtothereis<spanclass="s1">'.'</span>argument1is<spanclass="s2">"hello"</span><spanclass="sb">`</span>Theaddressstored<spanclass="k">in</span>argv[1]is0x7fff5d056380Thefirstcharacterpointedtothereis<spanclass="s1">'h'</span>argument2is<spanclass="s2">"cs50"</span><spanclass="sb">`</span>Theaddressstored<spanclass="k">in</span>argv[2]is0x7fff5d056386Thefirstcharacterpointedtothereis<spanclass="s1">'c'</span>argument3is<spanclass="s2">"ready"</span><spanclass="sb">`</span>Theaddressstored<spanclass="k">in</span>argv[3]is0x7fff5d05638bThefirstcharacterpointedtothereis<spanclass="s1">'r'</span>argument4is<spanclass="s2">"to"</span><spanclass="sb">`</span>Theaddressstored<spanclass="k">in</span>argv[4]is0x7fff5d056391Thefirstcharacterpointedtothereis<spanclass="s1">'t'</span>argument5is<spanclass="s2">"go"</span><spanclass="sb">`</span>Theaddressstored<spanclass="k">in</span>argv[5]is0x7fff5d056394Thefirstcharacterpointedtothereis<spanclass="s1">'g'</span>argument6is<spanclass="s2">"skating?"</span><spanclass="sb">`</span>Theaddressstored<spanclass="k">in</span>argv[6]is0x7fff5d056397Thefirstcharacterpointedtothereis<spanclass="s1">'s'</span><spanclass="o">[</span>cs50@flume]<spanclass="err">$</span></code></pre></div></div><p>AcommonactivityatthestartofaCprogramistosearchtheargumentlistforcommand-lineswitchescommencingwithadashcharacter.Theremainingcommand-lineparametersareoftenassumedtobefilenames.</p><p><strong><em>Example:<ahref="/engs50/Examples/nosort.c">nosort.c</a></em></strong></p><p>Theprogrambelowparsesthecommandlineofa<codeclass="language-plaintexthighlighter-rouge">sort</code>command.Itwillprocess:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="n">nosort</span><spanclass="o">-</span><spanclass="n">n</span><spanclass="n">nosort</span><spanclass="o">-</span><spanclass="n">r</span><spanclass="n">nosort</span><spanclass="o">-</span><spanclass="n">u</span><spanclass="n">nosort</span><spanclass="o">-</span><spanclass="n">r</span><spanclass="o">-</span><spanclass="n">u</span><spanclass="o">-</span><spanclass="n">n</span></code></pre></div></div><p>Anyvariationoftheaboveisalsosupported,butnot:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="n">nosort</span><spanclass="o">-</span><spanclass="n">run</span></code></pre></div></div><p>Anexampleofdefensiveprogramming:Iftheuserentersabadoptionthentheuserisinformedwithausagemessage:</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="o">[</span>cs50@tahoe]./nosort<spanclass="nt">-y</span>Usage:badoption<spanclass="nt">-y</span></code></pre></div></div><p>Theprogram<ahref="/engs50/Examples/nosort.c">nosort.c</a>(nosortcodeisincluded,onlythecommandlineparsing)lookslikethis:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="o">/</span><spanclass="n">The</span><spanclass="n">program</span><spanclass="n">parses</span><spanclass="n">the</span><spanclass="n">input</span><spanclass="n">switches</span><spanclass="n">to</span><spanclass="n">sort</span><spanclass="c1">//supportscommandlinessuchassort-r-u-n</span><spanclass="c1">//butnotsort-runwhichyouwillneedfor</span><spanclass="c1">//theLab3</span><spanclass="cp">#include&lt;stdio.h&gt;</span><spanclass="kt">int</span><spanclass="nf">main</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="n">argc</span><spanclass="p">,</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">argv</span><spanclass="p">[])</span><spanclass="p">{</span><spanclass="kt">int</span><spanclass="n">unique</span><spanclass="p">,</span><spanclass="n">reverse</span><spanclass="p">,</span><spanclass="n">numsort</span><spanclass="p">;</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">progname</span><spanclass="p">;</span><spanclass="n">progname</span><spanclass="o">=</span><spanclass="n">argv</span><spanclass="p">[</span><spanclass="mi">0</span><spanclass="p">];</span><spanclass="n">numsort</span><spanclass="o">=</span><spanclass="n">reverse</span><spanclass="o">=</span><spanclass="n">unique</span><spanclass="o">=</span><spanclass="mi">0</span><spanclass="p">;</span><spanclass="c1">//runthroughtheinputcommandslooking</span><spanclass="c1">//forswitches</span><spanclass="k">while</span><spanclass="p">((</span><spanclass="n">argc</span><spanclass="o">&gt;</span><spanclass="mi">1</span><spanclass="p">)</span><spanclass="o">&amp;&amp;</span><spanclass="p">(</span><spanclass="n">argv</span><spanclass="p">[</span><spanclass="mi">1</span><spanclass="p">][</span><spanclass="mi">0</span><spanclass="p">]</span><spanclass="o">==</span><spanclass="sc">'-'</span><spanclass="p">))</span><spanclass="p">{</span><spanclass="c1">//argv[1][1]istheactualoption</span><spanclass="k">switch</span><spanclass="p">(</span><spanclass="n">argv</span><spanclass="p">[</span><spanclass="mi">1</span><spanclass="p">][</span><spanclass="mi">1</span><spanclass="p">])</span><spanclass="p">{</span><spanclass="k">case</span><spanclass="sc">'r'</span><spanclass="p">:</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Switchis%c</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">argv</span><spanclass="p">[</span><spanclass="mi">1</span><spanclass="p">][</span><spanclass="mi">1</span><spanclass="p">]);</span><spanclass="n">reverse</span><spanclass="o">=</span><spanclass="mi">1</span><spanclass="p">;</span><spanclass="k">break</span><spanclass="p">;</span><spanclass="k">case</span><spanclass="sc">'u'</span><spanclass="p">:</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Switchis%c</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">argv</span><spanclass="p">[</span><spanclass="mi">1</span><spanclass="p">][</span><spanclass="mi">1</span><spanclass="p">]);</span><spanclass="n">unique</span><spanclass="o">=</span><spanclass="mi">1</span><spanclass="p">;</span><spanclass="k">break</span><spanclass="p">;</span><spanclass="k">case</span><spanclass="sc">'n'</span><spanclass="p">:</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Switchis%c</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">argv</span><spanclass="p">[</span><spanclass="mi">1</span><spanclass="p">][</span><spanclass="mi">1</span><spanclass="p">]);</span><spanclass="n">numsort</span><spanclass="o">=</span><spanclass="mi">1</span><spanclass="p">;</span><spanclass="k">break</span><spanclass="p">;</span><spanclass="nl">default:</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Error:badoption</span><spanclass="se">\'</span><spanclass="s">%c</span><spanclass="se">\'\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">argv</span><spanclass="p">[</span><spanclass="mi">1</span><spanclass="p">][</span><spanclass="mi">1</span><spanclass="p">]);</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Usage:%s[-r][-u][-n]</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">progname</span><spanclass="p">);</span><spanclass="k">break</span><spanclass="p">;</span><spanclass="p">}</span><spanclass="c1">//decrementthenumberofargumentsleft</span><spanclass="c1">//incrementtheargvpointertothenextargument</span><spanclass="n">argc</span><spanclass="o">--</span><spanclass="p">;</span><spanclass="n">argv</span><spanclass="o">++</span><spanclass="p">;</span><spanclass="p">}</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"numsort=%d,unique=%d,reverse=%d</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">numsort</span><spanclass="p">,</span><spanclass="n">unique</span><spanclass="p">,</span><spanclass="n">reverse</span><spanclass="p">);</span><spanclass="c1">//otherprocessing</span><spanclass="k">return</span><spanclass="p">(</span><spanclass="mi">0</span><spanclass="p">);</span><spanclass="p">}</span></code></pre></div></div><p>TheabovedemonstratesseveralthingsaboutC,andCidioms:</p><ol><li>the<codeclass="language-plaintexthighlighter-rouge">switch</code>statementanditscomponent<codeclass="language-plaintexthighlighter-rouge">case</code>and<codeclass="language-plaintexthighlighter-rouge">break</code>statements.</li><li>theuseof<codeclass="language-plaintexthighlighter-rouge">argc--;argv++</code>asawayofsteppingthroughanarray.<ul><li>Note:eachtime<codeclass="language-plaintexthighlighter-rouge">argv</code>isincremented,itchangesthebaseaddressonwhichasubscriptlike<codeclass="language-plaintexthighlighter-rouge">[1]</code>isinterpreted.Ineffect,subscriptingisaformof‘pointerarithmetic’,addingthenecessaryamounttothebasepointersoastofindtheaddressoftherelevantiteminthearray.Moreonthatwhenwediscusspointers.</li></ul></li><li>thesyntaxforsubscriptingatwo-dimensionalarray,like<codeclass="language-plaintexthighlighter-rouge">argv[1][0]</code>.<ul><li>Note:<codeclass="language-plaintexthighlighter-rouge">argv</code>isnot(strictlyspeaking)atwo-dimensionalarray,andCdoesnot(strictlyspeaking)supportmulti-dimensionalarrays;thefirstsubscriptselectsoneofthe<codeclass="language-plaintexthighlighter-rouge">char*</code>pointersinthearray-of-pointersthatis<codeclass="language-plaintexthighlighter-rouge">argv</code>;thesecondsubscriptselectsoneofthecharactersinthearrayofcharacterstowhichthatpointerrefers.</li></ul></li></ol><h2id="getopt-">getopt()</h2><p><strong><em>Example:<ahref="/engs50/Examples/nosort-getopt.c">nosort-getopt.c</a></em></strong></p><p>Anotherwaytoprocesscommand-lineargumentsistousethe<codeclass="language-plaintexthighlighter-rouge">getopt()</code>Clibraryfunction,whichisspecificallydesignedtohelpparseswitchesinthecommon<codeclass="language-plaintexthighlighter-rouge">-s</code>and<codeclass="language-plaintexthighlighter-rouge">--switch</code>formats.See<codeclass="language-plaintexthighlighter-rouge">man3getopt</code>.</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="c1">//Theprogramparsestheinputswitchestosort</span><spanclass="c1">//supportscommandlinessuchassort-r-u-n</span><spanclass="c1">//butnotsort-run</span><spanclass="cp">#include&lt;stdio.h&gt;#include&lt;unistd.h&gt;#include&lt;getopt.h&gt;</span><spanclass="cm">/*howdidweknowtoincludethis???"man3getopt"*/</span><spanclass="cp"></span><spanclass="kt">int</span><spanclass="nf">main</span><spanclass="p">(</span><spanclass="kt">int</span><spanclass="n">argc</span><spanclass="p">,</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">argv</span><spanclass="p">[])</span><spanclass="p">{</span><spanclass="kt">int</span><spanclass="n">unique</span><spanclass="p">,</span><spanclass="n">reverse</span><spanclass="p">,</span><spanclass="n">numsort</span><spanclass="p">;</span><spanclass="kt">char</span><spanclass="n">ch</span><spanclass="p">;</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">progname</span><spanclass="p">;</span><spanclass="n">progname</span><spanclass="o">=</span><spanclass="n">argv</span><spanclass="p">[</span><spanclass="mi">0</span><spanclass="p">];</span><spanclass="c1">//runthroughtheinputcommandslooking</span><spanclass="c1">//forswitchesusingthehandy-dandygetoptfunction!</span><spanclass="k">while</span><spanclass="p">((</span><spanclass="n">ch</span><spanclass="o">=</span><spanclass="n">getopt</span><spanclass="p">(</span><spanclass="n">argc</span><spanclass="p">,</span><spanclass="n">argv</span><spanclass="p">,</span><spanclass="s">"run"</span><spanclass="p">))</span><spanclass="o">!=</span><spanclass="o">-</span><spanclass="mi">1</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="k">switch</span><spanclass="p">(</span><spanclass="n">ch</span><spanclass="p">)</span><spanclass="p">{</span><spanclass="c1">//while((argc&gt;1)&amp;&amp;(argv[1][0]=='-')){</span><spanclass="k">case</span><spanclass="sc">'r'</span><spanclass="p">:</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Switchis%c</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">ch</span><spanclass="p">);</span><spanclass="n">reverse</span><spanclass="o">=</span><spanclass="mi">1</span><spanclass="p">;</span><spanclass="k">break</span><spanclass="p">;</span><spanclass="k">case</span><spanclass="sc">'u'</span><spanclass="p">:</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Switchis%c</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">ch</span><spanclass="p">);</span><spanclass="n">unique</span><spanclass="o">=</span><spanclass="mi">1</span><spanclass="p">;</span><spanclass="k">break</span><spanclass="p">;</span><spanclass="k">case</span><spanclass="sc">'n'</span><spanclass="p">:</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Switchis%c</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">ch</span><spanclass="p">);</span><spanclass="n">numsort</span><spanclass="o">=</span><spanclass="mi">1</span><spanclass="p">;</span><spanclass="k">break</span><spanclass="p">;</span><spanclass="nl">default:</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Error:badoption</span><spanclass="se">\'</span><spanclass="s">%c</span><spanclass="se">\'\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">ch</span><spanclass="p">);</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"Usage:%s[-r][-u][-n]</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">progname</span><spanclass="p">);</span><spanclass="k">break</span><spanclass="p">;</span><spanclass="p">}</span><spanclass="p">}</span><spanclass="n">printf</span><spanclass="p">(</span><spanclass="s">"numsort=%d,unique=%d,reverse=%d</span><spanclass="se">\n</span><spanclass="s">"</span><spanclass="p">,</span><spanclass="n">numsort</span><spanclass="p">,</span><spanclass="n">unique</span><spanclass="p">,</span><spanclass="n">reverse</span><spanclass="p">);</span><spanclass="c1">//otherprocessing</span><spanclass="k">return</span><spanclass="p">(</span><spanclass="mi">0</span><spanclass="p">);</span><spanclass="p">}</span></code></pre></div></div></div></article></div></div><footerclass="site-footer"><divclass="wrapper"><h2class="footer-heading">Engs50(CS50)--DartmouthCollege</h2><p><fontsize=-1>ThisversionofthecourseisbaseduponthosedesignedbyProfessorsPalmer,Kotz,Zhou,Campbell,andBalkcom.Iamdeeplyindebtedtotheseoutstandingeducators.--<ahref="https://engineering.dartmouth.edu/people/faculty/stephen-taylor/">StephenTaylor</a></font></p><p><small>Thispagewaslastupdatedon<strong>2023-01-05</strong>at<strong>11:31</strong>.</small></p></div></footer></body></html>
