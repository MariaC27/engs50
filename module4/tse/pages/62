https://thayer.github.io/engs50/Notes/makefiles/preprocessor.html
3
15355
<!DOCTYPEhtml><html><head><metacharset="utf-8"><metahttp-equiv="X-UA-Compatible"content="IE=edge"><metaname="viewport"content="width=device-width,initial-scale=1"><title>Extra-theCpreprocessor</title><metaname="description"content="InEngs50youwilllearnhowtodesign&buildlarge,reliable,maintainable,andunderstandablesoftwaresystems.IntheprocessyouwilllearntoprograminCwithUnixdevelopmenttools."><linkrel="shortcuticon"href="/engs50/50.png"/><linkrel="stylesheet"href="/engs50/css/main.css"><linkrel="canonical"href="/engs50/Notes/makefiles/preprocessor.html"></head><body><headerclass="site-header"><aclass="site-title"href="/engs50/"><imgwidth=48align=centersrc="/engs50/50.png"alt="icon">Engs50(CS50)</a><navclass="site-nav">[<ahref="/engs50/Labs/">Labs</a>][<ahref="/engs50/Notes/">Notes</a>][<ahref="/engs50/Reading/">Reading</a>][<ahref="/engs50/Resources/">Resources</a>][<ahref="/engs50/Examples/">Examples</a>]</nav></header><divclass="page-content"><divclass="wrapper"><articleclass="post"><headerclass="post-header"><h1class="post-title">Extra-theCpreprocessor</h1></header><divclass="post-content"><p>Youwillnoticethatafewlines,typicallynearthebeginningofaCprogram,beginwiththecharacter<codeclass="language-plaintexthighlighter-rouge">#</code>,aka‘hash’,‘pound’,or‘sharp’.Theselinesare“Cpreprocessordirectives”andareactuallyinstructions(directives)toaspecialprogramcalledthe“Cpreprocessor”.Asitsnamesuggests,theCpreprocessorprocessesthetextofaCprogram<em>before</em>theCcompilerseesit.Thepreprocessordirectives(allbeginningwith<codeclass="language-plaintexthighlighter-rouge">#</code>)shouldbeginincolumn1(the1stcolumn)ofanysourcelineonwhichtheyappear.</p><p>TheCpreprocessorisverypowerfulbutwewilluseitonlyforveryspecificpurposes.Mostoftheothercommonusesforpreprocessordirectivesareeitherbeyondthescopeofthiscourse,orunnecessary(andbadstyle)inmodernC.</p><h2id="header-file-inclusion">Headerfileinclusion</h2><p>The<codeclass="language-plaintexthighlighter-rouge">#include</code>directive,oftenpronounced“poundinclude”,shouldappearatthebeginningofaCprogram.Itisusedtoliterallycopytheentirecontentsofanotherfileatthepointofthe<codeclass="language-plaintexthighlighter-rouge">#include</code>directive.Acommon<codeclass="language-plaintexthighlighter-rouge">#include</code>directive,seenatthebeginningofmostCfiles,is</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include&lt;stdio.h&gt;</span></code></pre></div></div><p>Thisdirectiveindicatesthatthecontentsofthefilenamed<codeclass="language-plaintexthighlighter-rouge">stdio.h</code>shouldbeincludedatthispoint(thedirectiveisreplacedwiththecontents).Thereisnolimittothenumberoflinesthatmaybeincludedwiththisdirectiveand,infact,thecontentsoftheincludedfilemaycontainother<codeclass="language-plaintexthighlighter-rouge">#include</code>directiveswhicharehandledinthesameway.Wesaythattheinclusionsarenestedand,ofcourse,careshouldbetakentoavoidduplicateor,evenworse,recursivenestings!</p><p>Theexampleusing<codeclass="language-plaintexthighlighter-rouge">&lt;stdio.h&gt;</code>,above,demonstratestwoimportantpoints.Thefilenameitselfappearsbetweenthecharacters<codeclass="language-plaintexthighlighter-rouge">&lt;&gt;</code>.Theuseofthesecharactersindicatesthattheenclosedfilenameshouldbefoundinthestandardincludedirectory<codeclass="language-plaintexthighlighter-rouge">/usr/include</code>.Therequiredfileisthen<codeclass="language-plaintexthighlighter-rouge">/usr/include/stdio.h</code>.</p><p>Thestandardincludefilesareusedtoconsistentlyprovidesystem-widedatastructuresordeclarationsthatarerequiredinmanydifferentfiles.Byhavingthestandardincludefilescentrallylocatedandgloballyavailable,allCprogrammersareguaranteedofusingthesamedatastructuresanddeclarationsthatthey(all)require.</p><p>Alternatively,the<codeclass="language-plaintexthighlighter-rouge">""</code>charactersmayalsobeused,asinthefollowingexample:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include"readline.h"</span></code></pre></div></div><p>toincludethecontentsofthefile<codeclass="language-plaintexthighlighter-rouge">readline.h</code>atthecorrectpointintheCprogram.Becausedouble-quotesareused,thefileissoughtinthepresentworkingdirectory,thatis<codeclass="language-plaintexthighlighter-rouge">./readline.h</code>.Thefilenameindouble-quotescanactuallybeapathname,ifyoursourcecodeisspreadoverseveraldirectories;forexample,</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include"includes/readline.h"</span></code></pre></div></div><p>Inbothoftheaboveexamplestheindicatedfilenamehadthe<codeclass="language-plaintexthighlighter-rouge">.h</code>extension.Whereaswehavepreviouslysaidthattheextensionof<codeclass="language-plaintexthighlighter-rouge">.c</code>isexpectedbytheCcompiler,theuseof<codeclass="language-plaintexthighlighter-rouge">.h</code>isonlyaconventionwithinUNIX.The<codeclass="language-plaintexthighlighter-rouge">.h</code>indicatesthatthefileisa<em>headerfile</em>,becausetheygenerallycontaininformationrequiredatthehead(beginning)ofaCprogram.Headerfilestypically(andshould)containonly<em>declarations</em>ofCconstructs,likedatatypes,datastructures,andconstantsusedthroughouttheCprogram.Inparticular,<strong>includefilesshouldcontainonly<em>declarations</em>,andno<em>definitions</em>,ofvariablesorfunctions.</strong></p><p>Youcanalsogivethecompileracommand-lineflagtoidentifyadirectorywhereitcansearchfornon-standardincludefiles.If,forexample,youmovedyour<codeclass="language-plaintexthighlighter-rouge">includes</code>directoryupalevel,youmightwrite</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include"readline.h"</span></code></pre></div></div><p>butthentellthecompilerwheretolookforsuchfiles:</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>mygcc<spanclass="nt">-I</span>../includes<spanclass="nt">-c</span>readline.c</code></pre></div></div><h2id="conditional-compilation">Conditionalcompilation</h2><p>AnotheroftenusedfeatureoftheCpreprocessoristheuseof“conditionalcompilationdirectives”.</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#defineDEBUG</span><spanclass="p">...</span><spanclass="cp">#ifdefDEBUG</span><spanclass="p">...</span><spanclass="n">code</span><spanclass="k">for</span><spanclass="n">use</span><spanclass="n">when</span><spanclass="n">DEBUG</span><spanclass="n">is</span><spanclass="n">defined</span><spanclass="cp">#else//DEBUG</span><spanclass="p">...</span><spanclass="n">code</span><spanclass="k">for</span><spanclass="n">use</span><spanclass="n">when</span><spanclass="n">DEBUG</span><spanclass="n">is</span><spanclass="n">not</span><spanclass="n">defined</span><spanclass="cp">#endif//DEBUG</span></code></pre></div></div><p>TheCpreprocessoractuallyincludessomecode,andstripsoutothercode,beforepassingittotheCcompiler.Intheaboveexample,wedefinethepreprocessorconstantcalled<codeclass="language-plaintexthighlighter-rouge">DEBUG</code>,andlatertestitsvaluewith<codeclass="language-plaintexthighlighter-rouge">#ifdef</code>.Noticetheuseofcommentsonthe<codeclass="language-plaintexthighlighter-rouge">#else</code>and<codeclass="language-plaintexthighlighter-rouge">#endif</code>linestohelpreadability.</p><p>Theaboveexampleisacommonapproachfordebugging.Evenbetter,removethe<codeclass="language-plaintexthighlighter-rouge">#DEBUG</code>lineandletthatbedeterminedbytheprogrammeratcompiletime:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#ifdefDEBUG</span><spanclass="p">...</span><spanclass="n">code</span><spanclass="k">for</span><spanclass="n">use</span><spanclass="n">when</span><spanclass="n">DEBUG</span><spanclass="n">is</span><spanclass="n">defined</span><spanclass="cp">#else//DEBUG</span><spanclass="p">...</span><spanclass="n">code</span><spanclass="k">for</span><spanclass="n">use</span><spanclass="n">when</span><spanclass="n">DEBUG</span><spanclass="n">is</span><spanclass="n">not</span><spanclass="n">defined</span><spanclass="cp">#endif//DEBUG</span></code></pre></div></div><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>mygcc<spanclass="nt">-DDEBUG</span>program.c<spanclass="nt">-o</span>program</code></pre></div></div><p>Theprogramcompiles(andbehaves)differentlywithandwithoutthecompile-timeswitch<codeclass="language-plaintexthighlighter-rouge">-DDEBUG</code>.</p><h2id="header-file-protection">Headerfileprotection</h2><p>Theoneplacewereally<em>must</em>useconditionalcompilationisinheaderfiles.Lookatourexample<ahref="/engs50/Examples/readline.h">readline.h</a>:</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cm">/**readline.h-autilityfunctiontosafelyreadonelineofinput*Seereadline.cfordocumentation.**DavidKotz,April2016*/</span><spanclass="cp">#ifndef__READLINE_H__#define__READLINE_H__</span><spanclass="cp">#include&lt;stdbool.h&gt;</span><spanclass="k">extern</span><spanclass="n">bool</span><spanclass="nf">readline</span><spanclass="p">(</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">buf</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">int</span><spanclass="n">len</span><spanclass="p">);</span><spanclass="cp">#endif//__READLINE_H__</span></code></pre></div></div><p>Iftheconstant<codeclass="language-plaintexthighlighter-rouge">__READLINE_H__</code>isnotyetdefined(<codeclass="language-plaintexthighlighter-rouge">#ifndef</code>)thenincudetheremainderofthefileupto<codeclass="language-plaintexthighlighter-rouge">#endif</code>.Thefirstthingitdoesistodefinethat<codeclass="language-plaintexthighlighter-rouge">__READLINE_H__</code>.Thus,ifaCfilehappenstoinclude<codeclass="language-plaintexthighlighter-rouge">readline.h</code>twice,whichcanhappenincomplexprogramswhenheaderfilesincludeotherincludefiles,theCcompilerwon’tseemultiplecopiesoftheincludedcode.Thatis,</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include"readline.h"#include"readline.h"</span></code></pre></div></div><p>doesnottranslateto</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="k">extern</span><spanclass="n">bool</span><spanclass="nf">readline</span><spanclass="p">(</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">buf</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">int</span><spanclass="n">len</span><spanclass="p">);</span><spanclass="k">extern</span><spanclass="n">bool</span><spanclass="nf">readline</span><spanclass="p">(</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">buf</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">int</span><spanclass="n">len</span><spanclass="p">);</span></code></pre></div></div><p>butjustto</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="k">extern</span><spanclass="n">bool</span><spanclass="nf">readline</span><spanclass="p">(</span><spanclass="kt">char</span><spanclass="o">*</span><spanclass="n">buf</span><spanclass="p">,</span><spanclass="k">const</span><spanclass="kt">int</span><spanclass="n">len</span><spanclass="p">);</span></code></pre></div></div><p>Thestandardfile<codeclass="language-plaintexthighlighter-rouge">stdbool</code>protectsitselfthisway,whichisgood,becauseaprogrammermaywellwriteintoher<codeclass="language-plaintexthighlighter-rouge">.c</code>filesomethinglike</p><divclass="language-chighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="cp">#include&lt;stdio.h&gt;#include&lt;stdbool.h&gt;#include&lt;readline.h&gt;</span></code></pre></div></div><p>and,because<codeclass="language-plaintexthighlighter-rouge">readline.h</code>alsoincludes<codeclass="language-plaintexthighlighter-rouge">stdbool.h</code>,thelattermightgetimportedseveraltimeswithoutthatprotection.</p><blockquote><p>Whydowecare?SomeincludefilescansafelyberepeatedandtheCcompilerwon’tcare;actually,<codeclass="language-plaintexthighlighter-rouge">readline.h</code>isonelikethat.Butothers,e.g.,iftheydeclareglobalconstants,willcausethecompilertocomplainaboutmultiply-definedvariables.</p></blockquote><h3id="testing-header-files">Testingheaderfiles</h3><p>Howcanyoubesureyourheaderfilehasincludedalltherelevantheaderfiles?Compileit!Tocompiletheheaderfile<codeclass="language-plaintexthighlighter-rouge">foo.h</code>byitself,</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>mygcc<spanclass="nt">-c</span>foo.h</code></pre></div></div><p>Ifthereareanyerrors,it’sprobabybecauseyouforgotoneoftheincludefiles.</p><p>Whendone,<codeclass="language-plaintexthighlighter-rouge">rmfoo.gch</code>tocleanupthecompiler’soutput.</p></div></article></div></div><footerclass="site-footer"><divclass="wrapper"><h2class="footer-heading">Engs50(CS50)--DartmouthCollege</h2><p><fontsize=-1>ThisversionofthecourseisbaseduponthosedesignedbyProfessorsPalmer,Kotz,Zhou,Campbell,andBalkcom.Iamdeeplyindebtedtotheseoutstandingeducators.--<ahref="https://engineering.dartmouth.edu/people/faculty/stephen-taylor/">StephenTaylor</a></font></p><p><small>Thispagewaslastupdatedon<strong>2023-01-05</strong>at<strong>11:31</strong>.</small></p></div></footer></body></html>
