https://thayer.github.io/engs50/Notes/makefiles/
2
42416
<!DOCTYPEhtml><html><head><metacharset="utf-8"><metahttp-equiv="X-UA-Compatible"content="IE=edge"><metaname="viewport"content="width=device-width,initial-scale=1"><title>ModulesandMakefiles</title><metaname="description"content="InEngs50youwilllearnhowtodesign&buildlarge,reliable,maintainable,andunderstandablesoftwaresystems.IntheprocessyouwilllearntoprograminCwithUnixdevelopmenttools."><linkrel="shortcuticon"href="/engs50/50.png"/><linkrel="stylesheet"href="/engs50/css/main.css"><linkrel="canonical"href="/engs50/Notes/makefiles/"></head><body><headerclass="site-header"><aclass="site-title"href="/engs50/"><imgwidth=48align=centersrc="/engs50/50.png"alt="icon">Engs50(CS50)</a><navclass="site-nav">[<ahref="/engs50/Labs/">Labs</a>][<ahref="/engs50/Notes/">Notes</a>][<ahref="/engs50/Reading/">Reading</a>][<ahref="/engs50/Resources/">Resources</a>][<ahref="/engs50/Examples/">Examples</a>]</nav></header><divclass="page-content"><divclass="wrapper"><articleclass="post"><headerclass="post-header"><h1class="post-title">ModulesandMakefiles</h1></header><divclass="post-content"><h3id="goals">Goals</h3><ul><li>howtocreateare-usable“module”byseparatingitscodeintoapairof<codeclass="language-plaintexthighlighter-rouge">.c</code>and<codeclass="language-plaintexthighlighter-rouge">.h</code>files.</li><li>theMakecommandanditsMakefiles-neverrun<codeclass="language-plaintexthighlighter-rouge">mygcc</code>again!</li></ul><p>Foradeeperdiveinto<codeclass="language-plaintexthighlighter-rouge">make</code>,seethe<ahref="extra/">lectureextra</a>.</p><p>ForalookattheCpreprocessor,seeanother<ahref="preprocessor.html">lectureextra</a>.</p><p>FormoreaboutCheaderfiles,seeanother<ahref="headerfiles.html">lectureextra</a>.</p><!--Youcanviewtoday'sTerminal[script](/engs50/Notes/makefiles/script.txt),althoughalotoftheactionwasinemacsandthusnotshown.--><h2id="extracting-bag-from-names">Extractingbagfromnames</h2><p>Recallour<ahref="/engs50/Examples/names9.c">names9</a>programfromthepriorlecture,inwhichweconvertedthe<em>linkedlist</em>datastructure,specifictothatparticularapplication’sneeds,intoageneric<em>bag</em>datastructure.Ournextstepistoextractthat<em>bag</em>intoaseparatesetoffiles,withaclearlydefinedinterface,soitcanbeusedbythisprogramandeasilyre-usedbyotherprograms.Givenitsdesign,it’salsoeasytocreatemultiplebags,unliketheoriginaldesign(<ahref="/engs50/Examples/names5.c">names5.c</a>)thatwasconstrainedtoasingleapplication-specificlinkedlist.</p><p>Todaywedividethecode<ahref="/engs50/Examples/names9.c">names9</a>intothreefiles:</p><ul><li><codeclass="language-plaintexthighlighter-rouge">namesA.c</code>-anewversionoftheapplication;</li><li><codeclass="language-plaintexthighlighter-rouge">bag.h</code>-declarationsthatformtheinterfacetohe<em>bag</em>module</li><li><codeclass="language-plaintexthighlighter-rouge">bag.c</code>-functionsthatdefinetheimplementationofthe<em>bag</em>module.</li></ul><p>Sincewealsousethe<codeclass="language-plaintexthighlighter-rouge">readlinep</code>module,wemustnowcompiletheprogramwithacommandlike</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>mygccnames.cbag.creadlinep.c-onames</code></pre></div></div><h2id="make-and-makefiles">MakeandMakefiles</h2><p>Asourprogramsbecomemorecomplex,it’sincreasinglytedious(anderror-prone)totypethecommandstocompilethecodeintoanexecutable.Indeed,foralargecodebase,itcantakeminutesorhourstocompileallthecode.Fortunately,thereisagoodtooltomakeanexecutablefromacollectionofsourcefiles,incrementallyrecompilingonlythosefilesthathavebeenupdated.</p><p>The<codeclass="language-plaintexthighlighter-rouge">make</code>commandreadsaconfigurationfilecalled<codeclass="language-plaintexthighlighter-rouge">Makefile</code>–writteninitsownlittlelanguage–andexecutesshellcommandsasneededtocompileallthesourcefilesandlinkthemintoanexecutable.Beforewelookataspecificexample,let’sfirsttakeacloserlookatthecompilationprocess.</p><p>FromnowonwewillcompileallourprogramswithMake.</p><h3id="compiling-and-linking">Compilingandlinking</h3><p>The<em>compiler</em>reads“sourcecode”(fromafilelike<codeclass="language-plaintexthighlighter-rouge">bag.c</code>containingCcode)andoutputs“assemblycode”(inafile<codeclass="language-plaintexthighlighter-rouge">bag.s</code>containingassemblylanguage).Assemblylanguageisstillahuman-readabletextfile,butnowlistsmachine-levelinstructionsinsteadofCstatements.Inotherwords,thecompilertranslatessourcecodeintoassemblycode.TheUnixcommandfortheCcompileris<codeclass="language-plaintexthighlighter-rouge">cc</code>,thoughweuseonefromGnucalled<codeclass="language-plaintexthighlighter-rouge">gcc</code>.</p><p>The<em>assembler</em>readsassemblycodeandoutputs“objectcode”,translatingthetextualmachineinstructionsintobinarymachineinstructions.It’sstillnotacompleteprogram,notyet“executable”bytheoperatingsystem.TheUnixcommandfortheassembleris<codeclass="language-plaintexthighlighter-rouge">as</code>.</p><p>The<em>linker</em>readsobjectcode(fromfileslike<codeclass="language-plaintexthighlighter-rouge">names.o</code>,<codeclass="language-plaintexthighlighter-rouge">bag.o</code>,and<codeclass="language-plaintexthighlighter-rouge">readlinep.o</code>,andfromlibraries)andlinksthemalltogetherintoan“executable”file,readyfortheOStorun(execute)whenweaskbashtorunit.Itdoesnottranslatethecodefurther–bothinputandoutputinmachineinstructionsinabinaryformat–it“links”thepiecestogether,resolvingreferencesinonefiletofunctionsandvariablesinotherfiles.Forexample,<codeclass="language-plaintexthighlighter-rouge">names.o</code>mayreferenceafunction<codeclass="language-plaintexthighlighter-rouge">bag_new()</code>,whichthelinkerfindsin<codeclass="language-plaintexthighlighter-rouge">bag.o</code>.Thelinkerassignsmemoryaddressesforallthecodeandglobalvariables,readyforloadingintomemorywhentheprogramisexecuted.TheUnixcommandforthelinkeris<codeclass="language-plaintexthighlighter-rouge">ld</code>(shortfor“load”,nottobeconfusedwith<codeclass="language-plaintexthighlighter-rouge">ln</code>,whichlinksfilestogether).</p><blockquote><p>However,<em><ahref="http://programmer.97things.oreilly.com/wiki/index.php/The_Linker_Is_not_a_Magical_Program">Thelinkerisnotamagicalprogram</a></em>.</p></blockquote><p>The<codeclass="language-plaintexthighlighter-rouge">gcc</code>commandisactuallyprettysophisticated,andinaformlike</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>mygccnames.cbag.creadlinep.c-onames</code></pre></div></div><p>willactuallyrunfourcommands,somethinglikethis:</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>gcc-cnames.cgcc-cbag.cgcc-creadlinep.cldnames.obag.oreadlinep.olibraries...-onamesrmnames.obag.oreadlinep.o</code></pre></div></div><p>Eachofthefirstthreeaskto“compile”(<codeclass="language-plaintexthighlighter-rouge">-c</code>)thelistedCsourcefile;bydefault,thecompilercreatesanobject-codefileinafileofthesamenamewiththeextension<codeclass="language-plaintexthighlighter-rouge">.o</code>.(Underthehood,it’sactuallyrunningboththecompilerandthentheassembler,brieflycreatingtheintermediate<codeclass="language-plaintexthighlighter-rouge">.s</code>file.)Thefourthlinelinksthosethreeobjectfilestogetherwithacollectionofcommonlibraries,toproducetheexecutableprogram;theoriginal<codeclass="language-plaintexthighlighter-rouge">-onames</code>commandlineargumentisplacedhere.Finally,itcleansupbyremovingtheintermediateobjectfiles.</p><p>Again,foralargecodebase,itisawasteofefforttorecompileeveryCsourcefileeverytime,evenifonlyoneofthemhaschangedsincethelastcompilation.</p><h3id="dependencies">Dependencies</h3><p>Tooptimizethisprocessithelpstoknowwhichfilesdependoneachother.Clearly,eachobjectfiledependsonitssourcefile:</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>names.o:names.cbag.o:bag.creadlinep.o:readlinep.c</code></pre></div></div><p>andtheprogramdependsonalltheobjectfilesthatwilllinkedtogether:</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>names:names.obag.oreadlinep.o</code></pre></div></div><p>(Italsodependsonthestandardlibraries,butweassumetheyneverchangeandwewon’tworryaboutthem.)</p><p>Actually,ifwelookdeeper,theobjectfilesalsodependontheincludefiles,becausethosefilesarevirtuallyincludedintheCsourcefiles–thecompilerreadstheincludefile<codeclass="language-plaintexthighlighter-rouge">bag.h</code>whenitsees<codeclass="language-plaintexthighlighter-rouge">#include"bag.h"</code>atsomepointwhilereadingtheCsourcecode.Thuswealsohavedependencies</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>names.o:bag.hreadlinep.hbag.o:bag.hreadlinep.o:readlinep.h</code></pre></div></div><p>(Theyalsoinclude<codeclass="language-plaintexthighlighter-rouge">.h</code>filesforstandardlibraries,butagain,weassumethoseneverchangeandthuswedon’tworryaboutthemasdependencies.)</p><p>Theabovedependenciesareactuallywrittenin<codeclass="language-plaintexthighlighter-rouge">make</code>language.Thenametotheleftofeachcolonisthe<em>target</em>,andthename(s)totherightofthecolonarethe<em>dependencies</em>.Thetargetdependsonthedependencies,andshouldberebuiltifanyofthedependencieschange.Noticethatdependenciesaretransitive:<codeclass="language-plaintexthighlighter-rouge">names</code>dependson<codeclass="language-plaintexthighlighter-rouge">bag.o</code>whichdependson<codeclass="language-plaintexthighlighter-rouge">bag.c</code>and<codeclass="language-plaintexthighlighter-rouge">bag.h</code>,andsoforth.Makebuildsthe<em>dependencytree</em>andrebuildsfilesasneeded.</p><p>Buthowdoesitknowhowtorebuildonefilefromanother?Weaddacommand(orlistofcommands),indentedwithatab,ontheline(s)thatimmediatelyfollowthetarget.Weputallthistogetherinafilecalled<codeclass="language-plaintexthighlighter-rouge">Makefile</code>:</p><divclass="language-makehighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="c">#executabledependsonobjectfiles</span><spanclass="nl">names</span><spanclass="o">:</span><spanclass="nf">names.obag.oreadlinep.o</span><spanclass="err">gcc</span><spanclass="err">names.o</span><spanclass="err">bag.o</span><spanclass="err">readlinep.o</span><spanclass="err">-o</span><spanclass="err">names</span><spanclass="c">#objectfilesdependonsourcefiles</span><spanclass="nl">names.o</span><spanclass="o">:</span><spanclass="nf">names.c</span><spanclass="nl">bag.o</span><spanclass="o">:</span><spanclass="nf">bag.c</span><spanclass="nl">readlinep.o</span><spanclass="o">:</span><spanclass="nf">readlinep.c</span><spanclass="c">#objectfilesalsodependonincludefiles</span><spanclass="nl">names.o</span><spanclass="o">:</span><spanclass="nf">bag.hreadlinep.h</span><spanclass="nl">bag.o</span><spanclass="o">:</span><spanclass="nf">bag.h</span><spanclass="nl">readlinep.o</span><spanclass="o">:</span><spanclass="nf">readlinep.h</span><spanclass="c">#howtocompilesourceintoobjectfiles</span><spanclass="nl">names.o</span><spanclass="o">:</span><spanclass="err">gcc</span><spanclass="err">-c</span><spanclass="err">names.c</span><spanclass="nl">bag.o</span><spanclass="o">:</span><spanclass="err">gcc</span><spanclass="err">-c</span><spanclass="err">bag.c</span><spanclass="nl">readlinep.o</span><spanclass="o">:</span><spanclass="err">gcc</span><spanclass="err">-c</span><spanclass="err">readlinep.c</span></code></pre></div></div><blockquote><p>Important:commandsmustbeindentedwitha<em>tab</em>character,notspaces,orMakewillnotrecognizethemascommands.Someeditorsaresavvyandinsertatabwhenyoutypeatab,andsometrytobecleverandchangethetabtospaces.Makerequiresatab.</p></blockquote><p>Now,allwehavetodoistype<codeclass="language-plaintexthighlighter-rouge">make</code>,andletitdoallthework!</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="nv">$</span><spanclass="nb">ls</span>Makefilebag.hnames.txtreadlinep.hbag.cnames.creadlinep.c<spanclass="nv">$</span>makegcc<spanclass="nt">-c</span>names.cgcc<spanclass="nt">-c</span>bag.cgcc<spanclass="nt">-c</span>readlinep.cgccnames.obag.oreadlinep.o<spanclass="nt">-o</span>names<spanclass="nv">$</span>makemake:<spanclass="sb">`</span>names<spanclass="s1">'isuptodate.$touchbag.h$makegcc-cnames.cgcc-cbag.cgccnames.obag.oreadlinep.o-onames$lsMakefilebag.onames.oreadlinep.hbag.cnames*names.txtreadlinep.obag.hnames.creadlinep.c$</span></code></pre></div></div><p>Noticethat,thefirsttimeIran<codeclass="language-plaintexthighlighter-rouge">make</code>itcompiledeachsourcefileintoanobjectfile,andthencompiledthemalltogether.(Weuse<codeclass="language-plaintexthighlighter-rouge">gcc</code>tolinkobjectfiles,becauseit’sverycomplicatedtosetupaproper<codeclass="language-plaintexthighlighter-rouge">ld</code>commandline,and<codeclass="language-plaintexthighlighter-rouge">gcc</code>issmartenoughtorealizeitneedonlyrunthelinkerwhenit’sonlygivenobjectfiles.)</p><p>Onmysecondrunof<codeclass="language-plaintexthighlighter-rouge">make</code>,itcheckedthedependencytreeanddecidedtherewasnothingtoberebuilt.Timesaved!</p><p>Ipretendedtoedit<codeclass="language-plaintexthighlighter-rouge">bag.h</code>by“touching”it-the<codeclass="language-plaintexthighlighter-rouge">touch</code>commandjustupdatesthemodificationdateofthefile(s)namedonitscommandline,creatingfilesifneededbutmakingnochangestothecontentofexistingfiles.</p><p>Onmythirdrunof<codeclass="language-plaintexthighlighter-rouge">make</code>,itcheckedthedependencytreeandsawthatboth<codeclass="language-plaintexthighlighter-rouge">bag.o</code>and<codeclass="language-plaintexthighlighter-rouge">names.o</code>dependon<codeclass="language-plaintexthighlighter-rouge">bag.h</code>,soitrecompiledboth.Becausethosetwoobjectfileschanged,ithadtorebuild<codeclass="language-plaintexthighlighter-rouge">names</code>.Intheend,noticethatthe<codeclass="language-plaintexthighlighter-rouge">.o</code>filesstickaround-whichiswhy<codeclass="language-plaintexthighlighter-rouge">make</code>doesnotneedtorebuildthemeverytime.</p><p>MakeactuallyknowsaboutCandtherelationshipbetween<codeclass="language-plaintexthighlighter-rouge">.c</code>and<codeclass="language-plaintexthighlighter-rouge">.o</code>files,soseveralofthedependencieswelistedwerenotnecessarytolist.Indeed,someofthecommandswelistedarealsounnecessary:theyare<em>implicitrules</em>alreadyknowntomake.Wethusstreamlineour<codeclass="language-plaintexthighlighter-rouge">Makefile</code>:</p><divclass="language-makehighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="c">#executabledependsonobjectfiles</span><spanclass="nl">names</span><spanclass="o">:</span><spanclass="nf">names.obag.oreadlinep.o</span>gccnames.obag.oreadlinep.o<spanclass="nt">-o</span>names<spanclass="c">#objectfilesalsodependonincludefiles</span><spanclass="nl">names.o</span><spanclass="o">:</span><spanclass="nf">bag.hreadlinep.h</span><spanclass="nl">bag.o</span><spanclass="o">:</span><spanclass="nf">bag.h</span><spanclass="nl">readlinep.o</span><spanclass="o">:</span><spanclass="nf">readlinep.h</span></code></pre></div></div><p>Comparewiththeprior<codeclass="language-plaintexthighlighter-rouge">Makefile</code>andyou’llseetwowholesectionsgone.Thisnewmakefileworksjustthesame:</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="nv">$</span><spanclass="nb">ls</span>Makefilebag.cnames.creadlinep.cMakefile~bag.hnames.txtreadlinep.h<spanclass="nv">$</span>makecc<spanclass="nt">-c</span><spanclass="nt">-o</span>names.onames.ccc<spanclass="nt">-c</span><spanclass="nt">-o</span>bag.obag.ccc<spanclass="nt">-c</span><spanclass="nt">-o</span>readlinep.oreadlinep.cgccnames.obag.oreadlinep.o<spanclass="nt">-o</span>names<spanclass="nv">$</span><spanclass="nb">ls</span>Makefilebag.hnames.creadlinep.cMakefile~bag.onames.oreadlinep.hbag.cnames<spanclass="k">*</span>names.txtreadlinep.o<spanclass="err">$</span></code></pre></div></div><p>Therearetwoimportantdetails,however.First,you’llnotethatitsimplicitrulesrun<codeclass="language-plaintexthighlighter-rouge">cc</code>insteadof<codeclass="language-plaintexthighlighter-rouge">gcc</code>.Second,notethatneitherourexplicitrulesnorMake’simplicitrulespasstheCS50-standardcommand-lineargumentstotheCcompiler.WeneedtotellMakeaboutthose.WecanassigntosomeMakevariablestoinformMakeaboutourpreferredcompilerandcommand-lineoptions.(Actually,Makecallsthem“macros”becausetheirvaluecannotactuallyvary.)</p><divclass="language-makehighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="nv">CC</span><spanclass="o">=</span>gcc<spanclass="nv">CFLAGS</span><spanclass="o">=</span><spanclass="nt">-Wall</span><spanclass="nt">-pedantic</span><spanclass="nt">-std</span><spanclass="o">=</span>c11<spanclass="nt">-ggdb</span><spanclass="c">#executabledependsonobjectfiles</span><spanclass="nl">names</span><spanclass="o">:</span><spanclass="nf">names.obag.oreadlinep.o</span><spanclass="nv">$(CC)</span><spanclass="nv">$(CFLAGS)</span>names.obag.oreadlinep.o<spanclass="nt">-o</span>names<spanclass="c">#objectfilesalsodependonincludefiles</span><spanclass="nl">names.o</span><spanclass="o">:</span><spanclass="nf">bag.hreadlinep.h</span><spanclass="nl">bag.o</span><spanclass="o">:</span><spanclass="nf">bag.h</span><spanclass="nl">readlinep.o</span><spanclass="o">:</span><spanclass="nf">readlinep.h</span></code></pre></div></div><p>Thefirsttwolinesassignvaluestothemacros<codeclass="language-plaintexthighlighter-rouge">CC</code>and<codeclass="language-plaintexthighlighter-rouge">CFLAGS</code>.ThesetwoparticularmacrosareknowntoMake;itwillusetheminitsimplicitrules.Tousetheminourexplicitrules,too,wehavetorefertothemexplicitly-seethecommandstorebuild<codeclass="language-plaintexthighlighter-rouge">names</code>.Noticethatthemacro-substitutionsyntaxinMakeusesadollarsign-likebash-butrequiresparenthesesaroundthemacroname-unlikebash.</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="nv">$</span>makegcc<spanclass="nt">-Wall</span><spanclass="nt">-pedantic</span><spanclass="nt">-std</span><spanclass="o">=</span>c11<spanclass="nt">-ggdb</span><spanclass="nt">-c</span><spanclass="nt">-o</span>names.onames.cgcc<spanclass="nt">-Wall</span><spanclass="nt">-pedantic</span><spanclass="nt">-std</span><spanclass="o">=</span>c11<spanclass="nt">-ggdb</span><spanclass="nt">-c</span><spanclass="nt">-o</span>bag.obag.cgcc<spanclass="nt">-Wall</span><spanclass="nt">-pedantic</span><spanclass="nt">-std</span><spanclass="o">=</span>c11<spanclass="nt">-ggdb</span><spanclass="nt">-c</span><spanclass="nt">-o</span>readlinep.oreadlinep.cgcc<spanclass="nt">-Wall</span><spanclass="nt">-pedantic</span><spanclass="nt">-std</span><spanclass="o">=</span>c11<spanclass="nt">-ggdb</span>names.obag.oreadlinep.o<spanclass="nt">-o</span>names</code></pre></div></div><p>Thistime,Makeusedthe<codeclass="language-plaintexthighlighter-rouge">gcc</code>compilerandallourflags.</p><h2id="which-target">Whichtarget?</h2><p>Sofar,we’vejusttyped<codeclass="language-plaintexthighlighter-rouge">make</code>atthecommandline.WecanactuallytellMaketobuildaparticulartargetbynamingit:</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="nv">$</span>makereadlinep.ogcc<spanclass="nt">-Wall</span><spanclass="nt">-pedantic</span><spanclass="nt">-std</span><spanclass="o">=</span>c11<spanclass="nt">-ggdb</span><spanclass="nt">-c</span><spanclass="nt">-o</span>readlinep.oreadlinep.c</code></pre></div></div><p>Whengivennotarget(s)onthecommandline,Makechoosesthefirsttargetthathascommands.Inour<codeclass="language-plaintexthighlighter-rouge">Makefile</code>,thatwas<codeclass="language-plaintexthighlighter-rouge">names</code>-whichiswhyweputitfirst.Inacomplex<codeclass="language-plaintexthighlighter-rouge">Makefile</code>,itiscommontoplaceatargetnamed<codeclass="language-plaintexthighlighter-rouge">all</code>first,withadependency(list)thatindicateswhichtarget(list)isactuallydesiredwhenonetypes<codeclass="language-plaintexthighlighter-rouge">makeall</code>orjust<codeclass="language-plaintexthighlighter-rouge">make</code>.</p><blockquote><p>Thisisa<em>phonytarget</em>,becausetheresultof<codeclass="language-plaintexthighlighter-rouge">makeall</code>isnevertoproduceafilecalled<codeclass="language-plaintexthighlighter-rouge">all</code>.That’sok-itspurposeistodirectMaketowardthetarget(s)wewantittobuild.</p></blockquote><h2id="cleaning-up">Cleaningup</h2><p>We’vetaughtMakehowtobuildourprogram-nowlet’steachithowtocleanup.Byconvention,everygood<codeclass="language-plaintexthighlighter-rouge">Makefile</code>hasatargetcalled<codeclass="language-plaintexthighlighter-rouge">clean</code>.Let’sextendtheabove<codeclass="language-plaintexthighlighter-rouge">Makefile</code>(byconvention,the<codeclass="language-plaintexthighlighter-rouge">clean</code>rulegoesatthebottomofthefile):</p><divclass="language-makehighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="nl">clean</span><spanclass="o">:</span><spanclass="nb">rm</span><spanclass="nt">-f</span>names<spanclass="nb">rm</span><spanclass="nt">-f</span><spanclass="k">*</span>~<spanclass="k">*</span>.o<spanclass="nb">rm</span><spanclass="nt">-rf</span><spanclass="k">*</span>.dSYM</code></pre></div></div><p>The<codeclass="language-plaintexthighlighter-rouge">-f</code>flag(“force”)asks<codeclass="language-plaintexthighlighter-rouge">rm</code>toexitwithsuccessevenifitfails-e.g.,iftherearenofilesbythosenamestoberemoved.The<codeclass="language-plaintexthighlighter-rouge">-r</code>flag(“recursive”)removesadirectoryanditscontents.Thesecommandsremovethe<codeclass="language-plaintexthighlighter-rouge">names</code>executable,andtheobjectfiles<codeclass="language-plaintexthighlighter-rouge">*.o</code>,andtheemacsbackupfiles<codeclass="language-plaintexthighlighter-rouge">~</code>,andthedSYMdirectory<codeclass="language-plaintexthighlighter-rouge">gcc</code>createsinsupportof<codeclass="language-plaintexthighlighter-rouge">gdb</code>.</p><p>Lookhowwellitcleansup!</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="nv">$</span><spanclass="nb">ls</span>Makefilebag.hnames.creadlinep.cMakefile~bag.onames.oreadlinep.hbag.cnames<spanclass="k">*</span>names.txtreadlinep.o<spanclass="nv">$</span>makeclean<spanclass="nb">rm</span><spanclass="nt">-f</span>names<spanclass="nb">rm</span><spanclass="nt">-f</span><spanclass="k">*</span>~<spanclass="k">*</span>.o<spanclass="nb">rm</span><spanclass="nt">-rf</span><spanclass="k">*</span>.dSYM<spanclass="nv">$</span><spanclass="nb">ls</span>Makefilebag.hnames.txtreadlinep.hbag.cnames.creadlinep.c</code></pre></div></div><p>InsomeMakefiles,you’llseetheauthorexplicitlytellMakethatthisruleis“phony”:</p><divclass="language-makehighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="nl">.PHONY</span><spanclass="o">:</span><spanclass="nf">clean</span></code></pre></div></div><h2id="more-on-macros">Moreonmacros</h2><p>AnysymbolthatisdefinedinaMakefilelikethis</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>NAME=VALUE</code></pre></div></div><p>iscalledamacro.Oncedefined,youcanexpandthemusing</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>...$(NAME)...</code></pre></div></div><p>Itisalsocommontodefinemacrosforthenameoftheprogrambeingbuilt,andthelistofobjectfilesthatgointoit.Below,ourfinal<codeclass="language-plaintexthighlighter-rouge">Makefile</code>declares<codeclass="language-plaintexthighlighter-rouge">PROG</code>and<codeclass="language-plaintexthighlighter-rouge">OBJS</code>forthispurpose,andusestheminthebuildcommand.Ialsoincludedalistoflibraryfilesneededbythisprogramas<codeclass="language-plaintexthighlighter-rouge">LIBS</code>;although<codeclass="language-plaintexthighlighter-rouge">names</code>doesnotneedthemathlibrary,it’sharmlesstoask<codeclass="language-plaintexthighlighter-rouge">gcc</code>tolinkwiththemathlibraryanditservesasagoodexamplehere.(Certainlibraries,likestdioandstdlib,arelinkedwithoutyouasking.)</p><divclass="language-makehighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="nv">PROG</span><spanclass="o">=</span>names<spanclass="nv">OBJS</span><spanclass="o">=</span>names.obag.oreadlinep.o<spanclass="nv">LIBS</span><spanclass="o">=</span><spanclass="nt">-lm</span><spanclass="c">#executabledependsonobjectfiles</span><spanclass="nl">$(PROG)</span><spanclass="o">:</span><spanclass="nf">$(OBJS)</span><spanclass="nv">$(CC)</span><spanclass="nv">$(CFLAGS)</span><spanclass="nv">$(OBJS)</span><spanclass="nv">$(LIBS)</span><spanclass="nt">-o</span><spanclass="nv">$(PROG)</span></code></pre></div></div><p>Noticehowwewereabletorewritethebuildruletobefullygeneric-itnamesnospecificfiles.Indeed,youcouldusethisruleinallyourMakefiles!</p><h2id="complete-makefile">CompleteMakefile</h2><p>Withtheadditionofthephonytargetsandaniceheadercomment,we’redone:</p><divclass="language-plaintexthighlighter-rouge"><divclass="highlight"><preclass="highlight"><code>#Makefileforthe"names"programthatusesthe"bag"module.##DavidKotz-April2017CC=gccCFLAGS=-Wall-pedantic-std=c11-ggdbPROG=namesOBJS=names.obag.oreadlinep.oLIBS=-lm.PHONY:allcleanall:names#executabledependsonobjectfiles$(PROG):$(OBJS)$(CC)$(CFLAGS)$(OBJS)$(LIBS)-o$(PROG)#objectfilesdependonincludefilesnames.o:bag.hreadlinep.hbag.o:bag.hreadlinep.o:readlinep.hclean:rm-f$(PROG)rm-f*~*.orm-rf*.dSYM</code></pre></div></div><p>Themacrodefinitionsatthetopmakeiteasyforareadertoquicklyseewhatprogramwillbebuiltandfromwhatfiles.ThegnarlycompilationruleisthesameforeveryMakefile!Writtenonce,andnotlikelyneedingtobechanged.Thedependenciesatbottomaretheonlyotherpartthatvarieswiththespecificprogram.</p><p>IsavedthisMakefileas<ahref="/engs50/Examples/names-Makefile">names-Makefile</a>inourexamplesdirectory.</p><h2id="tips">Tips</h2><p>SomeotherthingstoknowaboutMake.</p><h3id="errors">Errors</h3><p>IfMakeencountersanerrorwhilecompiling,itstopsanddoesnotproceedwiththerestofthebuild.If,forexample,aCcompilationstepfailsandprintsitserrormessages,Makenoticesthis,printsamessage,andexitswitherrorstatus1.Itwillnotproceedtocompileotherfiles,orbuildtheoverallprogram.IfyouwanttoaskMaketoproceedevenafterencounteringerrors,run<codeclass="language-plaintexthighlighter-rouge">make-k</code>.</p><h3id="make-command-line">Makecommandline</h3><p>Makesupportsmanycommand-linearguments.See<codeclass="language-plaintexthighlighter-rouge">manmake</code>.</p><p><codeclass="language-plaintexthighlighter-rouge">-ffile</code>use<codeclass="language-plaintexthighlighter-rouge">file</code>insteadofdefault<codeclass="language-plaintexthighlighter-rouge">Makefile</code></p><p><codeclass="language-plaintexthighlighter-rouge">-n</code>Determinewhichcommandsneedtoberun,butdon’tactuallyexecuteanyofthem,justprintthem.</p><p><codeclass="language-plaintexthighlighter-rouge">-k</code>whileaparticulartargetandthethingsthatdependonitmighthavefailed,continuetryingtomaketheotherdependenciesofthesetargetsanyway.(Myemacscommandusesthisflag.)</p><p><codeclass="language-plaintexthighlighter-rouge">-Cdir</code>or<codeclass="language-plaintexthighlighter-rouge">--directory=dir</code>tellsMaketochangeitsworkingdirectory(asifitinternallyruns<codeclass="language-plaintexthighlighter-rouge">cddir</code>)andthenlookforaMakefile(i.e.,itwillreadfrom<codeclass="language-plaintexthighlighter-rouge">dir/Makefile</code>).ThisoptionisusefulforrunningMakeinasubdirectory.</p><h3id="automatic-variables">Automaticvariables</h3><p>Themakeutilityalsoprovidessomeuseful<ahref="http://www.gnu.org/software/make/manual/make.html#Automatic-Variables">automaticvariables</a>:</p><p><codeclass="language-plaintexthighlighter-rouge">$@</code>nameofthecurrenttarget</p><p><codeclass="language-plaintexthighlighter-rouge">$?</code>thelistofdependenciesthatarenewerthanthetarget</p><p><codeclass="language-plaintexthighlighter-rouge">$^</code>thelistofdependenciesforthistarget</p><p>Forexample,wecouldrewriteour<codeclass="language-plaintexthighlighter-rouge">names</code>targetasfollows</p><divclass="language-makehighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="nl">names</span><spanclass="o">:</span><spanclass="nf">names.obag.oreadlinep.o</span><spanclass="nv">$(CC)</span><spanclass="nv">$(CFLAGS)</span><spanclass="nv">$^</span><spanclass="nt">-o</span><spanclass="nv">$@</span></code></pre></div></div><p>Althoughuseful,Ifindthestyleweusedinourcompleteexampletobemorereadable.</p><h3id="documentation">Documentation</h3><p>Youcanviewthe<ahref="http://www.gnu.org/software/make/manual/make.html">GNUdocumentation</a>,themanualpagesfor<codeclass="language-plaintexthighlighter-rouge">make</code>,SteveTalbot’s“oldiebutgoodie”book“<em>Managingprojectswithmake</em>”<ahref="http://shop.oreilly.com/product/9780596006105.do">updated</a>in2004byRobertMecklenburgforGNU<codeclass="language-plaintexthighlighter-rouge">make</code>,oranyofthevarietyofonlinetutorialsfor<codeclass="language-plaintexthighlighter-rouge">make</code>.</p><h3id="for-emacs-users">foremacsusers</h3><p>Ifyouuseemacs,andyouinstalledourCS50customation:</p><divclass="language-bashhighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="nb">cp</span>~cs50/.emacs~</code></pre></div></div><p>Wheneveryoustartemacs,itloadsthisfile.Thisfiledefinesanewkeystroke<codeclass="language-plaintexthighlighter-rouge">^X-c</code>(ctrl-Xc),whichtellsemacstorun<codeclass="language-plaintexthighlighter-rouge">make-k</code>inaseparatesubwindow.Ifyougetanycompilererrors,typethekeystroke<codeclass="language-plaintexthighlighter-rouge">^X-`</code>(ctrl-Xbackquote)andemacsjumpstotherightfileandrightline.It’shandy!</p><blockquote><p>If<codeclass="language-plaintexthighlighter-rouge">cp</code>warnsyouaboutover-writinganexisting<codeclass="language-plaintexthighlighter-rouge">.emacs</code>youmightwanttoreconsider-perhapsyou’vecustomized<codeclass="language-plaintexthighlighter-rouge">emacs</code>beforeandyoushouldedityour<codeclass="language-plaintexthighlighter-rouge">~/.emacs</code>toincludecommandsfrom<codeclass="language-plaintexthighlighter-rouge">~cs50/.emacs</code>ratherthansimplyoverwritingit!Bestto<codeclass="language-plaintexthighlighter-rouge">diff~/cs50/.emacs~/.emacs</code>toseewhat’sdifferent,ratherthansimplyoverwritingyours.</p></blockquote><h2id="non-compilation-makefiles">Non-compilationmakefiles</h2><p>Youcanusemakefilestosolvemanyofyourdailychallengesinvolvingasequencesofdependentactions:</p><ul><li>runningtestshellscriptsduringdevelopmentandregressiontesting</li><li>creatingdocumentswithLaTeX</li><li>maintainingwebpages(stagingandlivedirectories)</li><li>automateddocumentationgeneration</li><li>sourcecodemanagement</li></ul><p>Here,forexample,istheMakefileIuseonmyMacBooktocompileandpushtheCS50websitetothewebserver:</p><divclass="language-makehighlighter-rouge"><divclass="highlight"><preclass="highlight"><code><spanclass="c">#MakefilefordeployingJekyllsite.#DavidKotz,Spring2017,borrowingfromCharlesPalmerandIraJenkins</span><spanclass="nv">DEST</span><spanclass="o">=</span>cs50@green.cs.dartmouth.edu:public_html<spanclass="nv">DESTURL</span><spanclass="o">=</span>http://www.cs.dartmouth.edu/~cs50/<spanclass="nv">LOCALURL</span><spanclass="o">=</span>http://127.0.0.1:4000<spanclass="c">#files*not*topushtothedestinationsite</span><spanclass="nv">EXCLUDES</span><spanclass="o">=</span><spanclass="nt">--exclude</span><spanclass="o">=</span>/Makefile<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span>/Comics/future<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span>/Comics/unused<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span>/examples/future<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span>/examples/unused<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span>/Labs/future<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span>/Labs/unused<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span>/Sections/future<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span>/Sections/unused<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span>/Reading/future<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span>/Reading/unused<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span>/Lectures/future<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span>/Lectures/unused<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span><spanclass="se">\*</span><spanclass="nt">-draft</span><spanclass="se">\*</span><spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span><spanclass="se">\*</span>~<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span><spanclass="se">\*</span>.o<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span>a.out<spanclass="se">\</span><spanclass="nt">--exclude</span><spanclass="o">=</span><spanclass="se">\*</span>.dSYM<spanclass="se">\</span><spanclass="nt">--delete-excluded</span><spanclass="nl">.PHONY</span><spanclass="o">:</span><spanclass="nf">builddeploylocalclean</span><spanclass="c">#justfortestingthebuild</span><spanclass="nl">build</span><spanclass="o">:</span><spanclass="p">@</span><spanclass="nb">echo</span><spanclass="s2">"</span><spanclass="se">\n</span><spanclass="s2">Building..."</span><spanclass="nb">cat</span>_config-<spanclass="o">{</span>base,cs<spanclass="o">}</span><spanclass="o">&gt;</span>_config.ymljekyllbuild<spanclass="c">#buildandpushtoCSserver</span><spanclass="nl">deploy</span><spanclass="o">:</span><spanclass="nb">cat</span>_config-<spanclass="o">{</span>base,cs<spanclass="o">}</span><spanclass="o">&gt;</span>_config.yml<spanclass="p">@</span><spanclass="nb">echo</span><spanclass="s2">"</span><spanclass="se">\n</span><spanclass="s2">BuildingforCS..."</span>jekyllbuild<spanclass="nt">--destination</span>_site<spanclass="p">-</span><spanclass="nb">rm</span>_config.yml<spanclass="err">@echo</span><spanclass="s2">"\nFixingpermissions..."</span><spanclass="err">chmod</span><spanclass="err">-R</span><spanclass="err">go-w</span><spanclass="err">_site/*</span><spanclass="err">chmod</span><spanclass="err">-R</span><spanclass="err">go+rX</span><spanclass="err">_site/*</span><spanclass="err">@echo</span><spanclass="s2">"\nAddingdata..."</span><spanclass="err">ln</span><spanclass="err">-s</span><spanclass="err">../data</span><spanclass="err">_site/data</span><spanclass="err">@echo</span><spanclass="s2">"\nDeploying..."</span><spanclass="err">rsync</span><spanclass="err">-e</span><spanclass="err">ssh</span><spanclass="err">-alcvz</span><spanclass="err">$(EXCLUDES)</span><spanclass="err">--delete</span><spanclass="err">_site/</span><spanclass="err">$(DEST)</span><spanclass="err">open</span><spanclass="err">$(DESTURL)</span><spanclass="c">#buildandopeninalocalserver(jekyllserverunsjekyllbuildfirst)</span><spanclass="nl">local</span><spanclass="o">:</span><spanclass="p">@</span><spanclass="nb">echo</span><spanclass="s2">"</span><spanclass="se">\n</span><spanclass="s2">Buildingforlocalviewing..."</span><spanclass="nb">cat</span>_config-<spanclass="o">{</span>base,local<spanclass="o">}</span><spanclass="o">&gt;</span>_config.yml<spanclass="o">(</span><spanclass="nb">sleep</span>5<spanclass="p">;</span>open<spanclass="nv">$(LOCALURL)</span><spanclass="o">)</span>&amp;jekyllserve<spanclass="nt">--incremental</span><spanclass="p">-</span><spanclass="nb">rm</span>_config.yml<spanclass="nl">clean</span><spanclass="o">:</span>jekyllclean<spanclass="p">-</span><spanclass="nb">rm</span><spanclass="nt">-f</span>_config.yml</code></pre></div></div><p>Theleading<codeclass="language-plaintexthighlighter-rouge">@</code>onsomecommandlinestells<codeclass="language-plaintexthighlighter-rouge">make</code>nottoprintthatcommandoutfortheusertosee-justtoexecutethecommand.HereIuseitfor<codeclass="language-plaintexthighlighter-rouge">echo</code>commandsbecause,ofcourse,thoseprinttheirargumentsfortheusertosee.</p><p>Theleading<codeclass="language-plaintexthighlighter-rouge">-</code>onsomecommandlinestells<codeclass="language-plaintexthighlighter-rouge">make</code>toignoretheexitstatusofthatcommand-soevenanon-zeroexitstatuswillallow<codeclass="language-plaintexthighlighter-rouge">make</code>tocontinueandnotexitwithanerrormessage.</p><h2id="activity">Activity</h2><p>Intoday’s<ahref="activity.html">activity</a>weextendthe<codeclass="language-plaintexthighlighter-rouge">Makefile</code>for<codeclass="language-plaintexthighlighter-rouge">names</code>toaddaphony<em>test</em>target.</p></div></article></div></div><footerclass="site-footer"><divclass="wrapper"><h2class="footer-heading">Engs50(CS50)--DartmouthCollege</h2><p><fontsize=-1>ThisversionofthecourseisbaseduponthosedesignedbyProfessorsPalmer,Kotz,Zhou,Campbell,andBalkcom.Iamdeeplyindebtedtotheseoutstandingeducators.--<ahref="https://engineering.dartmouth.edu/people/faculty/stephen-taylor/">StephenTaylor</a></font></p><p><small>Thispagewaslastupdatedon<strong>2023-01-05</strong>at<strong>11:31</strong>.</small></p></div></footer></body></html>
